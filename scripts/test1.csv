student,1.a,output,comment,grade,1.b,output,comment,grade,1.c,output,comment,grade,1.d,output,comment,grade,1.e,output,comment,grade,1.f,output,option_[7],output,option_[8],output,option_[16],output,comment,grade,2.a,output,comment,grade,2.b,output,comment,grade
A0041688X,"SELECT DISTINCT continent_name,continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name AS app, c.name AS country
FROM app a, country c, store s, store s1, available av, appfunctionality af
WHERE a.name = s.name
AND a.name = s1.name
AND a.name = av.name
AND av.country = c.code3
AND a.name = af.name
AND af.functionality='contact tracing'
AND s.os = 'iOS'
AND s1.os = 'Android'
AND c.continent_name = 'Europe'
GROUP BY a.name,c.name;","10, [('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Immuni', 'Italy, Italian Republic'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopCovid France', 'France, French Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"SELECT DISTINCT c.name
FROM country c, country c1
WHERE c.name = c1.name
GROUP BY c.continent_name, c.name
HAVING count(c1.name)>1;","8, [('Turkey, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Georgia',), ('Cyprus, Republic of',), ('Armenia, Republic of',)]",,,"SELECT c.name FROM country c
EXCEPT
SELECT DISTINCT c2.name from country c2;","0, []",,,"SELECT DISTINCT a.name FROM country c, app a
INNER JOIN store s1 on a.name = s1.name
AND s1.os IN (SELECT DISTINCT s2.os FROM store s2)
WHERE c.continent_name='Oceania';","395, [('AyudaCOVID',), ('Lynx-Virtual',), ('HowWeFeel',), ('U Informa COVID-19',), ('MorChana - ??????',), ('COVID-19 West Bengal Government',), ('Quidate',), ('SOS CORONA',), ('Apple COVID-19',), ('patientMpower for Covid 19 USA',)]",,,"SELECT c.name, COUNT(a.name)
FROM country c, app a, available av
WHERE av.country = c.code3
AND av.name = a.name
GROUP BY c.name
ORDER BY count(a.name) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(a.name)
FROM country c, app a, available av
WHERE av.country = c.code3
AND av.name = a.name
GROUP BY c.name
ORDER BY count(a.name) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(a.name)
FROM country c, app a, available av
WHERE av.country = c.code3
AND av.name = a.name
GROUP BY c.name
ORDER BY count(a.name) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(a.name)
FROM country c, app a, available av
WHERE av.country = c.code3
AND av.name = a.name
GROUP BY c.name
ORDER BY count(a.name) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1(
	A TEXT,
	B TEXT NOT NULL,
	C TEXT,
	D TEXT,
	PRIMARY KEY(A,C,D));
CREATE TABLE IF NOT EXISTS E2(
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL,
	J TEXT NOT NULL,
	K TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS S(
	A TEXT,
	C TEXT,
	D TEXT,
	G TEXT,
	F TEXT NOT NULL,
	PRIMARY KEY (A,C,D,G),
	FOREIGN KEY (G) REFERENCES E2(G),
	FOREIGN KEY (A,C,D) REFERENCES E1(A,C,D)
);",No output,Num. tables: 3; Num. not null: 5; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"Supposed E1 refers to local parcels to be delivered. 
A,C,D which form the primary key could be sender address, receiver name and 
receiver address respectively. B could be the name of the sender.
S could refer to the relationship 'shipped by' where F could be shipping number.
E2 could refer to the logistic companies which receive and deliver the parcels.
G which is the primary key, can be the company's registration number as it uniquely
identify the company. 
H,J,K could be company name, company address and telephone number respectively.
A parcel can only be delivered by 1 logistic company while logistic companies can
receive/deliver none or many parcels.",No output,,
A0047158B,"SELECT DISTINCT continent_name, continent_code 
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT DISTINCT a.name AS app, c.name AS country
FROM available a, country c, store s, appfunctionality af
WHERE c.continent_name = 'Europe'
AND a.name = af.name
AND af.functionality = 'contact tracing'
AND a.country = c.code3
AND a.name = s.name
AND a.name IN (
	SELECT s1.name
	FROM store s1
	WHERE s1.os = 'iOS')
AND a.name IN (
	SELECT s2.name
	FROM store s2
	WHERE s2.os = 'Android');","10, [('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Immuni', 'Italy, Italian Republic'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopCovid France', 'France, French Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"SELECT DISTINCT c.name AS name
FROM country c
WHERE c.name IN (
	SELECT c1.name
	FROM country c1
	GROUP BY c1.name
	HAVING COUNT(DISTINCT c1.continent_code)>1);","8, [('Turkey, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Georgia',), ('Cyprus, Republic of',), ('Armenia, Republic of',)]",,,"SELECT DISTINCT c1.name AS name
FROM country c1, country c2
WHERE c1.continent_code <> c2.continent_code
AND c1.name = c2.name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT a.name AS name
FROM available a, country c, store s
WHERE a.country = c.code3
AND c.continent_name = 'Oceania'
AND a.name = s.name
AND s.name IN (
	SELECT DISTINCT s1.name
	FROM store s1, store s2
	WHERE s1.os <> s2.os
	AND s1.name = s2.name
	AND s.os = s1.os);","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]",,,"SELECT c.name AS name, COUNT(DISTINCT a.name) AS count
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name AS name, COUNT(DISTINCT a.name) AS count
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","SELECT c.name AS name, COUNT(DISTINCT a.name) AS count
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","SELECT c.name AS name, COUNT(DISTINCT a.name) AS count
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE E2 (
	J TEXT NOT NULL,
	K TEXT NOT NULL,
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL);
CREATE TABLE E1S (
	A TEXT PRIMARY KEY,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	F TEXT NOT NULL,
	G TEXT NOT NULL,
	FOREIGN KEY G REFERENCES E2(G));",No output,Num. tables: 2; Num. not null: 8; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"E1S - Child Birth Certificate (Details on the child and its birth details)
A - birth certificate number (primary key, uniquely identifiable across babies)
B - date of birth
C - child's name (forms the candidate key with mother's identification number)
D - mother's identification number (forms the candidate key with child's name)
F - time of birth (each child will only correspond to 1 time of birth)
E2 - Hospitals (Details on the hospitals)
G - hospital registration number (unique identifier for hospitals)
H - hospital name
J - state
K - hospital establishment date",No output,,
A0057228A,"SELECT DISTINCT continent_name, continent_code 
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,,No output,,,"SELECT c1.name 
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_name <> c2.continent_name
GROUP BY c1.name
ORDER BY c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c1.name 
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_name <> c2.continent_name
ORDER by c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,,No output,,,,No output,,No output,,No output,,No output,,,"CREATE TABLE IF NOT EXISTS E1(
	A TEXT NOT NULL, PRIMARY KEY,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL
	PRIMARY KEY (C, D)
	);
CREATE TABLE IF NOT EXISTS E2(
	G TEXT NOT NULL, PRIMARY KEY, 
	H TEXT NOT NULL, 
	J TEXT NOT NULL,
	K TEXT NOT NULL
	);
CREATE TABLE IF NOT EXISTS S(
	F TEXT NOT NULL,
	E1 TEXT NOT NULL,
	E2 TEXT NOT NULL,
	PRIMARY KEY (E2, A, C, D),
	FOREIGN KEY (E2) REFERENCES E2(G),
	FOREIGN KEY (A, C, D) REFERENCES E1(A, C, D)
	);",No output,Num. tables: 3; Num. not null: 11; Num. foreign keys defined: 2 (CHECK CODE) ; ,,,No output,,
A0060127U,"SELECT distinct (c.continent_name) , c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name as app , c.name as country
FROM app a, store s, appfunctionality af, available av, country c
WHERE a.name=s.name
AND af.name = a.name
AND a.name= av.name
AND c.code3 = av.country
AND af.functionality = 'contact tracing'
AND c.continent_name = 'Europe'
AND s.os = 'iOS'
INTERSECT 
SELECT a.name as app , c.name as country
FROM app a, store s, appfunctionality af, available av, country c
WHERE a.name=s.name
AND af.name = a.name
AND a.name= av.name
AND c.code3 = av.country
AND af.functionality = 'contact tracing'
AND c.continent_name = 'Europe'
AND s.os = 'Android';","10, [('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"SELECT c1.name
FROM country c1
GROUP BY c1.name
HAVING count (c1.continent_name) >1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT (c1.name)
FROM country c1, country c2
WHERE c1.name=c2.name
AND c1.continent_name <> c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT distinct (a.name)
FROM app a, country c, available av, store s1, store s2
WHERE a.name=av.name
AND s1.store <> s2.store
AND s1.name=a.name
AND s2.name=a.name
AND av.country=c.code3
AND c.continent_name= 'Oceania'
AND NOT EXISTS
	(SELECT *
	FROM store s
	WHERE a.name=s.name	
	AND NOT EXISTS (SELECT *
		FROM available av
		WHERE av.country=c.code3
		AND av.name=a.name ));","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]",,,"SELECT c.name, count(*) 
FROM country c, available a
WHERE a.country=c.code3
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, count(*) 
FROM country c, available a
WHERE a.country=c.code3
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, count(*) 
FROM country c, available a
WHERE a.country=c.code3
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, count(*) 
FROM country c, available a
WHERE a.country=c.code3
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E2 (
G TEXT PRIMARY KEY,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL);
CREATE TABLE E1S (
A TEXT UNIQUE NOT NULL,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
F TEXT NOT NULL,
E2G TEXT NOT NULL,
PRIMARY KEY (C,D, E2G),
FOREIGN KEY (E2G) REFERENCES E2(G));",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"The example is E1 can be government ministry and E2 can be parliament member and S refers to head.
A: full name of government ministry
B: number of staff
C: office location
D: abbreviation of the name
F: start date
G: Name of parliament member
H: gender
J: age
K: martial status
Participation constraints: Each government ministry can only be headed by one parliament member.
Parliament members may not head any government ministry, or may head multiple government ministries.
A can be a candidate key as the ministry can be uniquely identified with the full name.",No output,,
A0080400B,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT av.name AS app, c.name AS country
FROM available av, country c, appfunctionality af, store s1, store s2
WHERE av.country = c.code3 AND
	af.name = av.name AND
	s1.name = av.name AND
	s2.name = s1.name AND
	c.continent_name = 'Europe' AND
	af.functionality = 'contact tracing' AND
	s1.os='iOS' AND
	s2.os='Android';","10, [('COVID-19.eus', 'Spain, Kingdom of'), ('Rakning C-19', 'Iceland, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Immuni', 'Italy, Italian Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('ProteGO Safe', 'Poland, Republic of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopCovid France', 'France, French Republic')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(*) >1
;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name AND
	c1.continent_name <> c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT av1.name
	FROM available av1, country c1
	WHERE av1.country = c1.code3 AND
		c1.continent_name='Oceania'
EXCEPT
SELECT Oc_app.name
FROM
	(SELECT av.name, s.os
	FROM available av, country c, store s
	WHERE av.country = c.code3 AND
		c.continent_name='Oceania'
	GROUP BY av.name, s.os) AS Oc_app
LEFT JOIN store s ON Oc_app.name = s.name AND Oc_app.os=s.os
WHERE s.name ISNULL;","8, [('Bupa Aged Care Connect',), ('MyAus COVID-19',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',)]","Aggregation is used, CHECK CODE; ",,"SELECT c.name, COUNT(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E2 (
G text PRIMARY KEY,
H text NOT NULL,
J text NOT NULL,
K text NOT NULL
);
CREATE TABLE E1S (
A text PRIMARY KEY,
B text NOT NULL,
C text NOT NULL,
D text NOT NULL,
F text NOT NULL,
G text NOT NULL REFERENCES E2(G),
UNIQUE (C,D)
);",No output,Num. tables: 2; Num. not null: 8; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"Primary Key:
A is able to identify the entities in E1 with the smallest number of attributes
hence it is a suitable primary key for E1. Similarly for G in E2.
Foreign Key:
The G columns in E1 references G in E2 as G is the primary key of E2 (hence a unique entity).
To celebrate the end of BT5101 test, the professor decide to treat each student in the class to
a Starbucks drink, each student can only get 1 Grande drink.
E1 is the list of BT5101 students class of 2021 obtained from teh school. E2 listed the drinks available at Starbucks.
Entity E1:
A: NUS student number unique to each NUS student
B: Name of student, some students may have the same name.
C: passport number
D: country of origin. Together with C, they uniquely identify the student (in case some countries use similar numbering system)
Relationship S (favorite drink)  - matches every single student to their favorite Starbucks drink.
F: any remarks regarding the drink (use soymilk etc)
Entity E2:
G: name of Starbucks drink (unique, eg. Java Chips Frappucino)
H: price of the drink (Grande)
J: calories
K: whether it is a cold or hot drink",No output,,
A0086956J,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name AS app, c.name AS country
FROM app a, available av, country c, store s1, store s2
WHERE a.name=av.name
	AND s1.name=a.name
	AND s2.name=a.name
	AND c.code3=av.country
	AND c.continent_name='Europe'
	AND s1.os='iOS' AND s2.os='Android';","42, [('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('????????? ???? ???????????', 'Russian Federation'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('CORONAVIRUS - ???????????', 'Ukraine'), ('Luscii', 'Netherlands, Kingdom of the'), ('COVID Radar', 'Netherlands, Kingdom of the')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(*) > 1","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name=c2.name
	AND c1.continent_name <> c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT a.name
FROM app a
WHERE NOT EXISTS(
	SELECT *
	FROM available av, country c
	WHERE c.code3= av.country
		AND c.continent_name='Oceania'
		AND NOT EXISTS(
			SELECT *
			FROM store s
			WHERE s.name=a.name));","395, [('StayHomeSafe',), ('VoxCOVID',), ('COVID-19 Care Tamil Nadu',), ('beSafeMoris',), ('????????? ???? ???????????',), ('NL-SOJO COVID',), ('???',), ('Coronav¡rus - HB Sa£de',), ('COVID19 Care for Media',), ('RajCovidInfo',)]",,,"CREATE VIEW tmp AS
SELECT c.name, COUNT(*) AS count
FROM available av, country c
WHERE c.code3=av.country
GROUP BY c.name;
SELECT loser.name, loser.count
FROM tmp loser LEFT OUTER JOIN tmp winner
	ON winner.name<>loser.name
	AND winner.count>loser.count
GROUP BY loser.name, loser.count
HAVING COUNT(*)<6
ORDER by loser.count DESC;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","CREATE VIEW tmp AS
SELECT c.name, COUNT(*) AS count
FROM available av, country c
WHERE c.code3=av.country
GROUP BY c.name;
SELECT loser.name, loser.count
FROM tmp loser LEFT OUTER JOIN tmp winner
	ON winner.name<>loser.name
	AND winner.count>loser.count
GROUP BY loser.name, loser.count
HAVING COUNT(*)<7
ORDER by loser.count DESC;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","CREATE VIEW tmp AS
SELECT c.name, COUNT(*) AS count
FROM available av, country c
WHERE c.code3=av.country
GROUP BY c.name;
SELECT loser.name, loser.count
FROM tmp loser LEFT OUTER JOIN tmp winner
	ON winner.name<>loser.name
	AND winner.count>loser.count
GROUP BY loser.name, loser.count
HAVING COUNT(*)<8
ORDER by loser.count DESC;","9, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","CREATE VIEW tmp AS
SELECT c.name, COUNT(*) AS count
FROM available av, country c
WHERE c.code3=av.country
GROUP BY c.name;
SELECT loser.name, loser.count
FROM tmp loser LEFT OUTER JOIN tmp winner
	ON winner.name<>loser.name
	AND winner.count>loser.count
GROUP BY loser.name, loser.count
HAVING COUNT(*)<16
ORDER by loser.count DESC;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7)]","Multiple semicolons detected, CHECK CODE; ",,"CREATE TABLE E1(
	A VARCHAR(64),
	B VARCHAR(64) NOT NULL,
	C VARCHAR(64),
	D VARCHAR(64),
	PRIMARY KEY(A,C,D));
CREATE TABLE E2(
	G VARCHAR(64) PRIMARY KEY,
	H VARCHAR(64) NOT NULL,
	J VARCHAR(64) NOT NULL,
	K VARCHAR(64) NOT NULL);
CREATE TABLE S(
	F VARCHAR(64) NOT NULL,
	A VARCHAR(64),
	C VARCHAR(64),
	D VARCHAR(64),
	G VARCHAR(64) REFERENCES E2(G)
		ON UPDATE CASCADE ON DELETE CASCADE
		DEFERRABLE INITIALLY DEFERRED,
	FOREIGN KEY(A,C,D) REFERENCES E1(A,C,D)
		ON UPDATE CASCADE ON DELETE CASCADE
		DEFERRABLE INITIALLY DEFERRED);",No output,Num. tables: 3; Num. not null: 5; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"Example that correspond to the entity-relation diagram
E1 as shopping mall, with attributes A, C, D as the 
mall's name, country and the street it is located respectively. These 3 
attributes uniquely defines a mall. The attribute B is a mall 
feature, such as the owner of the mall. 
E2 as mall's major stakeowner, the attribute G is the corporate 
or individual ID that uniquely defines the major stakeowner of 
the mall, while J,K and H are attributes of the major stakeowner,
such as the major stakeowner's type (corporate or individual),
where is the stakeowner located/headquartered and name of the 
major stakeowner.
S relates the major stakeowner to the shopping mall. The 
attribute F is since when the mall is owned by the major stakeowner.
The pariticpation constraint between E1 and S is justified because 
each mall can only have one major stakeowner, hence the (1,1) 
participation constraint. And the participation constraint
between S and E2 is justified because each corporate/individual
stakeowner could either own no mall, or multiple malls, hence
the (0,n) participation constraints.
The candidate key for E1 is (A,C,D) that uniquely defines the rows
in the table. While that for E2 is G.",No output,,
A0090966R,"select distinct continent_name, continent_code from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select distinct a.name as app, c.name as country
from available a,country c,store s1,store s2
where 
a.country = c.code3
and a.name = s1.name
and a.name = s2.name
and c.continent_name = 'Europe'
and s1.os = 'iOS'
and s2.os = 'Android';","42, [('Korona ™nlem', 'Turkey, Republic of'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Karantinas', 'Lithuania, Republic of'), ('Covidom Patient', 'France, French Republic'), ('GVA Responde', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('?????????? ??????????', 'Russian Federation')]",,,"select c.name from country c
group by c.name
having count(*) >= all (
select count(*) from country c1
group by c1.name);","1, [('Armenia, Republic of',)]",,,"select distinct name
 from country as a
 where exists (
   select 1
   from   country as a2
   where  a2.name = a.name
   and    a2.continent_name <> a.continent_name)
   order by 1;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct name from available a
where country in (select distinct code3 from country where continent_name = 'Oceania')
and not exists(select * from store s
			  where not exists (select * from store s1
							   where s1.name = a.name
							   and s1.os = s.os));","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]",,,"select a.name, case when b.cnt is null then 0 else b.cnt end as count
from
(select distinct code3, name from country) a 
left join
(select distinct country, count(name) as cnt from available
group by 1) b 
on a.code3 = b.country
order by 2 desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select a.name, case when b.cnt is null then 0 else b.cnt end as count
from
(select distinct code3, name from country) a 
left join
(select distinct country, count(name) as cnt from available
group by 1) b 
on a.code3 = b.country
order by 2 desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","select a.name, case when b.cnt is null then 0 else b.cnt end as count
from
(select distinct code3, name from country) a 
left join
(select distinct country, count(name) as cnt from available
group by 1) b 
on a.code3 = b.country
order by 2 desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","select a.name, case when b.cnt is null then 0 else b.cnt end as count
from
(select distinct code3, name from country) a 
left join
(select distinct country, count(name) as cnt from available
group by 1) b 
on a.code3 = b.country
order by 2 desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('France, French Republic', 7), ('Italy, Italian Republic', 7)]",,,"create table E1 (
A varchar(32) unique not null,
B varchar(32) not null,
C varchar(32) not null,
D varchar(32) not null,
primary key (C, D)
);
create table E2 (
G varchar(32) primary key,
H varchar(32) not null,
J varchar(32) not null,
K varchar(32) not null
);
create table S (
F varchar(32) not null,
E1C varchar(32) not null,
E1D varchar(32) not null,
E2G varchar(32) not null,
primary key (E1C, E1D, E2G),
foreign key (E1C, E1D) references E1 (C, D),
foreign key (E2G) references E2 (G)
);",No output,Num. tables: 3; Num. not null: 11; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 is a table/entity with 4 attributes. It has a combination of attributes that identify the entity,
which mean combination of C and D is the primary key of the entity. Or we also can only use A as the primary key
to identity the entity. For example, E1 can be the employee table where C and D are the employee's first name
and last name (please note there is distinct first name + last name, there is no one in the company have the same
full name which is first name + last name here). A can be the employee ID of the employee. This employee ID is unique. 
E2 is a table with 4 attributes and it has G as its primary key. For example this table can be the manager table
and G represents the employee ID of the manager. This employee ID is unique as well.
S is the relationship which joins E1 and E2. For example this can be 'manage'. In this case, one manager can manage
a team which consists 1 or more employee or this manager can be an individual contributor (manage 0 people). 
However, one employee should and only should has one manager.",No output,,
A0093740E,"select continent_name, continent_code from country","262, [('Asia', 'AS'), ('Europe', 'EU'), ('Antarctica', 'AN'), ('Africa', 'AF'), ('Oceania', 'OC'), ('Europe', 'EU'), ('Africa', 'AF'), ('North America', 'NA'), ('Europe', 'EU'), ('Asia', 'AS')]","Missing semicolon, CHECK CODE; ",,"select distinct av.name as app, av.country
from appfunctionality af, available av, country c, store s
where av.country = c.code3
and af.name = av.name
and af.functionality = 'contact tracing'
and c.continent_name ='Europe'
and s.os = 'iOS'
except
(select distinct a.name, s.os
from app a, store s
where s.os = 'iOS'
and s.os <> 'Android')","26, [('V¡rusRadar', 'HUN'), ('eRouska', 'CZE'), ('geoHealthApp Covid19 Tracker', 'CHE'), ('COVID-19.eus', 'ESP'), ('Rakning C-19', 'ISL'), ('Stopp Corona', 'AUT'), ('Radar Covid', 'ESP'), ('COVID Tracker Ireland', 'IRL'), ('Smitte|stop', 'DNK'), ('Corona-Warn-App', 'DEU')]","Missing semicolon, CHECK CODE; ",,"select c.name
from country c
group by c.name
having count (distinct c.continent_code)>1","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Missing semicolon, CHECK CODE; ",,"select c.name
from country c
group by c.name
having count (distinct c.continent_code)>1","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Aggregation is used, CHECK CODE; ",,,No output,,,"select *from
( select c.name, count (distinct av.name ) as count
	from country c, available av
	where av.country = c.code3
	group by
	c.name
    order by count desc
) a
limit 16","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]","select *from
( select c.name, count (distinct av.name ) as count
	from country c, available av
	where av.country = c.code3
	group by
	c.name
    order by count desc
) a
limit 17","17, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7), ('Germany, Federal Republic of', 7)]","select *from
( select c.name, count (distinct av.name ) as count
	from country c, available av
	where av.country = c.code3
	group by
	c.name
    order by count desc
) a
limit 18","18, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7), ('France, French Republic', 7)]","select *from
( select c.name, count (distinct av.name ) as count
	from country c, available av
	where av.country = c.code3
	group by
	c.name
    order by count desc
) a
limit 116","87, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Germany, Federal Republic of', 7), ('Argentina, Argentine Republic', 7)]","Missing semicolon, CHECK CODE; ",,"CREATE TABLE E1 (
A TEXT PRIMARY KEY,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL);
CREATE TABLE E2 (
J TEXT NOT NULL,
K TEXT NOT NULL,
G TEXT PRIMARY KEY,
H TEXT NOT NULL);
CREATE TABLE S (
F TEXT NOT NULL);",No output,Num. tables: 3; Num. not null: 7; Num. foreign keys defined: 0; ,,"E1 could be a store, A is its primary key A could be its postal code
C could be the store name, D could be owner IC of this store
S is the relationship own, and F can be the year when the owner start to own this tore
E2 could be owner, G is the primary key of owener, G could be the owner's IC
1 onwer can have multiple store, 1 store belong to 1 onwer only",No output,,
A0105567A,"SELECT DISTINCT continent_name, continent_code 
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name as app, c.name as country
FROM available a, country c, store s, appfunctionality af
WHERE a.name = s.name
AND a.name = af.name
AND a.country = c.code3
AND c.continent_code = 'EU'
AND af.functionality = 'contact tracing'
AND s.OS = 'iOS'
AND a.name in (SELECT a2.name
			  FROM available a2, store s2
			  WHERE a2. name = s2.name
			  AND s2.OS = 'Android');","10, [('COVID-19.eus', 'Spain, Kingdom of'), ('Rakning C-19', 'Iceland, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Immuni', 'Italy, Italian Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('ProteGO Safe', 'Poland, Republic of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopCovid France', 'France, French Republic')]",,,"SELECT name
FROM country
GROUP by name
HAVING count (continent_code)>1
Order by name ASC;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c.name 
FROM country c, country c2
WHERE c.name = c2.name
AND c.continent_code <> c2.continent_code
Order by c.name ASC;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT s.name
FROM available a, country c, store s
WHERE a.name = s.name
AND a.country = c.code3
AND c.continent_code = 'OC'
AND NOT EXISTS (SELECT DISTINCT OS FROM store as oss
			   WHERE NOT EXISTS (
			   SELECT *
			   FROM store s2
			   WHERE oss.OS = s2.OS
			   AND s.name = s2.name));","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]",,,"SELECT c.name, count(*)
FROM available a, country c
WHERE a.country = c.code3
GROUP by c.name
ORDER by count(*) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, count(*)
FROM available a, country c
WHERE a.country = c.code3
GROUP by c.name
ORDER by count(*) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, count(*)
FROM available a, country c
WHERE a.country = c.code3
GROUP by c.name
ORDER by count(*) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, count(*)
FROM available a, country c
WHERE a.country = c.code3
GROUP by c.name
ORDER by count(*) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2(
J TEXT NOT NULL,
K TEXT NOT NULL,
G TEXT Primary Key,
H TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS E1(
A TEXT NOT NULL UNIQUE,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
PRIMARY KEY (C, D)
);
CREATE TABLE IF NOT EXISTS S(
C TEXT NOT NULL,
D TEXT NOT NULL,
G TEXT NOT NULL,
F TEXT NOT NULL,
FOREIGN KEY (C,D) REFERENCES E1 (C,D),
FOREIGN KEY (G) REFERENCES E2 (G)
);",No output,Num. tables: 3; Num. not null: 11; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 contains game infomation, 
where A is the registeration ID of the game, 
B is the price of the game, 
C is the name of the game, 
D is the version of the game.
E2 contains gaming company information, 
where J is the location of the company, 
K is the number of employees of the company, 
G is the name of the company (Unique), 
H is the established year of the company.
S is the relationship between games and gaming company (published by)
where it contains: 
the name of the game C, 
the version of the game D, 
the publishing company G,
and the publishing year F",No output,,
A0111496H,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT d.name AS app, c.name AS country
FROM available d, country c, store s
WHERE d.country = c.code3
AND s.name = d.name
AND c.continent_code = 'EU'
AND s.os = 'iOS'
INTERSECT
SELECT d.name AS app, c.name AS country
FROM available d, country c, store s
WHERE d.country = c.code3
AND s.name = d.name
AND c.continent_code = 'EU'
AND s.os = 'Android';","42, [('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('Korona ™nlem', 'Turkey, Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('Coronavirus Support App (UK)', 'United Kingdom of Great Britain & Northern Ireland')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(c.continent_code) > 1
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_code != c2.continent_code
ORDER BY c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT a3.name
FROM available a3, country c
WHERE a3.country = c.code3
AND c.continent_name = 'Oceania'
EXCEPT(
	SELECT temp1.name
	FROM (SELECT DISTINCT a.name, s.os FROM available a, store s) AS temp1
			LEFT OUTER JOIN (SELECT DISTINCT a.name, s.os FROM available a, store s WHERE s.name = a.name) AS temp2 ON temp1.name = temp2.name and temp1.os = temp2.os
	WHERE temp2.name IS NULL);","8, [('Bupa Aged Care Connect',), ('MyAus COVID-19',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',)]",,,"SELECT c.name, COUNT(DISTINCT a.name)
FROM available a, country c
WHERE c.code3 = a.country
GROUP BY c.name
ORDER BY COUNT(DISTINCT a.name) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(DISTINCT a.name)
FROM available a, country c
WHERE c.code3 = a.country
GROUP BY c.name
ORDER BY COUNT(DISTINCT a.name) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(DISTINCT a.name)
FROM available a, country c
WHERE c.code3 = a.country
GROUP BY c.name
ORDER BY COUNT(DISTINCT a.name) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(DISTINCT a.name)
FROM available a, country c
WHERE c.code3 = a.country
GROUP BY c.name
ORDER BY COUNT(DISTINCT a.name) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2 (
	J TEXT NOT NULL,
	K TEXT NOT NULL,
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS E1 (
	A TEXT PRIMARY KEY,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	G TEXT NOT NULL REFERENCES E2(G),
	F TEXT NOT NULL);",No output,Num. tables: 2; Num. not null: 8; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"E2 is the entity set of managers, E1 is the entity set of employee, and S relationship set of which employee is managed by which manager. 
Having the primary key of table E2 as a foreign key in table E1 would ensure that the (1,1) participation constraints for E1 is enforced
For table E1, since there are 1 possible candidate keys, we select the shortest one (i.e. A instead of combination of C and D).
For table E2, since there are only 1 possible candidate key, we chose that to be the primary key
A could be the employee's employee ID
B could be the department of the employee
C could be the first name of the employee
D could be the last name of the employee
F could be the nature of the management (i.e. manager, supervisor, etc)
J could be the department of the manager
K could be the title of the manager
G could be the manager's employee ID
H could be the manager's office location",No output,,
A0113028W,"SELECT DISTINCT continent_name, continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT av.name as app, c.name as country
FROM available av, country c, store s
WHERE av.country = c.code3
AND av.name = s.name
AND c.continent_name = 'Europe'
AND s.os = 'iOS'
INTERSECT
SELECT av.name as app, c.name as country
FROM available av, country c, store s
WHERE av.country = c.code3
AND av.name = s.name
AND c.continent_name = 'Europe'
AND s.os = 'Android';","42, [('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('Korona ™nlem', 'Turkey, Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('Coronavirus Support App (UK)', 'United Kingdom of Great Britain & Northern Ireland')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(c.continent_name) > 1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_name <> c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT av.name
FROM available av, store s, country c
WHERE av.name = s.name
AND av.country = c.code3
AND c.continent_name = 'Oceania'
AND s.os = 'iOS'
INTERSECT
SELECT av.name
FROM available av, store s, country c
WHERE av.name = s.name
AND av.country = c.code3
AND c.continent_name = 'Oceania'
AND s.os = 'Android';","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('MyAus COVID-19',), ('COVIDSafe',), ('TCC COVID Monitor',)]",,,"SELECT c.name, COUNT(av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2 (
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL,
	J TEXT NOT NULL,
	K TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS E1 (
	A TEXT NOT NULL,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	F TEXT NOT NULL,
	PRIMARY KEY (C,D),
	FOREIGN KEY (A) REFERENCES E2(G));",No output,Num. tables: 2; Num. not null: 8; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"Real world example: A university offering various study programs to students.
A study program can have no student signing up, or many students signed up.
A student can only enroll in 1 study program.
E2: program
E1: student
S: enroll
A: program name
B: first name
C: student matric number
D: last name
F: student code in the faculty
G: program name
H: department name
J: faculty name
K: head of program",No output,,
A0113951L,"select c.continent_name, c.continent_code
from country c
group by c.continent_name, c.continent_code","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]","Missing semicolon, CHECK CODE; ",,"select a.name as app, c.name as country
from app a, available aa, country c, store s1, store s2
where a.name = aa.name
and aa.country = c.code3
and c.continent_code = 'EU'
and a.name = s1.name
and a.name = s2.name
and s1.os = 'iOS'
and s2.os = 'Android'","42, [('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('????????? ???? ???????????', 'Russian Federation'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('CORONAVIRUS - ???????????', 'Ukraine'), ('Luscii', 'Netherlands, Kingdom of the'), ('COVID Radar', 'Netherlands, Kingdom of the')]","Missing semicolon, CHECK CODE; ",,"select c.name
from country c
group by c.name
having count(c.continent_name)>1","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]","Missing semicolon, CHECK CODE; ",,"select distinct c1.name
from country c1, country c2
where c1.name = c2.name
and c1.continent_code <> c2.continent_code","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]","Missing semicolon, CHECK CODE; ",,I DONT KNOW YET!,No output,"Missing semicolon, CHECK CODE; ",,"select c.name, count (distinct aa.name)
from available aa, country c
where aa.country = c.code3
group by c.name
order by count desc
limit 6","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count (distinct aa.name)
from available aa, country c
where aa.country = c.code3
group by c.name
order by count desc
limit 7","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","select c.name, count (distinct aa.name)
from available aa, country c
where aa.country = c.code3
group by c.name
order by count desc
limit 8","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","select c.name, count (distinct aa.name)
from available aa, country c
where aa.country = c.code3
group by c.name
order by count desc
limit 16","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]","Missing semicolon, CHECK CODE; ",,"create table e1(
	A text not null,
	B text not null,
	C text not null,
	D text not null,
	primary key (A,C,D));
create table e2(
	G text not null primary key,
	H text not null,
	J text not null,
	K text not null);
create table s(
	A text not null,
	C text not null,
	D text not null,
	foreign key (A,C,D) references e1(A,C,D),
	G text not null,
	foreign key (G) references e2(G),
	F text not null,
	primary key (A,C,D,G));",No output,Num. tables: 3; Num. not null: 13; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"A potential real world application would be a tracking system for a manufacturing plant (E1)
that delivers products made from its plant to the stores (E2). It produces multiple items
and each product follows its own production batch tracking number, and manufactured on a specific date. 
These 3 form the pimary keys of A, C  and D, forming the unique identifier. B is the price. 
In the entity set E2, each store has its own unique identifier code in the system (primary key G), with 
other details like the Country, State, and City of location. A city could have multiple store locations. 
Relationship set F therefore defines the date the specific batch of product is delivered to the 
store which is asking for stock.
The relationship constraint makes sense as each batch of product produced by the plant can only be delivered 
to one location upon ordering (1,1) constraint, whereas a store can receive many orders for differnet products
or place no orders.
A = Product Name
C = Production Batch Number
D = Date of Manufacturing
B = Cost
F = Delivered on
G = Retail store unique code
H = Country
J = State
K = City",No output,,
A0119430N,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT ap.name AS app, c.name AS country
FROM app ap, available av, country c, store s1, store s2, appfunctionality af
WHERE ap.name = av.name
AND av.country = c.code3
AND ap.name = af.name
AND ap.name = s1.name
AND ap.name = s2.name
AND c.continent_code = 'EU'
AND s1.os = 'Android'
AND s2.os = 'iOS'
AND af.functionality = 'contact tracing';","10, [('COVID-19.eus', 'Spain, Kingdom of'), ('Rakning C-19', 'Iceland, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Immuni', 'Italy, Italian Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('ProteGO Safe', 'Poland, Republic of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopCovid France', 'France, French Republic')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(c.continent_name)>1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c1.name
FROM country c1
WHERE EXISTS(
	SELECT *
	FROM country c2
	WHERE c1.name = c2.name
	AND c1.continent_name <> c2.continent_name
);","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,,No output,,,"CREATE VIEW appcount AS
SELECT c.name, COUNT(*) as count
FROM app ap, available av, country c
WHERE ap.name = av.name
AND av.country = c.code3
GROUP BY c.name;
SELECT loser.name, loser.count
FROM appcount loser LEFT JOIN appcount winner
ON loser.name <> winner.name
AND loser.count < winner.count
GROUP BY loser.name, loser.count
HAVING COUNT(loser.name) < 6
ORDER BY loser.count DESC;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","CREATE VIEW appcount AS
SELECT c.name, COUNT(*) as count
FROM app ap, available av, country c
WHERE ap.name = av.name
AND av.country = c.code3
GROUP BY c.name;
SELECT loser.name, loser.count
FROM appcount loser LEFT JOIN appcount winner
ON loser.name <> winner.name
AND loser.count < winner.count
GROUP BY loser.name, loser.count
HAVING COUNT(loser.name) < 7
ORDER BY loser.count DESC;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","CREATE VIEW appcount AS
SELECT c.name, COUNT(*) as count
FROM app ap, available av, country c
WHERE ap.name = av.name
AND av.country = c.code3
GROUP BY c.name;
SELECT loser.name, loser.count
FROM appcount loser LEFT JOIN appcount winner
ON loser.name <> winner.name
AND loser.count < winner.count
GROUP BY loser.name, loser.count
HAVING COUNT(loser.name) < 8
ORDER BY loser.count DESC;","9, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","CREATE VIEW appcount AS
SELECT c.name, COUNT(*) as count
FROM app ap, available av, country c
WHERE ap.name = av.name
AND av.country = c.code3
GROUP BY c.name;
SELECT loser.name, loser.count
FROM appcount loser LEFT JOIN appcount winner
ON loser.name <> winner.name
AND loser.count < winner.count
GROUP BY loser.name, loser.count
HAVING COUNT(loser.name) < 16
ORDER BY loser.count DESC;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7)]","Multiple semicolons detected, CHECK CODE; ",,"CREATE TABLE E2 (
	J TEXT NOT NULL,
	K TEXT NOT NULL,
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL
);
CREATE TABLE E1_S (
	A TEXT PRIMARY KEY,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	F TEXT NOT NULL,
	G TEXT REFERENCES E2(G)
);",No output,Num. tables: 2; Num. not null: 7; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"This can be the emergency contact of a student.
E1 is the student set.
A: ID
B: name
C: student number
D: university
E2 is the emergency contact person.
J is the address.
K is the name of the contact person.
G is the ID of the contact person.
H is the phone number.
S is the relationship ""has emergency contact of""
F can be the date the contact is updated.",No output,,
A0119542H,"SELECT DISTINCT c.continent_name, c.continent_code 
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT DISTINCT ap.name AS app, c.name AS country
FROM app ap
INNER JOIN store s1 ON ap.name = s1.name 
INNER JOIN store s2 ON ap.name = s2.name 
INNER JOIN available av ON ap.name = av.name INNER JOIN country c ON av.country = c.code3
INNER JOIN appfunctionality af ON ap.name = af.name
WHERE af.functionality = 'contact tracing'
AND s1.os = 'Android' AND s2.os = 'iOS'
AND c.continent_name = 'Europe';","10, [('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Immuni', 'Italy, Italian Republic'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopCovid France', 'France, French Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"SELECT c.name 
FROM country c
GROUP BY c.name
HAVING COUNT(c.continent_code)>1
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c1.name 
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_code <> c2.continent_code
ORDER BY c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT ap.name, c.continent_name, s.os
FROM app ap
INNER JOIN store s ON ap.name = s.name  
INNER JOIN available av ON ap.name = av.name INNER JOIN country c ON av.country = c.code3
WHERE c.continent_name = 'Oceania';","20, [('MyAus COVID-19', 'Oceania', 'Android'), ('TCC COVID Monitor', 'Oceania', 'Android'), ('#BeatCovid19Now', 'Oceania', 'Android'), ('#BeatCovid19Now', 'Oceania', 'iOS'), ('Bupa Aged Care Connect', 'Oceania', 'iOS'), ('Coronavirus Australia', 'Oceania', 'Android'), ('Covid-19  Armenia', 'Oceania', 'iOS'), ('healthdirect', 'Oceania', 'iOS'), ('COVIDSafe', 'Oceania', 'Android'), ('TCC COVID Monitor', 'Oceania', 'iOS')]",,,"SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 6;
SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 7;
SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 8;
SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]","SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 7;
SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 7;
SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 8;
SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 17;","17, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Germany, Federal Republic of', 7)]","SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 8;
SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 7;
SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 8;
SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 18;","18, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Germany, Federal Republic of', 7)]","SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 16;
SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 7;
SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 8;
SELECT c.name, COUNT(*) 
FROM app ap, country c, available av
WHERE ap.name = av.name 
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 116;","87, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7)]","Multiple semicolons detected, CHECK CODE; ",,"CREATE TABLE IF NOT EXISTS E1(
	A VARCHAR(20) PRIMARY KEY,
	B VARCHAR(20) NOT NULL,
	C VARCHAR(20) NOT NULL,
	D VARCHAR(20) NOT NULL,
	UNIQUE NOT NULL (C,D)
);
CREATE TABLE IF NOT EXISTS S(
	F VARCHAR(20) NOT NULL
);
CREATE TABLE IF NOT EXISTS E2(
	G VARCHAR(20) PRIMARY KEY,
	H VARCHAR(20) NOT NULL,
	J VARCHAR(20) NOT NULL,
	K VARCHAR(20) NOT NULL
);",No output,Num. tables: 3; Num. not null: 8; Num. foreign keys defined: 0; ,,"-- E1 = government 
-- A = country if we assume one country has only one government, this is a primary key as identificaiton
-- B = amount of financial reserve
-- C = political party 
-- D = political governing year 
-- C and D combined form a unique identification for the government in place. 
-- S = head/ lead, referring to 1 government is led by 1 parliament member 
-- E2 = parliament member 
-- J = gender of parliament member
-- K = race of parliament member
-- G = IC number of parliament member, it is primary key as it identifies a parliament member
-- H = years of experience of parliament member",No output,,
A0124216U,"SELECT DISTINCT c.continent_name, c.continent_code 
FROM country c","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]","Missing semicolon, CHECK CODE; ",,"select distinct av.name as ""app"", c.name as ""country""
from available av, country c, store s1, store s2
where av.country=c.code3
and s1.name=av.name
and s2.name=av.name
and c.continent_name ='Europe'
and (s1.os='iOS' and s2.os='Android');","42, [('Korona ™nlem', 'Turkey, Republic of'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Karantinas', 'Lithuania, Republic of'), ('Covidom Patient', 'France, French Republic'), ('GVA Responde', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('?????????? ??????????', 'Russian Federation')]",,,"select c.name
from country c
group by c.name
having count(distinct c.continent_name)>1;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct c1.name
from country c1, country c2
where c1.name=c2.name
and c1.continent_name<>c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select distinct av.name
from available av, country c
where av.country=c.code3
and c.continent_name ='Oceania'
and av.name in (
select distinct s1.name
from store s1, store s2
where s1.name=s2.name
and s1.os<>s2.os);","8, [('Bupa Aged Care Connect',), ('MyAus COVID-19',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',)]",,,"select c.name, count(distinct av.name) as ""count""
from available av, country c
where av.country=c.code3
group by c.""name""
order by ""count"" desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count(distinct av.name) as ""count""
from available av, country c
where av.country=c.code3
group by c.""name""
order by ""count"" desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","select c.name, count(distinct av.name) as ""count""
from available av, country c
where av.country=c.code3
group by c.""name""
order by ""count"" desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","select c.name, count(distinct av.name) as ""count""
from available av, country c
where av.country=c.code3
group by c.""name""
order by ""count"" desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"create table if not exists E1 (
	A text not null,
	B text not null,
	C text not null,
	D text not null,
	primary key (A, C, D)
	);
create table if not exists E2 (
	G text primary key not null,
	H text not null,
	J text not null,
	K text not null
	);
create table if not exists S (
	A text not null,
	C text not null,
	D text not null,
	G text not null,
	F text not null,
	primary key (A, C, D, G),
	foreign key (A, C, D) references E1(A, C, D),
	foreign key (G) references E2(G)
	);",No output,Num. tables: 3; Num. not null: 13; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 could be the course schedule of different university in Singapore across different years. 
Meaning A would be ""university name"", C would be ""year"" 
and D would be ""Module Code"". Since Module code can be similar for  different
univerities and in different years, hence the primary keys, or candidate keys are A, C, D that can uniquely 
identify a row. 
The column B, can then by day and timing of the module, like Monday, 1.30pm.
The table E2 can contain a list of academics currently employed in Singapore,
such that whether it is a Singaporean, PR, or EP holder, they would have a unique
identification number given. The column G would therefore be ""IC"", and the rest of the 
columns can be particulars of the said person, such as J can be first name, K can be last name,
and H shows whether the person is a Singaporean, PR or EP holder.
The table S will therefore be the professor in charge of the module at the said university,
hence it will contain A (university name), C (year), D (Module Code), and
G (IC). The column F could be the overall average difficulty of the module, with a
range from 1-5 in that particular university for that particular year. 
As such, since the cardinality constraints of E1 is (1,1), which means that every row must
be connected to one row in E2, which is indeed true since every module code has to have one
professor in charge of teaching and creating the materials for that particular. 
For table E2, the cardinality constraint is (0,n), which means a professor, 
or academic currently employed in a univerity in singapore,
can be in charge of more than 1 module, or even not teach any modules in the home university.
Hence this example fulfills the cardinality constraints of a academic person, found in table E2, 
working in a university can be in-charge of 0 to n modules, while each module, found in table E1,
can only have one professor as the main in-charge. The relationship table S can therefore be found
with the average difficulty rating of each module, based on people who have audited or taken the class,
and that each module will show the overall difficulty for that year, taught by the particular professor.",No output,,
A0124294H,"select distinct continent_name,continent_code from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select a.name as app, c.name as country from 
app a,available avail,country c
where 
a.name in (select s1.name from store s1
group by s1.name
having count(*) = (select count(distinct os) from store s2))
and a.name = avail.name 
and avail.country = c.code3 
and c.continent_name ='Europe';","42, [('Stopp Corona', 'Austria, Republic of'), ('ViruSafe', 'Bulgaria, Republic of'), ('Covidom Patient', 'France, French Republic'), ('StopCovid France', 'France, French Republic'), ('COVID AP-HM', 'France, French Republic'), ('Terr-eSant‚ eCovid', 'France, French Republic'), ('Corona-Datenspende', 'Germany, Federal Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Corona Check Screening', 'Germany, Federal Republic of'), ('COVapp', 'Germany, Federal Republic of')]",,,"select c1.name as name from country c1 
inner join country c2 
on c1.name = c2.name
group by c1.name 
having count(*) > 1
order by c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct(c1.name) from country c1,country c2
where c1.name = c2.name
and c1.continent_name <> c2.continent_name 
order by c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select a.name as app, c.name as country from 
app a,available avail,country c
where 
a.name in (select s1.name from store s1
group by s1.name
having count(*) = (select count(distinct os) from store s2))
and a.name = avail.name 
and avail.country = c.code3 
and c.continent_name ='Oceania';","8, [('Coronavirus Australia', 'Australia, Commonwealth of'), ('healthdirect', 'Australia, Commonwealth of'), ('NZ COVID Tracer', 'New Zealand'), ('COVIDSafe', 'Australia, Commonwealth of'), ('Bupa Aged Care Connect', 'Australia, Commonwealth of'), ('#BeatCovid19Now', 'Australia, Commonwealth of'), ('TCC COVID Monitor', 'Australia, Commonwealth of'), ('MyAus COVID-19', 'Australia, Commonwealth of')]","Aggregation is used, CHECK CODE; ",,"select c.name,count(*) as count from available avail, country c
where c.code3 = avail.country
group by c.name
order by count desc limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name,count(*) as count from available avail, country c
where c.code3 = avail.country
group by c.name
order by count desc limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name,count(*) as count from available avail, country c
where c.code3 = avail.country
group by c.name
order by count desc limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name,count(*) as count from available avail, country c
where c.code3 = avail.country
group by c.name
order by count desc limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E2 (
G TEXT NOT NULL,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL,
Primary KEY(G));
CREATE TABLE E1_S(
A TEXT NOT NULL,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
F TEXT NOT NULL,
G TEXT NOT NULL,
Primary KEY(A,C,D,G),
FOREIGN KEY (G) REFERENCES E2(G));",No output,Num. tables: 2; Num. not null: 10; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"E1 can represent an employee
E2 can represent a Company
S can be the contract
Each employee can only work for 1 company therefore (1,1)
Each Company can have zero to many employee, therefore (0,n)
Attribute J,K,H can describe the company profile : size, assets etc.
Attribute G can be the company UEN that is tagged to identify that the employee is part of company
Attribute C and D can be the first and last name of the employee
Attribute A can be the staff ID
B can be the gender
F can be the date of contract signed",No output,,
A0125002E,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name as app , c.name as country
FROM app a, country c, store s1, available av, store s2
WHERE s1.name = a.name AND a.name = av.name AND
c.code3 = av.country
AND c.continent_code = 'EU' AND s1.os = 'iOS' AND s2.os ='Android';","19434, [('VoxCOVID', 'France, French Republic'), ('????????? ???? ???????????', 'Russian Federation'), ('???', 'Ukraine'), ('COVapp', 'Germany, Federal Republic of'), ('COVID izle', 'Azerbaijan, Republic of'), ('Corona Check Screening', 'Germany, Federal Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Tonic: Medicina para M‚dicos', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('coVIDApp - Hu‚sped', 'Spain, Kingdom of')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(*) >=2;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c1.name
FROM country c1
WHERE EXISTS(
SELECT c2.name
FROM country c2
WHERE c1.name = c2.name AND c1.continent_code <> c2.continent_code);","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT a.name 
FROM app a, country c, available av, store s
WHERE av.country = c.code3 AND c.continent_name = 'Oceania' AND av. name = a.name AND
s.name = a.name AND s.os IS NOT NULL;","12, [('Bupa Aged Care Connect',), ('Covid-19  Armenia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',)]",,,"SELECT c.name, COUNT(av.name)
FROM country c, available av, app a 
WHERE av.name = a.name AND av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(av.name) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(av.name)
FROM country c, available av, app a 
WHERE av.name = a.name AND av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(av.name) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(av.name)
FROM country c, available av, app a 
WHERE av.name = a.name AND av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(av.name) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(av.name)
FROM country c, available av, app a 
WHERE av.name = a.name AND av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(av.name) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1(
A TEXT UNIQUE NOT NULL,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
PRIMARY KEY (C,D));
CREATE TABLE IF NOT EXISTS E2(
G TEXT PRIMARY KEY,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS E1_S (
A TEXT UNIQUE NOT NULL,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
F TEXT NOT NULL,
PRIMARY KEY (C,D),
G TEXT NOT NULL,
FOREIGN KEY (G) REFERENCES E2(G),
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL);",No output,Num. tables: 3; Num. not null: 16; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"Figure 1 can correspond to a system tracking long-distance trains & the drivers operating it to keep track of the date it was run so as to help in preventive maintenance. 
One such example would be long-distance trains especially prevalent in Europe. We shall use France as an example and its TGVs under the SNCF network.
E1 will be trains and is (1,1) as 1 train can  only be driven by 1 train driver. 
Attribute A of E1 can be the train_ID which can aid in identification and is unique to each train.
Attribute B can be the age of the train 
Attribute C can be the rolling stock which identifies the regions it operates for e.g. TGV Atlantique, TGV Sud-est, TGV Lyria etc. Given that the rolling stock can serve many routes in that area, 
another attribute D which is date_time of arrival 
[for e.g. TGV Sud-Est from Lyon to Paris Gare de Lyon on 29th September 2021 at 1300hrs]
This will provide a more accurate picture of utilisation of train as in one instance the route and duration can be seen.
Relationship S will be drives/driven by to and its attribute F will be the date that the train is driven so that a log of its usage in a month can be kept.
E2 will be train driver with (0,n) as a driver can drive no or multiple trains on the day
Attribute G as ID to identify him/her 
Attribute H will be years_of_experience
Attribute J will be name
Attribute H will be department which indicates which department/function in the SNCF network is in charge of the driver.",No output,,
A0142279B,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT a.name AS app, c.name AS country
FROM available a, country c, store s1, store s2
WHERE a.country = c.code3
AND a.name = s1.name
AND a.name = s2.name
AND s1.OS = 'iOS' 
AND s2.OS = 'Android'
AND s1.name = s2.name
AND c.continent_name = 'Europe'","42, [('Korona ™nlem', 'Turkey, Republic of'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Karantinas', 'Lithuania, Republic of'), ('Covidom Patient', 'France, French Republic'), ('GVA Responde', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('?????????? ??????????', 'Russian Federation')]","Missing semicolon, CHECK CODE; ",,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING c.count > 1
ORDER BY c.name","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_name <> c2.continent_name
ORDER BY c1.name","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT s0.name
FROM store s0,
(SELECT DISTINCT a.name, s.os
FROM available a, country c, store s
WHERE a.country = c.code3
AND c.continent_name = 'Oceania'
AND a.name = s.name) AS oc1,
(SELECT DISTINCT a.name, s.os
FROM available a, country c, store s
WHERE a.country = c.code3
AND c.continent_name = 'Oceania'
AND a.name = s.name) AS oc2
WHERE s0.name = oc1.name
AND oc1.os='Andriod'
AND oc2.os='iOS'
AND oc1.name = oc2.name","0, []","Missing semicolon, CHECK CODE; ",,,No output,,No output,,No output,,No output,,,"CREATE TABLE E2(
J TEXT NOT NULL,
K TEXT NOT NULL,
G TEXT PRIMARY KEY,
H TEXT NOT NULL);
CREATE TABLE E1_S(
A TEXT UNIQUE NOT NULL,
B TEXT NOT NULL,
C TEXT,
D TEXT,
F TEXT NOT NULL,
G TEXT NOT NULL,
PRIMARY KEY(C,D),
FOREIGN KEY (G) REFERENCES E2(G));",No output,Num. tables: 2; Num. not null: 7; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"E1 is membership account information
A = membership account ID
B = membership level (bronze, silver, gold)
C = account manager employee ID
D = customer name
E2 is the customer information
G = passport number of the customer
J = name of the customer
K = sex of the customer
H = age of the customer
S = become member record
F = membership account creation date (when become member)
participation constraints:
(1,1) = one membership account can only have one customer
(0,n) = there can be many customers having membership
there also can be customer has not become member (i.e. no membership)
candidate keys:
For E1, there are 2 candidate keys, A or CD
A = membership account ID can be used to locate member information
CD = membership information can also be identified via the corresponding account manager employee ID and the custommer name he/she serves
(assume that usually one account manager will not serve 2 customers with the same name)",No output,,
A0150032A,"SELECT continent_name, continent_code
FROM country;","262, [('Asia', 'AS'), ('Europe', 'EU'), ('Antarctica', 'AN'), ('Africa', 'AF'), ('Oceania', 'OC'), ('Europe', 'EU'), ('Africa', 'AF'), ('North America', 'NA'), ('Europe', 'EU'), ('Asia', 'AS')]",,,"SELECT a.name app, c.name country
FROM country c
JOIN available a
ON c.code3 = a.country;","403, [('COVID-19 CDMX', 'Mexico, United Mexican States'), ('CovTracer', 'Cyprus, Republic of'), ('CovTracer', 'Cyprus, Republic of'), ('????????????????', 'Thailand, Kingdom of'), ('Relief Central | COVID-19', 'United States of America'), ('Stop COVID-19 KG', 'Kyrgyz Republic'), ('Lynx-Virtual', 'South Africa, Republic of'), ('Canada COVID-19', 'Canada'), ('NMC COVID-19', 'India, Republic of'), ('StopCOVID NI', 'United Kingdom of Great Britain & Northern Ireland')]",,,"SELECT temp.name
FROM
(
SELECT c.name AS name, COUNT(continent_name)
FROM country c
GROUP BY c.name
HAVING COUNT(continent_name) > 1
) temp;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_code <> c2.continent_code;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT a.name, s.os
FROM app a
JOIN available av
ON a.name = av.name
JOIN country c
ON av.country = c.code3
JOIN store s
ON a.name = s.name
WHERE c.continent_name = 'Oceania'
ORDER BY a.name;","20, [('#BeatCovid19Now', 'Android'), ('#BeatCovid19Now', 'iOS'), ('Awhina - informing health workers', 'Android'), ('Bupa Aged Care Connect', 'Android'), ('Bupa Aged Care Connect', 'iOS'), ('Coronavirus Australia', 'iOS'), ('Coronavirus Australia', 'Android'), ('Covid-19  Armenia', 'iOS'), ('COVID VS', 'iOS'), ('CovidCare - Symptom monitor', 'iOS')]",,,"CREATE VIEW temp2 AS
SELECT c.name AS name, COUNT(ap.name) AS num
FROM country c
JOIN available av
ON c.code3 = av.country
JOIN app ap
ON ap.name = av.name
GROUP BY c.name
ORDER BY COUNT(ap.name) DESC;
SELECT temp3.name AS name, temp3.num AS count
FROM (
SELECT b.name, b.num,
(SELECT count(*)+1 FROM temp2 a
WHERE a.num > b.num) as rank
FROM temp2 b
ORDER BY num DESC
) temp3 WHERE rank <= 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","CREATE VIEW temp2 AS
SELECT c.name AS name, COUNT(ap.name) AS num
FROM country c
JOIN available av
ON c.code3 = av.country
JOIN app ap
ON ap.name = av.name
GROUP BY c.name
ORDER BY COUNT(ap.name) DESC;
SELECT temp3.name AS name, temp3.num AS count
FROM (
SELECT b.name, b.num,
(SELECT count(*)+1 FROM temp2 a
WHERE a.num > b.num) as rank
FROM temp2 b
ORDER BY num DESC
) temp3 WHERE rank <= 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","CREATE VIEW temp2 AS
SELECT c.name AS name, COUNT(ap.name) AS num
FROM country c
JOIN available av
ON c.code3 = av.country
JOIN app ap
ON ap.name = av.name
GROUP BY c.name
ORDER BY COUNT(ap.name) DESC;
SELECT temp3.name AS name, temp3.num AS count
FROM (
SELECT b.name, b.num,
(SELECT count(*)+1 FROM temp2 a
WHERE a.num > b.num) as rank
FROM temp2 b
ORDER BY num DESC
) temp3 WHERE rank <= 8;","9, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","CREATE VIEW temp2 AS
SELECT c.name AS name, COUNT(ap.name) AS num
FROM country c
JOIN available av
ON c.code3 = av.country
JOIN app ap
ON ap.name = av.name
GROUP BY c.name
ORDER BY COUNT(ap.name) DESC;
SELECT temp3.name AS name, temp3.num AS count
FROM (
SELECT b.name, b.num,
(SELECT count(*)+1 FROM temp2 a
WHERE a.num > b.num) as rank
FROM temp2 b
ORDER BY num DESC
) temp3 WHERE rank <= 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7)]","Multiple semicolons detected, CHECK CODE; Answer violates requirement ['RANK'], CHECK CODE;",,"CREATE TABLE E1 (
A TEXT NOT NULL,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
PRIMARY KEY (A));
CREATE TABLE E2 (
J TEXT NOT NULL,
K TEXT NOT NULL,
G TEXT NOT NULL,
H TEXT NOT NULL,
PRIMARY KEY (G));
CREATE TABLE S (
F TEXT NOT NULL,
A TEXT PRIMARY KEY,
G TEXT NOT NULL,
FOREIGN KEY (A) REFERENCES E1(A),
FOREIGN KEY (G) REFERENCES E2(G));",No output,Num. tables: 3; Num. not null: 10; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1: Soldier
	A can be their Soldier_ID
	C and D can be their Rank and Full Name
	B can be their army_unit
E2: Vaccination Center
	G can be the government_identifier for the center
	J, K, H can be location, holding_capacity, operating hours
S: Student gets Vaccination. 
	F can be date of vaccine administration.
A soldier must get vaccinate at one and only one vaccination Center. 
It cannot be 0 due to the mandate.
However, there may be vaccination centers who may not get any soldiers 
(e.g. serving other public servants, public instead).",No output,,
A0150639A,"SELECT continent_name,continent_code
FROM country
GROUP BY continent_name,continent_code;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name app, c.name country
FROM store s1, store s2, available a, country c
WHERE s1.name = a.name
	AND s2.name = a.name
 	AND a.country = c.code3 
	AND c.continent_name = 'Europe'
	AND s1.store = 'GooglePlay'
	AND s2.store = 'AppStore';","42, [('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('????????? ???? ???????????', 'Russian Federation'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('CORONAVIRUS - ???????????', 'Ukraine'), ('Luscii', 'Netherlands, Kingdom of the'), ('COVID Radar', 'Netherlands, Kingdom of the')]",,,"SELECT name
FROM country
GROUP BY name
HAVING COUNT(DISTINCT continent_code) > 1 ;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,,No output,,,"SELECT a.name
FROM store s1, store s2, available a, country c
WHERE s1.name = a.name
	AND s2.name = a.name
 	AND a.country = c.code3 
	AND c.continent_name = 'Oceania'
	AND s1.os = 'Android'
	AND s2.os = 'iOS';","8, [('Bupa Aged Care Connect',), ('NZ COVID Tracer',), ('healthdirect',), ('Coronavirus Australia',), ('MyAus COVID-19',), ('#BeatCovid19Now',), ('COVIDSafe',), ('TCC COVID Monitor',)]",,,"SELECT c.name, COUNT(DISTINCT a.name) AS count
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name 
ORDER BY count DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(DISTINCT a.name) AS count
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name 
ORDER BY count DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(DISTINCT a.name) AS count
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name 
ORDER BY count DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(DISTINCT a.name) AS count
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name 
ORDER BY count DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1 (
	A VARCHAR NOT NULL,
	B VARCHAR NOT NULL,
	C VARCHAR NOT NULL,
	D VARCHAR NOT NULL,
	PRIMARY KEY(A,C,D));
CREATE TABLE IF NOT EXISTS E2 (
	G VARCHAR NOT NULL,
	H VARCHAR NOT NULL,
	J VARCHAR NOT NULL,
	K VARCHAR NOT NULL,
	PRIMARY KEY(G));
CREATE TABLE IF NOT EXISTS S (
	F VARCHAR NOT NULL,
	A VARCHAR NOT NULL,
	C VARCHAR NOT NULL,
	D VARCHAR NOT NULL,
	G VARCHAR NOT NULL,
	FOREIGN KEY(A,C,D) REFERENCES E1(A,C,D),
	FOREIGN KEY(G) REFERENCES E2(G));",No output,Num. tables: 3; Num. not null: 13; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"One classic example can be describled by using students apply and enroll the primary schools.
Here we can use entity E1 to represent the Studetns with the corresponding attributes.
A - Student's Identification No.
B - Student's address
C - Student's First Name
D - Student's Last Name
Meanwhile we can use entity E2 to represent the different schools with the corresponding attributes below.
G - School Full Name
H - School Address
J - School Offical Contact
K - School Admission Requirement,etc
As we know, when each student applied to different schools and they can only be assinged to one school in maxium.
On the contrast, the primary schools can admit multiple students from E1, but also might not admit some of them.
Hence we can build the new relation entity S with the corresponding attributes.
A,C,D,G - which are referenced from other two entities.
F - Application No 
Thus we can build the new relational entity to link the 2 entities mentioned above successfully.",No output,,
A0154734A,"select 
  distinct c.continent_name, 
  c.continent_code 
from 
  country c 
order by 
  c.continent_name;","7, [('Africa', 'AF'), ('Antarctica', 'AN'), ('Asia', 'AS'), ('Europe', 'EU'), ('North America', 'NA'), ('Oceania', 'OC'), ('South America', 'SA')]",,,"select 
  distinct d1.name as app, 
  d1.country 
from 
  (
    select 
      distinct a.name, 
      s.os, 
      c.continent_name, 
      c.name as country 
    from 
      store s, 
      app a, 
      available av, 
      country c, 
      appfunctionality ap 
    where 
      a.name = s.name 
      and a.name = ap.name 
      and a.name = av.name 
      and c.code3 = av.country 
      and c.continent_name = 'Europe' 
      and ap.functionality = 'contact tracing' 
      and s.os = 'iOS' 
    order by 
      a.name
  ) as d1, 
  (
    select 
      distinct a.name, 
      s.os, 
      c.continent_name, 
      c.name as country 
    from 
      store s, 
      app a, 
      available av, 
      country c, 
      appfunctionality ap 
    where 
      a.name = s.name 
      and a.name = ap.name 
      and a.name = av.name 
      and c.code3 = av.country 
      and c.continent_name = 'Europe' 
      and ap.functionality = 'contact tracing' 
      and s.os = 'Android' 
    order by 
      a.name
  ) as d2 
where 
  d1.name = d2.name 
order by 
  d1.name;","10, [('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Immuni', 'Italy, Italian Republic'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopCovid France', 'France, French Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"select 
  c.name 
from 
  country c 
group by 
  c.name 
having 
  count(*) > 1 
order by 
  c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select 
  c.name , c.continent_code
from 
  country c;","262, [('Afghanistan, Islamic Republic of', 'AS'), ('Albania, Republic of', 'EU'), ('Antarctica (the territory South of 60 deg S)', 'AN'), (""Algeria, People's Democratic Republic of"", 'AF'), ('American Samoa', 'OC'), ('Andorra, Principality of', 'EU'), ('Angola, Republic of', 'AF'), ('Antigua and Barbuda', 'NA'), ('Azerbaijan, Republic of', 'EU'), ('Azerbaijan, Republic of', 'AS')]",,,"select 
  d1.name 
from 
  (
    select 
      distinct a.name, 
      s.os, 
      c.continent_name 
    from 
      store s, 
      app a, 
      available av, 
      country c 
    where 
      a.name = s.name 
      and a.name = av.name 
      and c.code3 = av.country 
      and c.continent_name = 'Oceania' 
      and s.os = 'Android' 
    order by 
      a.name
  ) as d1, 
  (
    select 
      distinct a.name, 
      s.os, 
      c.continent_name 
    from 
      store s, 
      app a, 
      available av, 
      country c 
    where 
      a.name = s.name 
      and a.name = av.name 
      and c.code3 = av.country 
      and c.continent_name = 'Oceania' 
      and s.os = 'iOS' 
    order by 
      a.name
  ) as d2 
where 
  d1.name = d2.name 
order by 
  d1.name;","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]",,,"select 
  d1.name, 
  count(*) 
from 
  (
    select 
      a.name as app, 
      c.name as name 
    from 
      app a, 
      available av, 
      country c 
    where 
      a.name = av.name 
      and av.country = c.code3
  ) as d1 
group by 
  d1.name 
order by 
  count(*) desc 
limit 
  6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select 
  d1.name, 
  count(*) 
from 
  (
    select 
      a.name as app, 
      c.name as name 
    from 
      app a, 
      available av, 
      country c 
    where 
      a.name = av.name 
      and av.country = c.code3
  ) as d1 
group by 
  d1.name 
order by 
  count(*) desc 
limit 
  7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select 
  d1.name, 
  count(*) 
from 
  (
    select 
      a.name as app, 
      c.name as name 
    from 
      app a, 
      available av, 
      country c 
    where 
      a.name = av.name 
      and av.country = c.code3
  ) as d1 
group by 
  d1.name 
order by 
  count(*) desc 
limit 
  8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select 
  d1.name, 
  count(*) 
from 
  (
    select 
      a.name as app, 
      c.name as name 
    from 
      app a, 
      available av, 
      country c 
    where 
      a.name = av.name 
      and av.country = c.code3
  ) as d1 
group by 
  d1.name 
order by 
  count(*) desc 
limit 
  16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"create table if not exists E2 (
	J VARCHAR(64) NOT NULL,
	K VARCHAR(64) NOT NULL,
	G VARCHAR(64) NOT NULL PRIMARY KEY,
	H VARCHAR(64) NOT NULL
);
create table if not exists E1_S (
	A VARCHAR(64) NOT NULL,
	B VARCHAR(64) NOT NULL,
	C VARCHAR(64) NOT NULL,
	D VARCHAR(64) NOT NULL,
	PRIMARY KEY (A, C, D),
	F VARCHAR(64) NOT NULL,
	G VARCHAR(64) NOT NULL,
	FOREIGN KEY (G) REFERENCES E2(G)
);",No output,Num. tables: 2; Num. not null: 10; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"The entity relationship diagram can correspond to a hiring process of a company
E1 = employee applying for job in the company
S = application submitted
E2 = Hiring manager for the company
E1 can only submit 1 application to the company hence, there is a one to one relationship between E1 (employee) and S (application submitted)
E2 are hiring managers of the company where they can review multiple applications, hence, there is a 0 to many relationship between E2 and S
For attributes of E1:
A = university
B = GPA
C = internship experience with the company
D = internship experience within the industry
Primary key = A, C, D = when applying to the job, hiring managers want to know whether they have internship experience and are from which university as some universities have partnerships with the company
For attributes of S:
F = application submission number and date
For attributes of E2:
J = department
K = seniority 
G = Company's Employee ID
H = previous university of hiring manager",No output,,
A0165086Y,"SELECT country.continent_name,country.continent_code
FROM country;","262, [('Asia', 'AS'), ('Europe', 'EU'), ('Antarctica', 'AN'), ('Africa', 'AF'), ('Oceania', 'OC'), ('Europe', 'EU'), ('Africa', 'AF'), ('North America', 'NA'), ('Europe', 'EU'), ('Asia', 'AS')]",,,"SELECT app.name AS app,country FROM app,available,country
WHERE app.name = available.name AND country.code3 = available.country AND country.continent_code = 'EU';","102, [('VoxCOVID', 'FRA'), ('????????? ???? ???????????', 'RUS'), ('???', 'UKR'), ('COVapp', 'DEU'), ('COVID izle', 'AZE'), ('Corona Check Screening', 'DEU'), ('geoHealthApp Covid19 / Coronavirus? Tracker', 'CHE'), ('CoronaTest Navarra', 'ESP'), ('Tonic: Medicina para M‚dicos', 'ESP'), ('Care Workforce', 'GBR')]",,,"SELECT c1.name
FROM country c1 
INNER JOIN country c2 ON c1.code3 = c2.code3
GROUP BY c1.name
HAVING COUNT(*) > 1
ORDER BY c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT c1.name
FROM country c1 
INNER JOIN country c2 ON c1.code3 = c2.code3 WHERE c1.continent_code = 'AS'
INTERSECT 
SELECT c1.name
FROM country c1 
INNER JOIN country c2 ON c1.code3 = c2.code3 WHERE c1.continent_code = 'EU' 
OR c1.continent_code = 'AF' OR c1.continent_code = 'OC'
OR c1.continent_code = 'NA' OR c1.continent_code = 'SA'
OR c1.continent_code = 'AN' 
UNION 
SELECT c1.name
FROM country c1 
INNER JOIN country c2 ON c1.code3 = c2.code3 WHERE c1.continent_code = 'OC'
INTERSECT 
SELECT c1.name
FROM country c1 
INNER JOIN country c2 ON c1.code3 = c2.code3 WHERE c1.continent_code = 'NA';","8, [('Turkey, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Georgia',), ('Cyprus, Republic of',), ('Armenia, Republic of',)]",,,"SELECT app.name FROM app,available,country,store
WHERE app.name = available.name AND country.code3 = available.country AND country.continent_code = 'OC'
AND app.name = store.name
EXCEPT
SELECT app.name FROM app,available,country,store
WHERE app.name = available.name AND country.code3 = available.country AND country.continent_code = 'OC'
AND app.name = store.name AND store.os ISNULL;","12, [('Bupa Aged Care Connect',), ('Covid-19  Armenia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',)]",,,"SELECT country.name, COUNT(available.country) FROM app,available,country
WHERE app.name = available.name AND country.code3 = available.country
GROUP BY country.name
ORDER BY COUNT(available.country) DESC LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT country.name, COUNT(available.country) FROM app,available,country
WHERE app.name = available.name AND country.code3 = available.country
GROUP BY country.name
ORDER BY COUNT(available.country) DESC LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT country.name, COUNT(available.country) FROM app,available,country
WHERE app.name = available.name AND country.code3 = available.country
GROUP BY country.name
ORDER BY COUNT(available.country) DESC LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT country.name, COUNT(available.country) FROM app,available,country
WHERE app.name = available.name AND country.code3 = available.country
GROUP BY country.name
ORDER BY COUNT(available.country) DESC LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1 (
A TEXT NOT NULL,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
PRIMARY KEY (A,C,D)
);
CREATE TABLE IF NOT EXISTS E2 (
G TEXT NOT NULL,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL,
PRIMARY KEY G
);
CREATE TABLE IF NOT EXISTS S (
F TEXT NOT NULL,
A TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
G TEXT NOT NULL,
PRIMARY KEY (A,C,D,G),
FOREIGN KEY (A,C,D) REFERENCES E1(A,C,D),
FOREIGN KEY G REFERENCES E2(G),
);",No output,Num. tables: 3; Num. not null: 13; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 as government.
E2 as parliament member.
S as head.
There is only one government heading all the parliament members at any one point of time.
A - Name of government
B - Number of members in government
C - Majority party leading government
D - Leader of government
F - Years headed 
G - Parliament member name
H - Parliament member age
J - Parliament member height
K - Parliament member date of birth
A,C,D are keys so as to distinguish between the various parties that have formed the majority in the government.
A (Name of government) indicates the country name (eg. Singapore)
The number of members in government is not a very important attribute so B is not a key.
C (Majority party leading governments) refers to the party that won the most seats to form a majority government (eg. PAP)
D (Leader of government) refers to the country's leader (eg. Lee Hsien Loong in Singapore )
F (Years headed) refers to the number of years which the current government has been heading since the last election.
G (name of parliament member) is a key since it is used to distinguish between the various parliament members.
H,J,K are just descriptive attributes of the parliament member and not very important so are not keys.",No output,,
A0177964J,"SELECT DISTINCT continent_name, continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT DISTINCT av.name AS app, c.name AS country
FROM country c, available av, store s
WHERE av.country = c.code3
AND EXISTS (SELECT s1.name, COUNT(s1.os)
		   FROM store s1
		   WHERE s1.name = s.name
		   GROUP BY s1.name
		   HAVING COUNT(s1.os) > 1);","389, [('CoronaTest Navarra', 'Spain, Kingdom of'), ('Corona Manager - Ashoknagar', 'India, Republic of'), ('COVTRAC', 'Singapore, Republic of'), ('SwiftMED', 'Singapore, Republic of'), ('MP COVID RESPONSE APP', 'India, Republic of'), ('Beat COVID Gibraltar', 'Gibraltar'), ('West Bengal Emergency Fund', 'India, Republic of'), ('HowWeFeel: The How We Feel Project', 'Italy, Italian Republic'), ('Plan Jalisco Covid-19', 'Mexico, United Mexican States'), ('Babylon: 24/7 Healthcare', 'United Kingdom of Great Britain & Northern Ireland')]",,,"SELECT DISTINCT c.name
FROM country c
WHERE EXISTS ( 
	SELECT c1.name, COUNT(continent_name)
	FROM country c1
	WHERE c1.name = c.name
	GROUP BY c1.name
	HAVING COUNT(continent_name) > 1)
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c.name
FROM country c
WHERE EXISTS (
	SELECT *
	FROM country c1 
	WHERE c.name = c1.name 
	AND c.continent_name <> c1.continent_name)
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT av.name
FROM available av, country c, store s
WHERE av.country = c.code3
AND c.continent_name = 'Oceania'
AND av.name = s.name
AND EXISTS (SELECT s1.name, COUNT(s1.os)
		   FROM store s1
		   WHERE s1.name = s.name
		   GROUP BY s1.name
		   HAVING COUNT(s1.os) > 1)
ORDER BY av.name;","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]","Aggregation is used, CHECK CODE; ",,"SELECT c.name, COUNT(av.name)
FROM country c, available av
WHERE c.code3 = av.country
GROUP BY c.name
ORDER BY COUNT(av.name) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(av.name)
FROM country c, available av
WHERE c.code3 = av.country
GROUP BY c.name
ORDER BY COUNT(av.name) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(av.name)
FROM country c, available av
WHERE c.code3 = av.country
GROUP BY c.name
ORDER BY COUNT(av.name) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(av.name)
FROM country c, available av
WHERE c.code3 = av.country
GROUP BY c.name
ORDER BY COUNT(av.name) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1 (
	A VARCHAR(64),
	B VARCHAR(64) NOT NULL,
	C VARCHAR(64),
	D VARCHAR(64),
	F VARCHAR(64) NOT NULL,
	PRIMARY KEY (A, C, D)
);
CREATE TABLE IF NOT EXISTS E2(
	J VARCHAR(64) NOT NULL,
	G VARCHAR(64) PRIMARY KEY,
	K VARCHAR(64) NOT NULL,
	H VARCHAR(64) NOT NULL
);",No output,Num. tables: 2; Num. not null: 5; Num. foreign keys defined: 0; ,,"E1: car
	A - category of vehicle
	C - city code
	D - licence plate number
	B - vehicle brand
S: bought
	F - shop
E2: person
	G(primary key) - IC number
	H - first_name
	J - last_name
	K - age_group
The E-R diagram can be a person buy a new car. 
The E1 can be the car entity with its new licence plate number, the A is the category of car like petrol or electrical car 
(the color of plate is different in China for this 2 kind of vehicle). 
The C will be city code and D is licence plate number, only the combination of A,C,D can identify one unique car. 
And B can be the brand of car. 
The relation is bought and F is the shop where the person buy the car. 
The E2 is person entity and G is the IC number of person to identify the person and H,J,K can be first_name, 
last_name and age_group of person respectively.
Participation constraints:
Each car can only be bought by 1 person. 
Each person can buy 0 or many cars. 
Candidate key for E1 is {A,C,D}
Candidate key for E2 is {G}",No output,,
A0179033E,"SELECT DISTINCT continent_name, continent_code FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name, c.name FROM available a, country c, app app, store s
WHERE a.country = c.code3
	AND a.name = app.name
	AND app.name = s.name
	AND c.continent_name = 'Europe'
	AND a.name IN (SELECT name FROM store
GROUP BY name
HAVING COUNT(os) =1)
GROUP BY a.name, c.name;","60, [('??? ?????', 'Ukraine'), ('???? ??????????? - Covid-19', 'Russian Federation'), ('AyudaCOVID', 'Spain, Kingdom of'), ('Babylon: 24/7 Healthcare', 'United Kingdom of Great Britain & Northern Ireland'), ('Beat COVID Gibraltar', 'Gibraltar'), ('C19 Test La Rioja', 'Spain, Kingdom of'), ('Check Covid-19', 'Russian Federation'), ('Coronapp-HUG', 'Switzerland, Swiss Confederation'), ('CoronApp-HUG', 'Switzerland, Swiss Confederation'), ('CoronaSurveys', 'Spain, Kingdom of')]",,,"SELECT name FROM country
GROUP BY name
HAVING COUNT(continent_name)>1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT c.name FROM country c
LEFT JOIN (SELECT DISTINCT ON(c2.name) c2.name, c2.continent_name FROM country c2) as c3 ON (c.name, c.continent_name) = (c3.name, c3.continent_name)
WHERE c3.continent_name ISNULL
ORDER BY c3.continent_name DESC;","9, [('Azerbaijan, Republic of',), ('Armenia, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Turkey, Republic of',), ('Armenia, Republic of',)]",,,"SELECT a.name FROM available a, country c, app app, store s
WHERE a.country = c.code3
	AND a.name = app.name
	AND app.name = s.name
	AND c.continent_name = 'Oceania'
	AND a.name IN (SELECT name FROM store
GROUP BY name
HAVING COUNT(os) >=2)
GROUP BY a.name, c.name;","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]","Aggregation is used, CHECK CODE; ",,"SELECT con.name, COUNT(a.name) FROM available a, (SELECT DISTINCT c.name, c.code3 FROM country c) AS con
WHERE a.country = con.code3
GROUP BY con.name
ORDER BY COUNT(country) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT con.name, COUNT(a.name) FROM available a, (SELECT DISTINCT c.name, c.code3 FROM country c) AS con
WHERE a.country = con.code3
GROUP BY con.name
ORDER BY COUNT(country) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","SELECT con.name, COUNT(a.name) FROM available a, (SELECT DISTINCT c.name, c.code3 FROM country c) AS con
WHERE a.country = con.code3
GROUP BY con.name
ORDER BY COUNT(country) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8)]","SELECT con.name, COUNT(a.name) FROM available a, (SELECT DISTINCT c.name, c.code3 FROM country c) AS con
WHERE a.country = con.code3
GROUP BY con.name
ORDER BY COUNT(country) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE E1(
A VARCHAR(30) UNIQUE NOT NULL,
B VARCHAR(30) NOT NULL,
C VARCHAR(30),
D VARCHAR(30),
F VARCHAR(30) NOT NULL,
E2_G VARCHAR(30) NOT NULL,
PRIMARY KEY (C,D),
FOREIGN KEY (E2_G) REFERENCES E2(G));
CREATE TABLE E2(
J VARCHAR(30) NOT NULL,
K VARCHAR(30) NOT NULL,
G VARCHAR(30) PRIMARY KEY,
H VARCHAR(30) NOT NULL);",No output,Num. tables: 2; Num. not null: 7; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"In this scenario we are assuming this is a database for a centralized conglomerate which has a record
of all locations. In this case, the conglomerate has several related businesses for which each business has their specific factories (controled by the conglomerate. As such, IDs are unique).
They are concenrned with the global carbon emission objectives they have to follow. e.g: usually, every country/business unit has a specific objective to be achieved by a specified date.
E1: factory directory for a conglomerate.
	A:Factory ID code
	B:address
	C:factory name
	D:business it belongs to 
	(we assume that a factory could have the same coloquial name in multiple businesses
	as such, name+business would provide a primary key)
S: Subscribed to. (realates each factory to the global CO2 reduction objective to be followed)
	F: Goal limit date
E2: Environmental objectives.
	G: Objective ID
	J: %CO2 to be reduced
	K: Category of CO2 reduction (In environmental CO2 reduction there are different scopes under which CO2 is classified)
	H: Imposed by law?
E1 has a (1,1) relationship since every location is subject to environmental regulations. In the case that there is not a specified objective, then it is usually stated as 0% reduction.
As such, it will always have a (1,1) relationship with the objectives.
On the other hand on E2, each objective can have any amount of factories which follow it (0,n).",No output,,
A0212524U,"SELECT continent_name, continent_code
FROM country
GROUP BY continent_name,continent_code;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT av.name AS app, c.name AS country
FROM available av, country c, store s1, store s2
WHERE av.name = s1.name
  AND av.name = s2.name
  AND av.country = c.code3
  AND c.continent_code = 'EU'
  AND s1.os = 'iOS'
  AND s2.os = 'Android';","42, [('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('????????? ???? ???????????', 'Russian Federation'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('CORONAVIRUS - ???????????', 'Ukraine'), ('Luscii', 'Netherlands, Kingdom of the'), ('COVID Radar', 'Netherlands, Kingdom of the')]",,,"SELECT name
FROM country
GROUP BY name
HAVING count(DISTINCT continent_name) > 1;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select name from(
select name, row_number() over (partition by name order by continent_name) as index)
from country)t1
where t1.index = '2';",No output,,,,No output,,,"SELECT c.name, count(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, count(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, count(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, count(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E1(
	A TEXT NOT NULL,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	PRIMARY KEY (C, D));
CREATE TABLE E2(
	J TEXT NOT NULL,
	K TEXT NOT NULL,
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL);
CREATE TABLE S(
	F TEXT NOT NULL,
	SA TEXT,
	SC TEXT NOT NULL,
	SD TEXT NOT NULL,
	SG TEXT REFERENCES E2(G),
	PRIMARY KEY (SC, SD, SA),
	FOREIGN KEY (SC, SD) REFERENCES E1(C, D)
	);
ALTER TABLE E1
ADD FOREIGN KEY (C,D) REFERENCES S(SC,SD);",No output,Num. tables: 3; Num. not null: 10; Num. foreign keys defined: 3 (CHECK CODE) ; ,,"This entity relationship model can be applyed in company.
E1 is the table contains the identification information of enployee.
	A: employee ID
	B: sex
	C: first_name
	D: last_name
	primary key: A, C+D
	Candidate key: C+D or A
S is the table contains information of personal account that have one-to-one
relationship with table (E1) employee.
	F: open account time
E2 is the table contains information of login actions
	G: login time (Primary key)
	H: logout time
	K: stay time
	J: login position",No output,,
A0218816Y,"SELECT DISTINCT continent_name, continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT av.name AS app, c.name AS country
FROM available av, country c, store s
WHERE av.country = c.code3
AND c.continent_name = 'Europe'
AND av.name = s.name
AND s.os = 'iOS'
INTERSECT(
SELECT av.name AS app, c.name AS country
FROM available av, country c, store s
WHERE av.country = c.code3
AND c.continent_name = 'Europe'
AND av.name = s.name
AND s.os = 'Android'
);","42, [('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('Korona ™nlem', 'Turkey, Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('Coronavirus Support App (UK)', 'United Kingdom of Great Britain & Northern Ireland')]",,,"SELECT name
FROM country
GROUP BY name
HAVING count(*) > 1
ORDER BY name ASC;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,,No output,,,"SELECT a.name
FROM app a, available av, country c, store s
WHERE a.name = av.name
AND av.country = c.code3
AND continent_name = 'Oceania'
AND a.name = s.name
AND s.os = 'iOS'
INTERSECT(
SELECT a.name
FROM app a, available av, country c, store s
WHERE a.name = av.name
AND av.country = c.code3
AND continent_name = 'Oceania'
AND a.name = s.name
AND s.os = 'Android'
)","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('MyAus COVID-19',), ('COVIDSafe',), ('TCC COVID Monitor',)]","Missing semicolon, CHECK CODE; ",,"SELECT c.name, n.count
FROM country c, (
	SELECT av.country, count(DISTINCT av.name) AS count
	FROM available av
	GROUP BY av.country
	ORDER BY count DESC) AS n
WHERE n.country = c.code3
ORDER BY n.count DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, n.count
FROM country c, (
	SELECT av.country, count(DISTINCT av.name) AS count
	FROM available av
	GROUP BY av.country
	ORDER BY count DESC) AS n
WHERE n.country = c.code3
ORDER BY n.count DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","SELECT c.name, n.count
FROM country c, (
	SELECT av.country, count(DISTINCT av.name) AS count
	FROM available av
	GROUP BY av.country
	ORDER BY count DESC) AS n
WHERE n.country = c.code3
ORDER BY n.count DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8)]","SELECT c.name, n.count
FROM country c, (
	SELECT av.country, count(DISTINCT av.name) AS count
	FROM available av
	GROUP BY av.country
	ORDER BY count DESC) AS n
WHERE n.country = c.code3
ORDER BY n.count DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Italy, Italian Republic', 7), ('Germany, Federal Republic of', 7)]",,,"CREATE TABLE IF NOT EXISTS E1 (
	A VARCHAR(256),
	B VARCHAR(256) NOT NULL,
	C VARCHAR(256),
	D VARCHAR(256),
	PRIMARY KEY (A, C, D));
CREATE TABLE S (
	F VARCHAR(256) NOT NULL);
CREATE TABLE IF NOT EXISTS E2 (
	G VARCHAR(256) PRIMARY KEY,
	H VARCHAR(256) NOT NULL,
	J VARCHAR(256) NOT NULL,
	K VARCHAR(256) NOT NULL);",No output,Num. tables: 3; Num. not null: 5; Num. foreign keys defined: 0; ,,"The ERD could represent a relationship between an amateur football player who is registered at a amateur football club.
Table E1 represents the football player, S represents the footballer player ""is registered"" at a football club, and E2 represents the amateur club.
Each player must be registered at one club but cannot be registered at multiple clubs.
Each amateur club can have 0 or n registered players.
A = Registration number
B = First name
C = Last name
D = Birthday
F = Active or non-active player
G = Club registration nymber
H = City
J = Sports
K = Club name",No output,,
A0218820J,"SELECT continent_name,continent_code 
FROM country;","262, [('Asia', 'AS'), ('Europe', 'EU'), ('Antarctica', 'AN'), ('Africa', 'AF'), ('Oceania', 'OC'), ('Europe', 'EU'), ('Africa', 'AF'), ('North America', 'NA'), ('Europe', 'EU'), ('Asia', 'AS')]",,,"SELECT ava.name AS app,c.name AS country
FROM available ava,store s, country c
WHERE c.code3=ava.country
AND ava.name=s.name
AND c.continent_name='Europe'
AND s.os='iOS'
INTERSECT
SELECT ava.name AS app,c.name AS country
FROM available ava,store s, country c
WHERE c.code3=ava.country
AND ava.name=s.name
AND c.continent_name='Europe'
AND s.os='Android';","42, [('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('Korona ™nlem', 'Turkey, Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('Coronavirus Support App (UK)', 'United Kingdom of Great Britain & Northern Ireland')]",,,"SELECT name
FROM country
GROUP BY name
HAVING COUNT(continent_name)>1	
ORDER BY name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name=c2.name
AND c1.continent_name<>	c2.continent_name
ORDER BY c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT ava.name 
FROM available ava,store s, country c
WHERE c.code3=ava.country
AND ava.name=s.name
AND c.continent_name='Oceania'
AND s.os in (SELECT DISTINCT s.os
FROM store s);","20, [('Bupa Aged Care Connect',), ('healthdirect',), ('Awhina - informing health workers',), ('NZ COVID Tracer',), ('healthdirect',), ('COVIDSafe',), ('Coronavirus Australia',), ('COVID VS',), ('MyAus COVID-19',), ('Covid-19  Armenia',)]",,,"SELECT c.name, COUNT(ava.name)
FROM country c, available ava
WHERE c.code3 =ava.country
GROUP BY c.name
ORDER BY COUNT(ava.name) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(ava.name)
FROM country c, available ava
WHERE c.code3 =ava.country
GROUP BY c.name
ORDER BY COUNT(ava.name) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(ava.name)
FROM country c, available ava
WHERE c.code3 =ava.country
GROUP BY c.name
ORDER BY COUNT(ava.name) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(ava.name)
FROM country c, available ava
WHERE c.code3 =ava.country
GROUP BY c.name
ORDER BY COUNT(ava.name) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2(
G VARCHAR(30) PRIMARY KEY,
J VARCHAR(30) NOT NULL,
K VARCHAR(30) NOT NULL,
H VARCHAR(30) NOT NULL);
CREATE TABLE IF NOT EXISTS E1_S(
A VARCHAR(30) NOT NULL UNIQUE,
C VARCHAR(30) NOT NULL,
D VARCHAR(30) NOT NULL,
B VARCHAR(30) NOT NULL,
PRIMARY KEY (C,D),
F VARCHAR(30) NOT NULL,
G VARCHAR(30) REFERENCES E2(G));",No output,Num. tables: 2; Num. not null: 8; Num. foreign keys defined: 1 (CHECK CODE) ; ,,,No output,,
A0218840E,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name app, c.name
FROM available a, country c, store s, store s2
WHERE a.country = c.code3
AND c.continent_name = 'Europe'
AND s.name = a.name
AND s2.name = a.name
AND s.os = 'iOS'
AND s2.os = 'Android';","42, [('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('????????? ???? ???????????', 'Russian Federation'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('CORONAVIRUS - ???????????', 'Ukraine'), ('Luscii', 'Netherlands, Kingdom of the'), ('COVID Radar', 'Netherlands, Kingdom of the')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(c.name) > 1
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c.name
FROM country c, country c2
WHERE c.continent_code <> c2.continent_code
AND c.name = c2.name
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT a.name
FROM available a, country c, store s
WHERE a.name = s.name
AND a.country = c.code3
AND c.continent_name = 'Oceania'
AND s.os >= ALL(SELECT DISTINCT s.os
			  FROM store s);","11, [('healthdirect',), ('COVIDSafe',), ('COVID VS',), ('MyAus COVID-19',), ('Covid-19  Armenia',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('#BeatCovid19Now',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]",,,"SELECT c.name, COUNT(ap.name)
FROM country c, app ap, available av
WHERE ap.name = av.name
AND c.code3 = av.country
GROUP BY c.name
ORDER BY COUNT(ap.name) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(ap.name)
FROM country c, app ap, available av
WHERE ap.name = av.name
AND c.code3 = av.country
GROUP BY c.name
ORDER BY COUNT(ap.name) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(ap.name)
FROM country c, app ap, available av
WHERE ap.name = av.name
AND c.code3 = av.country
GROUP BY c.name
ORDER BY COUNT(ap.name) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(ap.name)
FROM country c, app ap, available av
WHERE ap.name = av.name
AND c.code3 = av.country
GROUP BY c.name
ORDER BY COUNT(ap.name) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E1(
A TEXT,
B TEXT NOT NULL,
C TEXT,
D TEXT,
PRIMARY KEY(A,C,D));
CREATE TABLE E2(
G TEXT PRIMARY KEY ,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL);
CREATE TABLE S(
F TEXT NOT NULL,
A TEXT,
C TEXT,
D TEXT,
G TEXT,
FOREIGN KEY (G) REFERENCES E2(G),
PRIMARY KEY(A,C,D));",No output,Num. tables: 3; Num. not null: 5; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"E1 refers to an Employee,
A refers to their first name,
C refers to their age,
D refers to the function they work under.
In the event there are colleagues with the same first name working in the
same department, their age is likely to differ and set them apart.
B refers to their employment type e.g full time, part-time etc.
S refers to a income tax filing relationship, F refers to the year of filing. 
At a given point an employee can only have 1 income tax filing in a year. 
But if the part-time employee is not working that year then there will 
not be an income tax filing with the company for that year which explains 
the optional is to many relationship with company. The company has several
income tax filed on behalf of all its employees.
E2 refers to the company they work for,
G being the UEN which is the company registration number,
J, K and H can be the company's postal code, founding year, employee count.",No output,,
A0218849M,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT av.name AS app, c.name AS country, s.store
FROM available av, country c, store s
WHERE av.country = c.code3
AND av.name = s.name
AND c.continent_code = 'EU'
ORDER BY av.name ASC;
SELECT s.name, count(*)
FROM store s
GROUP BY s.name
HAVING COUNT(*) >1
ORDER BY s.name ASC;","138, [('#BeatCovid19Now', 2), ('( Tetamman ) ????', 2), ('???', 2), ('??? ???', 2), ('????? ????', 2), ('????? ?????', 2), ('????????? ???? ???????????', 2), ('?????????? ??????????', 2), ('????????????????', 2), ('???19 ?? ??', 2)]","Multiple semicolons detected, CHECK CODE; ",,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(*) >1
ORDER BY c.name ASC;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT c.name
FROM c.country, d.country
WHERE (SELECT DISTINCT d.name
FROM country d) AS d.country",No output,"Missing semicolon, CHECK CODE; ",,"SELECT av.name
FROM available av, country c
WHERE av.country = c.code3
AND c.continent_code = 'OC'
ORDER BY av.name ASC","12, [('#BeatCovid19Now',), ('Awhina - informing health workers',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('COVID VS',), ('CovidCare - Symptom monitor',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',)]","Missing semicolon, CHECK CODE; ",,"SELECT av.country, count(*)
FROM available av
GROUP BY av.country
HAVING COUNT(*) >=1
ORDER BY count DESC
LIMIT 5;","5, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16)]","SELECT av.country, count(*)
FROM available av
GROUP BY av.country
HAVING COUNT(*) >=1
ORDER BY count DESC
LIMIT 5;","5, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16)]","SELECT av.country, count(*)
FROM available av
GROUP BY av.country
HAVING COUNT(*) >=1
ORDER BY count DESC
LIMIT 5;","5, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16)]","SELECT av.country, count(*)
FROM available av
GROUP BY av.country
HAVING COUNT(*) >=1
ORDER BY count DESC
LIMIT 5;","5, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16)]",,,"CREATE TABLE IF NOT EXISTS E1(
A VARCHAR(8),
B VARCHAR(8) NOT NULL,
C VARCHAR(8),
D VARCHAR(8),
PRIMARY KEY (A, C, D)
);
CREATE TABLE IF NOT EXISTS E2(
G VARCHAR(8) PRIMARY KEY,
H VARCHAR(8) NOT NULL,
J VARCHAR(8) NOT NULL,
K VARCHAR(8) NOT NULL
);
CREATE TABLE IF NOT EXISTS S(
F VARCHAR(8) NOT NULL,
A VARCHAR(8),
B VARCHAR(8) NOT NULL,
C VARCHAR(8),
D VARCHAR(8),
G VARCHAR(8),
PRIMARY KEY (A, C, D, G),
FOREIGN KEY (A, C, D) REFERENCES E1 (A, C, D),
FOREIGN KEY (G) REFERENCES E2 (G)
);",No output,Num. tables: 3; Num. not null: 6; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 is a person's particulars
A = name
B = residential address
C = father's name
D = mother's name
E2 is the public hospitals
G = hospital name
H = hospital address
J = building name
K = block name
S is the relationship set where a person can be born.
The composite key of C and D is not sufficient as siblings have the same parents' names
Thus, the combination of A, C and D is unique enough to be a primary key.
There is a partication constraint of (1,1) between E1 and E2 because everyone is only born once
However, the partication constrain of (0,n) between E2 and E1 is because not all hospitals deliver the people in E1.",No output,,
A0218855U,"SELECT DISTINCT c.continent_name, c.continent_code FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT av.name as app, c.name as country
FROM available av LEFT JOIN country c ON av.country = c.code3, store s
WHERE c.continent_name = 'Europe'
AND s.os IN ('iOS','Android')
GROUP BY av.name, c.name
HAVING COUNT(DISTINCT s.os) = 2;","102, [('???', 'Ukraine'), ('??? ?????', 'Ukraine'), ('???? ??????????? - Covid-19', 'Russian Federation'), ('????????? ???? ???????????', 'Russian Federation'), ('?????????? ??????????', 'Russian Federation'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Asistencia COVID-19', 'Spain, Kingdom of'), ('AyudaCOVID', 'Spain, Kingdom of'), ('Babylon: 24/7 Healthcare', 'United Kingdom of Great Britain & Northern Ireland'), ('Beat COVID Gibraltar', 'Gibraltar')]",,,"SELECT c1.name 
FROM 
(SELECT DISTINCT c.name, count (distinct c.continent_name)
FROM country c
GROUP BY c.name
ORDER BY count DESC) AS c1
WHERE c1.count >1;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT c1.name 
FROM 
(SELECT DISTINCT c.name, count (distinct c.continent_name)
FROM country c
GROUP BY c.name
ORDER BY count DESC) AS c1
WHERE c1.count >1;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Aggregation is used, CHECK CODE; ",,"#We do not limit the selection of the OS type and set no. of OS to be more than 1.
SELECT av.name
FROM available av LEFT JOIN country c ON av.country = c.code3, store s
WHERE c.continent_name = 'Oceania'
GROUP BY av.name
HAVING COUNT(DISTINCT s.os) >= 2;",No output,"Aggregation is used, CHECK CODE; ",,"#To update no. of fitch to achieve the no. of row selection
SELECT c.name, count (c.name)
FROM country c LEFT JOIN available av ON c.code3 = av.country
GROUP BY c.name
ORDER BY count DESC
FETCH FIRST 6 ROWS ONLY;",No output,"#To update no. of fitch to achieve the no. of row selection
SELECT c.name, count (c.name)
FROM country c LEFT JOIN available av ON c.code3 = av.country
GROUP BY c.name
ORDER BY count DESC
FETCH FIRST 7 ROWS ONLY;",No output,"#To update no. of fitch to achieve the no. of row selection
SELECT c.name, count (c.name)
FROM country c LEFT JOIN available av ON c.code3 = av.country
GROUP BY c.name
ORDER BY count DESC
FETCH FIRST 8 ROWS ONLY;",No output,"#To update no. of fitch to achieve the no. of row selection
SELECT c.name, count (c.name)
FROM country c LEFT JOIN available av ON c.code3 = av.country
GROUP BY c.name
ORDER BY count DESC
FETCH FIRST 16 ROWS ONLY;",No output,,,"#Assume all the arritbute are charterers.
CREATE TABLE IF NOT EXISTS E1 (
A VARCHAR(20) PRIMARY KEY,
B VARCHAR(20)  NOT NULL,
C VARCHAR(50) NOT NULL,
D VARCHAR(50) NOT NULL,
PRIMARY KEY (C,D)
);
CREATE TABLE IF NOT EXISTS E2 (
G VARCHAR(20) PRIMARY KEY,
J VARCHAR(20)  NOT NULL,
K VARCHAR(50) NOT NULL,
H VARCHAR(50) NOT NULL,
);
CREATE TABLE IF NOT EXISTS S (
F NUMERIC(20) NOT NULL,
A VARCHAR(20) NOT NULL,
B VARCHAR(20)  NOT NULL,
C VARCHAR(50) NOT NULL,
D VARCHAR(50) NOT NULL,
G VARCHAR(20) NOT NULL,
J VARCHAR(20)  NOT NULL,
K VARCHAR(50) NOT NULL,
H VARCHAR(50) NOT NULL,
PRIMARY KEY (A,C,D,G),
FOREIGN KEY (A) REFERENCES E1(A),
FOREIGN KEY (C,D) REFERENCES E1(C,D),
FOREIGN KEY (G) REFERENCES E2(G));",No output,Num. tables: 3; Num. not null: 15; Num. foreign keys defined: 3 (CHECK CODE) ; ,,"**********************************************************************
#Sorry, dont have sufficient time for this question, but simplely, 
E1 can be 'employee', where C is first name and D is last name, A is ID no. and B is age;
S can be 'work for' with F as starting year; 
E2 can be employer information, where G is UEN code (comapny register code) which is primary key, and J,K,H can be other 
attributes of the company such as Address, Industry, HQ Country, etc.
**********************************************************************",No output,,
A0218865R,"select distinct continent_name, continent_code 
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select app, name as country from (
select app.name as app, store, os, available.country, c.name
from app, store, available, country c
where app.name = store.name
and app.name = available.name
and available.country = c.code3
and c.code3 in (select code3 from country
where continent_name = 'Europe')
) temp
group by app, name
having count(*)=2;","46, [('???? ??????????? - Covid-19', 'Russian Federation'), ('Coronavirus Karantina', 'Turkey, Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID izle', 'Azerbaijan, Republic of'), ('Luscii', 'Netherlands, Kingdom of the'), ('Asistencia COVID-19', 'Spain, Kingdom of')]",,,"select name from country
group by name
having count(distinct continent_name)>1;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct name from country
where name not in (select name from country
			  group by name
				  having count(distinct continent_name)=1);","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]","Aggregation is used, CHECK CODE; ",,"select app as name from (
select app.name as app, store, os, available.country, c.name
from app, store, available, country c
where app.name = store.name
and app.name = available.name
and available.country = c.code3
and c.code3 in (select code3 from country
where continent_name = 'Oceania')
) temp
group by app, name
having count(*)>=ALL(select count(distinct os) from store);","9, [('Covid-19  Armenia',), ('NZ COVID Tracer',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('healthdirect',), ('COVIDSafe',), ('Bupa Aged Care Connect',), ('MyAus COVID-19',), ('Coronavirus Australia',)]","Aggregation is used, CHECK CODE; ",,"(
select name, count(distinct app) as count from (
select distinct app.name as app, available.country, c.name
from app, available, country c
where app.name = available.name
and available.country = c.code3
) temp 
group by name) order by count desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","(
select name, count(distinct app) as count from (
select distinct app.name as app, available.country, c.name
from app, available, country c
where app.name = available.name
and available.country = c.code3
) temp 
group by name) order by count desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","(
select name, count(distinct app) as count from (
select distinct app.name as app, available.country, c.name
from app, available, country c
where app.name = available.name
and available.country = c.code3
) temp 
group by name) order by count desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","(
select name, count(distinct app) as count from (
select distinct app.name as app, available.country, c.name
from app, available, country c
where app.name = available.name
and available.country = c.code3
) temp 
group by name) order by count desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE E1 (
A TEXT PRIMARY KEY,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL);
CREATE TABLE E2 (
A TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL,
G TEXT PRIMARY KEY,
H TEXT NOT NULL);
CREATE TABLE S(
A TEXT NOT NULL,
F TEXT NOT NULL,
G TEXT NOT NULL,
PRIMARY KEY (A, G),
FOREIGN KEY (A) REFERENCES E1(A),
FOREIGN KEY (G) REFERENCES E2(G)
);",No output,Num. tables: 3; Num. not null: 10; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 can be a list of companies in Singapore, with some company related attributes.
Attribute A can be the ACRA registered company UEN.
Attribute B can be the year of registration.
Attribute C can be the country of the company.
Attribute D can be the company name.
C and D can be candidate key because the combination of company name + country uniquely identifies the company in Singapore.
S can be the relationship between the Singapore registered company UEN and the company CEO. 
The relationship is 1-1 because a registered company must have a CEO.
Attribute F can be the number of years of being the CEO.
E2 can be a list of names of CEOs of companies in the world.
Attribute G can be the name of the company CEO.
Attribute J can be the country of the company
Attribute K can be the industry of the company.
Attribute H can be the sector of the company.
The participation constraint is (0,n) because:
1. the names in E2 may not be a CEO of a company in Singapore, but in other countries -> hence the minimum value is 0
2. the names in E2 may be a CEO of multiple companies in Singapore -> hence the maximum value is n",No output,,
A0218871X,"SELECT DISTINCT continent_name,continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT DISTINCT s1.name
FROM store s1,store s2, available av,country c
WHERE s1.name = s2.name AND c.code3 = av.country AND av.name = s1.name
AND s1.os = 'iOS' AND s2.os = 'Android' AND c.continent_code = 'EU';","42, [('GVA Coronavirus',), ('COVID Radar',), ('COVapp',), ('????????? ???? ???????????',), ('StopKorona!',), ('COVID-19.eus',), ('TreCovid19',), ('Hayat Eve Sigar',), ('Care Workforce',), ('Covidom Patient',)]",,,"SELECT name
FROM country
GROUP BY name
HAVING count(*) = 2;","7, [('Georgia',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_code <> c2.continent_code;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT name
FROM available av
WHERE NOT EXISTS
	(SELECT *
	 FROM  country c
	 WHERE av.country = c.code3 AND c.continent_code = 'OC'
	 AND NOT EXISTS (
	 	SELECT *
		FROM store st
		WHERE av.name = st.name)
	 );","390, [('CISP - Covid19 Angola',), ('Ser positivo contra COVID',), ('COVID-19 UAE',), ('TraceCovid',), ('COVID19 - DXB Responder',), ('StayHome App',), ('Yerba Buena Covid-19',), ('CUIDAR COVID-19 ARGENTINA',), ('Covid19 Jujuy',), ('COVID-19 Provincia de Santa Fe',)]",,,"SELECT c.name, COUNT(*) AS count
FROM available av,country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count DESC LIMIT 6
;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(*) AS count
FROM available av,country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count DESC LIMIT 7
;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(*) AS count
FROM available av,country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count DESC LIMIT 8
;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(*) AS count
FROM available av,country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count DESC LIMIT 16
;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2(
G TEXT PRIMARY KEY,
J TEXT NOT NULL,
K TEXT NOT NULL,
H TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS S(
A TEXT,
B TEXT NOT NULL	,
C TEXT,
D TEXT,
E TEXT NOT NULL,
F TEXT NOT NULL,
G TEXT REFERENCES E2(G),
PRIMARY KEY(A,C,D));",No output,Num. tables: 2; Num. not null: 6; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"At the beginning of this semester, each student is required to choose only one Co-curricular activities (CCA).
They have to choose one, so it is (1,1) participation constraint.
Student can be identified by the combination of class, name, year of study and CCA can be identified by their name.
E1 - student
S - choice
E2 CCA
A name
B gender
C year of study
D class
F registration date and time
J Fee
K type
H venue
G name of CCA",No output,,
A0218875N,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT s1.name AS app, c.name AS country
FROM store s1, store s2, app a, available av, country c
WHERE s1.name = a.name
AND S2.name = a.name
AND S1.os ='iOS'
AND S2.os = 'Android'
AND av.name = a.name
AND av.country = 'Europe'
AND av.country = c.code3;","0, []",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT (c.continent_name)> 1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c.name
FROM country c
WHERE 'c.continent_name' > 1;",No output,,,"SELECT DISTINCT a.name
FROM store s, app a, available av, country c
WHERE c.continent_name = 'Oceania'
AND c.code3 = av.country
AND av.name = a.name
AND s.name = a.name
;","12, [('Bupa Aged Care Connect',), ('Covid-19  Armenia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',)]",,,"SELECT c.name, COUNT (a.name) 
FROM country c, available av, app a
WHERE av.country = c.code3
AND av.name = a.name
GROUP BY c.name
ORDER BY COUNT DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT (a.name) 
FROM country c, available av, app a
WHERE av.country = c.code3
AND av.name = a.name
GROUP BY c.name
ORDER BY COUNT DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT (a.name) 
FROM country c, available av, app a
WHERE av.country = c.code3
AND av.name = a.name
GROUP BY c.name
ORDER BY COUNT DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT (a.name) 
FROM country c, available av, app a
WHERE av.country = c.code3
AND av.name = a.name
GROUP BY c.name
ORDER BY COUNT DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1 (
	A TEXT UNIQUE NOT NULL,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	PRIMARY KEY (C,D)
);
CREATE TABLE IF NOT EXISTS E2 (
	J TEXT NOT NULL,
	K TEXT NOT NULL,
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS S (
	F TEXT NOT NULL,
	G TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	PRIMARY KEY (C,D,G),
	FOREIGN KEY (G) REFERENCES E2 (G),
	FOREIGN KEY (D,C) REFERENCES E1 (D,C)
);",No output,Num. tables: 3; Num. not null: 11; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 = Employee
E2 = Company
S = Contract
A = NRIC
B = Age
C = Name
D = Employee ID
F = Date of employment start
G = Company Registered ID
H = Country
J = Name
K = Number of offices
The example is of an entity set E2 (companies) of which entity set E1 (employees) are employed to work for under the relationship (contract). 
As there can be multiple employees with the same name (C) and employee ID (D) across companies, we use a composite of (C) + (D) as candidate keys to identify.
E2 (0,n): Companies can choose to employ multiple employees or none at all.
E1 (1,1): Employees have to work and can only choose to work at 1 company at any given time.",No output,,
A0218877L,"SELECT DISTINCT CONTINENT_NAME, CONTINENT_CODE FROM COUNTRY;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT DISTINCT AF1.NAME AS APP, C1.NAME AS COUNTRY
FROM APPFUNCTIONALITY AF1 
INNER JOIN AVAILABLE AV1 ON AF1.NAME=AV1.NAME
INNER JOIN COUNTRY C1 ON AV1.COUNTRY=C1.CODE3
INNER JOIN STORE STORE1 ON AF1.NAME=STORE1.NAME 
INNER JOIN (
SELECT DISTINCT AF.NAME AS APP, C.NAME AS COUNTRY
FROM APPFUNCTIONALITY AF 
INNER JOIN AVAILABLE AV ON AF.NAME=AV.NAME
INNER JOIN COUNTRY C ON AV.COUNTRY=C.CODE3
INNER JOIN STORE STORE ON AF.NAME=STORE.NAME 
WHERE 
AF.FUNCTIONALITY = 'contact tracing' 
AND STORE.OS IN ('iOS')
AND C.CONTINENT_NAME = 'Europe') IOS
ON AF1.NAME = IOS.APP
WHERE 
AF1.FUNCTIONALITY = 'contact tracing' 
AND STORE1.OS IN ('Android')
AND C1.CONTINENT_NAME = 'Europe'","10, [('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Immuni', 'Italy, Italian Republic'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopCovid France', 'France, French Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT NAME FROM (
SELECT NAME, COUNT(*) AS COUNT FROM COUNTRY
GROUP BY NAME
HAVING COUNT(*)>1) CNT
ORDER BY NAME;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT NAME FROM (
SELECT C1.NAME, C1.CONTINENT_CODE AS CC1, C2.CC2 FROM COUNTRY C1
INNER JOIN 
(SELECT NAME, CONTINENT_CODE AS CC2 FROM COUNTRY) C2
ON C1.NAME=C2.NAME) JOINCTRY
WHERE CC1 <> CC2
ORDER BY NAME;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT COUNT(DISTINCT OS) AS OS1 FROM STORE;
SELECT DISTINCT AVAIL.NAME FROM AVAILABLE AVAIL 
INNER JOIN COUNTRY COUNTRY ON AVAIL.COUNTRY=COUNTRY.CODE3
INNER JOIN (
	SELECT NAME, COUNT(*) AS COUNT FROM STORE
	GROUP BY NAME ) STORE_OS
	ON AVAIL.NAME=STORE_OS.NAME 
INNER JOIN (
	SELECT COUNT(DISTINCT OS) AS OS1 FROM STORE ) COUNT_OS  
	ON STORE_OS.COUNT = COUNT_OS.OS1
WHERE COUNTRY.CONTINENT_NAME = 'Oceania'
ORDER BY AVAIL.NAME;","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]","Aggregation is used, CHECK CODE; ",,"SELECT C.NAME, AV.COUNT FROM COUNTRY C
INNER JOIN
(SELECT COUNTRY, COUNT(*) AS COUNT FROM AVAILABLE
GROUP BY COUNTRY
ORDER BY COUNT DESC LIMIT 6) AV
ON C.CODE3=AV.COUNTRY
ORDER BY COUNT DESC;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT C.NAME, AV.COUNT FROM COUNTRY C
INNER JOIN
(SELECT COUNTRY, COUNT(*) AS COUNT FROM AVAILABLE
GROUP BY COUNTRY
ORDER BY COUNT DESC LIMIT 7) AV
ON C.CODE3=AV.COUNTRY
ORDER BY COUNT DESC;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","SELECT C.NAME, AV.COUNT FROM COUNTRY C
INNER JOIN
(SELECT COUNTRY, COUNT(*) AS COUNT FROM AVAILABLE
GROUP BY COUNTRY
ORDER BY COUNT DESC LIMIT 8) AV
ON C.CODE3=AV.COUNTRY
ORDER BY COUNT DESC;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","SELECT C.NAME, AV.COUNT FROM COUNTRY C
INNER JOIN
(SELECT COUNTRY, COUNT(*) AS COUNT FROM AVAILABLE
GROUP BY COUNTRY
ORDER BY COUNT DESC LIMIT 16) AV
ON C.CODE3=AV.COUNTRY
ORDER BY COUNT DESC;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7), ('Italy, Italian Republic', 7)]",,,"DROP TABLE IF EXISTS E2; CREATE TABLE E2(
G TEXT PRIMARY KEY,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL);
DROP TABLE IF EXISTS S; CREATE TABLE S(
F TEXT NOT NULL,
G TEXT REFERENCES E2(G),
UNIQUE (F,G));
DROP TABLE IF EXISTS E1; CREATE TABLE E1(
A TEXT PRIMARY KEY,
B TEXT NOT NULL,
C TEXT,
D TEXT,
FOREIGN KEY (C, D) REFERENCES S(F,G));",No output,Num. tables: 3; Num. not null: 5; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E2 can be universities in SG with name G as the primary key
H, J, K can be other attributes such as acronym of name, address, ranking in the world
E1 can be courses provided by universities in SG 
A can be the primary key on course provided in student study year 1, 2, ...
B can be the name of the courses
Because courses code might have have duplicates among universities and even faculties in the same univerisies, 
C,D can be a combination of university name and created date to be the foreign key.
S can be the relation created by with F as the created date",No output,,
A0218897H,"select distinct continent_name, continent_code from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select av.name as app, c.name as country from available av
left join country c on av.country = c.code3
left join store s on av.name = s.name
where c.continent_code = 'EU'
group by av.name, c.name
having count(distinct s.os) = 2;","42, [('???', 'Ukraine'), ('????????? ???? ???????????', 'Russian Federation'), ('?????????? ??????????', 'Russian Federation'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Asistencia COVID-19', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('CONFINAPP', 'Spain, Kingdom of'), ('Corona-Datenspende', 'Germany, Federal Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Corona Check Screening', 'Germany, Federal Republic of')]",,,"select name from country
group by name
having count(continent_code) > 1
order by name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct name from country c1
where exists (
	select * from country c2
	where c1.name = c2.name
	and c1.continent_code <> c2.continent_code)
order by c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct s1.name from store s1
left join available a on s1.name = a.name
left join country c on a.country = c.code3
where c.continent_name = 'Oceania'
and exists (
	select * from store s2
where s1.name = s2.name
and s1.os <> s2.os);","8, [('Bupa Aged Care Connect',), ('MyAus COVID-19',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',)]",,,"select c.name, count(ap.name) from app ap
left join available av on ap.name = av.name
left join country c on av.country = c.code3
group by c.name
order by count desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count(ap.name) from app ap
left join available av on ap.name = av.name
left join country c on av.country = c.code3
group by c.name
order by count desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name, count(ap.name) from app ap
left join available av on ap.name = av.name
left join country c on av.country = c.code3
group by c.name
order by count desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8)]","select c.name, count(ap.name) from app ap
left join available av on ap.name = av.name
left join country c on av.country = c.code3
group by c.name
order by count desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Argentina, Argentine Republic', 7)]",,,"create table E1 (
A VARCHAR(255) NOT NULL,
B VARCHAR(255) NOT NULL,
C VARCHAR(255) NOT NULL,
D VARCHAR(255) NOT NULL,
PRIMARY KEY(A, C, D));
create table E2 (
J VARCHAR(255) NOT NULL,
G VARCHAR(255) NOT NULL PRIMARY KEY,
K VARCHAR(255) NOT NULL,
H VARCHAR(255) NOT NULL);
create table S (
A VARCHAR(255) NOT NULL,
C VARCHAR(255) NOT NULL,
D VARCHAR(255) NOT NULL,
G VARCHAR(255) NOT NULL REFERENCES E2(G),
FOREIGN KEY (A, C, D) REFERENCES E1(A, C, D),
F VARCHAR(255) NOT NULL);",No output,Num. tables: 3; Num. not null: 13; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 could be group of employees' details where E2 could be their dependents. 
Column A - Name
Column C - Email
Column D - Mobile
Column B - Age
Column J - Age
Column G - IC Number
Column K - Location
Column H - Relationship to Employee
Set S could be the insurance policy.
Column F - Max coverage/Insurance Type.",No output,,
A0218915Y,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT DISTINCT a.name AS app, c.name AS country
FROM app a, country c,available av, store st1, store st2
WHERE c.continent_name ='Europe'
AND av.country = c.code3
AND st1.os='iOS'
AND st2.os='Android'
AND st1.name = st2.name
AND a.name =st1.name
AND a.name =av.name;","42, [('Korona ™nlem', 'Turkey, Republic of'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Karantinas', 'Lithuania, Republic of'), ('Covidom Patient', 'France, French Republic'), ('GVA Responde', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('?????????? ??????????', 'Russian Federation')]",,,"SELECT DISTINCT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(*)>1;","8, [('Turkey, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Georgia',), ('Cyprus, Republic of',), ('Armenia, Republic of',)]",,,"(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='NA'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='AF')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='NA'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='EU')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='NA'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='AN')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='NA'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='SA')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='NA'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='AS')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='NA'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='OC')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='AF'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='EU')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='AF'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='AN')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='AF'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='SA')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='AF'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='AS')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='AF'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='OC')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='EU'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='AN')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='EU'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='SA')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='EU'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='SA')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='EU'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='AS')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='EU'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='OC')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='AN'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='SA')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='AN'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='AS')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='AN'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='OC')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='SA'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='AS')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='SA'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='OC')
UNION
(SELECT DISTINCT c.name
FROM country c
WHERE c.continent_code ='AS'
INTERSECT
SELECT c.name
FROM country c
WHERE c.continent_code ='OC');","8, [('Armenia, Republic of',), ('United States Minor Outlying Islands',), ('Georgia',), ('Azerbaijan, Republic of',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT av.name
FROM available av, country c,store st1,store st2
WHERE c.continent_name ='Oceania'
AND c.code3=av.country
AND st1.os='iOS'
AND st2.os='Android'
AND st1.name =st2.name
AND st1.name=av.name;","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]",,,"SELECT c.name AS name, COUNT(*) AS COUNT
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name AS name, COUNT(*) AS COUNT
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name AS name, COUNT(*) AS COUNT
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name AS name, COUNT(*) AS COUNT
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2(
J VARCHAR (32) NOT NULL,
K VARCHAR (32) NOT NULL,
H VARCHAR (32) NOT NULL,
G VARCHAR (32),
PRIMARY KEY (G));
CREATE TABLE IF NOT EXISTS E1_S(
F VARCHAR (32) NOT NULL,
B VARCHAR (32) NOT NULL,
C VARCHAR (32) NOT NULL,
D VARCHAR (32) NOT NULL,
UNIQUE (C,D),
A VARCHAR (32) PRIMARY KEY,
G VARCHAR (32) NOT NULL,
FOREIGN KEY (G) REFERENCES E2(G));",No output,Num. tables: 2; Num. not null: 8; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"Hired employees sign contract with the hiring companies.
E1 - Employee
E2 - Company
S - Contract 
A - Employee Number (unique ID used in the company)
B - Employee Home address
C - Employee first_name
D - Employee last_name
F - Contract Signing Channel (Like e-doc,paper)
G - Company Name
H - Company Address
J - Company Type
K - Company Industry
Here, A is regarded as the primary key (also candidate key), 
and the combination of C and D is as the other candidate key; 
E1->S as (1,1), it is the mandatory participation, and it is also a one-to-one
relationship
E2->S as (0,n), it is the optional participation, and it is also a many to many
relationship",No output,,
A0218923B,"SELECT DISTINCT continent_name, continent_code FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT DISTINCT ap.name AS app, C.name AS country
FROM app AS ap, available AS ava, country AS C, store AS s1, store as s2, appfunctionality as apf
WHERE ap.name = ava.name
AND ava.country = C.code3
AND C.continent_name = 'Europe' 
AND ap.name = s1.name
AND s1.os = 'Android' 
AND s1.name = s2.name
AND s2.os = 'iOS'
AND ava.name = apf.name 
AND apf.functionality='contact tracing';","10, [('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Immuni', 'Italy, Italian Republic'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopCovid France', 'France, French Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"SELECT name FROM country 
GROUP BY name 
HAVING count(*)>1 
ORDER BY name ASC;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c1.name AS name 
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_name!=c2.continent_name
ORDER BY name ASC;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT ap.name AS app
FROM app AS ap, available AS ava, country AS C, store AS s, appfunctionality as apf, store AS s2
WHERE ap.name = ava.name
AND ava.country = C.code3
AND C.continent_name = 'Oceania' 
AND ap.name = s.name
AND s.name = s2.name
AND s.os <> s2.os;","8, [('TCC COVID Monitor',), ('Coronavirus Australia',), ('MyAus COVID-19',), ('COVIDSafe',), ('healthdirect',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('NZ COVID Tracer',)]",,,"SELECT C.name, count (ap.name)
FROM app AS ap
RIGHT JOIN available AS ava ON ap.name = ava.name
JOIN country AS C ON ava.country = C.code3
GROUP BY C.name 
ORDER BY count (ap.name) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT C.name, count (ap.name)
FROM app AS ap
RIGHT JOIN available AS ava ON ap.name = ava.name
JOIN country AS C ON ava.country = C.code3
GROUP BY C.name 
ORDER BY count (ap.name) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT C.name, count (ap.name)
FROM app AS ap
RIGHT JOIN available AS ava ON ap.name = ava.name
JOIN country AS C ON ava.country = C.code3
GROUP BY C.name 
ORDER BY count (ap.name) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT C.name, count (ap.name)
FROM app AS ap
RIGHT JOIN available AS ava ON ap.name = ava.name
JOIN country AS C ON ava.country = C.code3
GROUP BY C.name 
ORDER BY count (ap.name) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1 (
	A VARCHAR(50) NOT NULL,
	B VARCHAR(50) NOT NULL,
	C VARCHAR(50) NOT NULL,
	D VARCHAR(50) NOT NULL,
    PRIMARY KEY(C,D,A)
);
CREATE TABLE IF NOT EXISTS E2(
    G VARCHAR(50)  PRIMARY KEY,
    H VARCHAR(50) NOT NULL,
    J VARCHAR(50) NOT NULL,
    K VARCHAR(50) UNIQUE NOT NULL
    );
CREATE TABLE IF NOT EXISTS t_bookmark (
    F VARCHAR(50) NOT NULL,
    G VARCHAR(50) NOT NULL,
    A VARCHAR(50) NOT NULL,
	C VARCHAR(50) NOT NULL,
	D VARCHAR(50) NOT NULL,
    PRIMARY KEY (G,C,D,A),
    FOREIGN KEY (C,D,A) REFERENCES E1(C,D,A) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE,
    FOREIGN KEY (G) REFERENCES E2(G) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE
);",No output,Num. tables: 3; Num. not null: 12; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"Real word example: It can be 1 employee only can have 1-1 relationship to 1 company but 
the 1 employee can do multiple projects. 
G is the primary key of E2,
E2 and S have zero or more relationship while E1 and S only have 1 to 1 relationship.
E1 has A, C, D as composited primary key.
S is the relationship between E1 and E2 table.
E2 can be project 
E1 can be Company 
and S can be employee.
reference: https://www.google.com/search?q=(o,n)+ER+diagram+means&rlz=1C5CHFA_enSG922SG922&sxsrf=AOaemvKuNvde5fn4RwZqY5RWYz3xlLgXJA:1632918322920&tbm=isch&source=iu&ictx=1&fir=wDbVgXtvuKnXcM%252CYKJRzGQ7GYRN0M%252C_&vet=1&usg=AI4_-kRHf2fkmjOaj16YJmaquPtO4VfBYA&sa=X&ved=2ahUKEwiXldbklqTzAhWDvJ4KHS8oAA8Q9QF6BAgXEAE&biw=1440&bih=631&dpr=2#imgrc=wDbVgXtvuKnXcM",No output,,
A0218929N,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT al.name AS app, c.name AS country
FROM available al, country c, store s1, store s2
WHERE al.country = c.code3
AND al.name = s1.name 
AND s1.os = 'iOS'
AND al.name = s2.name
AND s2.os = 'Android'
AND c.continent_name = 'Europe';","42, [('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('????????? ???? ???????????', 'Russian Federation'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('CORONAVIRUS - ???????????', 'Ukraine'), ('Luscii', 'Netherlands, Kingdom of the'), ('COVID Radar', 'Netherlands, Kingdom of the')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(DISTINCT c.continent_name) > 1;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_code <> c2.continent_code;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT al.name
FROM available al, country c
WHERE al.country = c.code3
AND c.continent_name = 'Oceania'
AND al.name NOT IN (
	SELECT idx.name
	FROM store s RIGHT OUTER JOIN
	(SELECT a.name, os.os
	FROM app a, (SELECT DISTINCT s.os FROM store s) AS os) AS idx
	ON s.name = idx.name
	AND s.os = idx.os
	WHERE s.name IS NULL);","8, [('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('TCC COVID Monitor',), ('MyAus COVID-19',)]",,,"SELECT loser.name, loser.count
FROM (
	SELECT c.name, COUNT(*)
	FROM country c, available al
	WHERE c.code3 = al.country
	GROUP BY c.name) as loser 
LEFT OUTER JOIN (
	SELECT c.name, COUNT(*)
	FROM country c, available al
	WHERE c.code3 = al.country
	GROUP BY c.name) as winner
ON winner.name <> loser.name
AND winner.count > loser.count
GROUP BY loser.name, loser.count
HAVING COUNT(loser.name) < 6
ORDER BY loser.count DESC;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT loser.name, loser.count
FROM (
	SELECT c.name, COUNT(*)
	FROM country c, available al
	WHERE c.code3 = al.country
	GROUP BY c.name) as loser 
LEFT OUTER JOIN (
	SELECT c.name, COUNT(*)
	FROM country c, available al
	WHERE c.code3 = al.country
	GROUP BY c.name) as winner
ON winner.name <> loser.name
AND winner.count > loser.count
GROUP BY loser.name, loser.count
HAVING COUNT(loser.name) < 7
ORDER BY loser.count DESC;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT loser.name, loser.count
FROM (
	SELECT c.name, COUNT(*)
	FROM country c, available al
	WHERE c.code3 = al.country
	GROUP BY c.name) as loser 
LEFT OUTER JOIN (
	SELECT c.name, COUNT(*)
	FROM country c, available al
	WHERE c.code3 = al.country
	GROUP BY c.name) as winner
ON winner.name <> loser.name
AND winner.count > loser.count
GROUP BY loser.name, loser.count
HAVING COUNT(loser.name) < 8
ORDER BY loser.count DESC;","9, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","SELECT loser.name, loser.count
FROM (
	SELECT c.name, COUNT(*)
	FROM country c, available al
	WHERE c.code3 = al.country
	GROUP BY c.name) as loser 
LEFT OUTER JOIN (
	SELECT c.name, COUNT(*)
	FROM country c, available al
	WHERE c.code3 = al.country
	GROUP BY c.name) as winner
ON winner.name <> loser.name
AND winner.count > loser.count
GROUP BY loser.name, loser.count
HAVING COUNT(loser.name) < 16
ORDER BY loser.count DESC;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7)]",,,"CREATE TABLE E2 (
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL,
	J TEXT NOT NULL,
	K TEXT NOT NULL);
CREATE TABLE E1 (
	A TEXT PRIMARY KEY,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	F TEXT NOT NULL,
	G TEXT NOT NULL REFERENCES E2(G),
	UNIQUE (C,D));",No output,Num. tables: 2; Num. not null: 8; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"The diagram can represent the current inpatients at the hospital.
E1: inpatient
E2: doctor-in-charge
A: NRIC of inpatient
B: gender
C: ward number
D: bed number
F: date of admission
G: employee number of doctor
H: gender
J: seniority (e.g. consultant)
K: date joined hospital
Candidate keys: Inpatient can be identified by either NRIC or a combination
of ward and bed number.
Participation constraints: Patient must have one and only one doctor-in-charge
assigned, so the hospital can track who is responsible.
But a doctor may have zero or many patients under his care at any one time.",No output,,
A0218930E,"SELECT DISTINCT continent_name, continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT DISTINCT af.name as app, c.name as country
FROM appfunctionality af, available a, country c, store s
WHERE af.name = a.name
AND af.name = s.name
AND a.country = c.code3
AND c.continent_name = 'Europe'
AND af.functionality = 'contact tracing'
AND s.os = 'iOS'
INTERSECT
SELECT DISTINCT af.name as app, c.name as country
FROM appfunctionality af, available a, country c, store s
WHERE af.name = a.name
AND af.name = s.name
AND a.country = c.code3
AND c.continent_name = 'Europe'
AND af.functionality = 'contact tracing'
AND s.os = 'Android';","10, [('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"SELECT DISTINCT c.name
FROM country c
GROUP BY c.name
HAVING count(c.name) > 1;","8, [('Turkey, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Georgia',), ('Cyprus, Republic of',), ('Armenia, Republic of',)]",,,"SELECT DISTINCT c1.name
FROM country c1
JOIN country c2 ON c1.name = c2.name
AND c1.continent_name != c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT a.name
FROM country c, available a, store s
WHERE c.code3 = a.country
AND a.name = s.name
AND continent_name = 'Oceania'
AND EXISTS (SELECT DISTINCT os
			   FROM store);","20, [('Bupa Aged Care Connect',), ('healthdirect',), ('Awhina - informing health workers',), ('NZ COVID Tracer',), ('healthdirect',), ('COVIDSafe',), ('Coronavirus Australia',), ('COVID VS',), ('MyAus COVID-19',), ('Covid-19  Armenia',)]",,,"SELECT DISTINCT c.name, count(a.name)
FROM country c, available a
WHERE c.code3 = a.country
GROUP BY c.name
ORDER BY count(a.name) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT DISTINCT c.name, count(a.name)
FROM country c, available a
WHERE c.code3 = a.country
GROUP BY c.name
ORDER BY count(a.name) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT DISTINCT c.name, count(a.name)
FROM country c, available a
WHERE c.code3 = a.country
GROUP BY c.name
ORDER BY count(a.name) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT DISTINCT c.name, count(a.name)
FROM country c, available a
WHERE c.code3 = a.country
GROUP BY c.name
ORDER BY count(a.name) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1(
    A VARCHAR(32),
    B VARCHAR(32) NOT NULL,
    C VARCHAR(32),
    D VARCHAR(32),
	PRIMARY KEY (A, C, D)
);
CREATE TABLE IF NOT EXISTS E2(
    G VARCHAR(32),
    H VARCHAR(32) NOT NULL,
    J VARCHAR(32) NOT NULL,
    K VARCHAR(32) NOT NULL,
    PRIMARY KEY (G)
);
CREATE TABLE IF NOT EXISTS S(
    F VARCHAR(32) NOT NULL,
    E1_A VARCHAR(32),
    E1_C VARCHAR(32),
    E1_D VARCHAR(32),
    E2_G VARCHAR(32) NOT NULL,
    PRIMARY KEY (E1_A, E1_C, E1_D),
    FOREIGN KEY (E1_A, E1_C, E1_D) REFERENCES E1(A, C, D),
    FOREIGN KEY (E2_G) REFERENCES E2(G)
);",No output,Num. tables: 3; Num. not null: 6; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"The example could be about Grabfood/foodpanda application, which consist of three entity sets
E1 is customer data, which has A: customer_id, C: first_name, D: last_name, D: contact_number;
So, A: customer_id and (C: fisrt_name, D: last_name) are the PRIMARY KEY, D: contact_number cannot be NULL.
S is order data, which has F: oder_time
E2 is courier data, has the G: courier_id, J: vehicle_type, K: active_area, H: active_time_period",No output,,
A0218942Y,"SELECT DISTINCT continent_name, continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"(SELECT available.name AS app, country.name AS country
FROM available
JOIN country ON country.code3 =available.country
WHERE country.continent_name = 'Europe' AND available.name IN (
	(SELECT store.name 
	FROM store WHERE store.os ='iOS')
	))
INTERSECT
(SELECT available.name AS app, country.name AS country
FROM available
JOIN country ON country.code3 =available.country
WHERE country.continent_name = 'Europe' AND available.name IN (
	(SELECT store.name 
	FROM store WHERE store.os ='Android')
	))
;","42, [('Korona ™nlem', 'Turkey, Republic of'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('Coronavirus Support App (UK)', 'United Kingdom of Great Britain & Northern Ireland')]",,,"SELECT name
FROM country
GROUP BY name
HAVING COUNT(continent_name)>1
ORDER BY name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT c1.name
FROM country c1
JOIN country c2 ON c2.continent_name = c1.name;","0, []",,,"SELECT available.name
FROM available
JOIN country ON country.code3 = available.country
WHERE country.continent_name = 'Oceania';","12, [('COVID VS',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',), ('CovidCare - Symptom monitor',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('TCC COVID Monitor',)]",,,"SELECT country.name, count(*)
FROM available
JOIN country ON country.code3 = available.country
GROUP BY country.name
ORDER BY count DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT country.name, count(*)
FROM available
JOIN country ON country.code3 = available.country
GROUP BY country.name
ORDER BY count DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT country.name, count(*)
FROM available
JOIN country ON country.code3 = available.country
GROUP BY country.name
ORDER BY count DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT country.name, count(*)
FROM available
JOIN country ON country.code3 = available.country
GROUP BY country.name
ORDER BY count DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E1 (
A VARCHAR(20) NOT NULL,
B VARCHAR(20) NOT NULL,
C VARCHAR(20) NOT NULL,
D VARCHAR(20) NOT NULL,
F VARCHAR(20) NOT NULL,
PRIMARY KEY (A, C , D)
);
CREATE TABLE E1 (
J VARCHAR(20) NOT NULL,
G VARCHAR(20) NOT NULL,
K VARCHAR(20) NOT NULL,
H VARCHAR(20) NOT NULL,
PRIMARY KEY (H)
);",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 0; ,,"Entity 1  represents the fan club
S represents the idol of the club
Entity 2 represents the member of the club
A represents the club registration number, B is the club website, C is the club name, D is the country
G represents the member ID, J represents the age, K presents the contact number, H represent email
In each fan club, there can only be one idol and one idol will have one official fan club. However,  each member can join many or zero fan club.",No output,,
A0218949L,"SELECT DISTINCT continent_name, continent_code
FROM country
ORDER BY continent_name, continent_code;","7, [('Africa', 'AF'), ('Antarctica', 'AN'), ('Asia', 'AS'), ('Europe', 'EU'), ('North America', 'NA'), ('Oceania', 'OC'), ('South America', 'SA')]",,,"SELECT europe_apps.app, europe_apps.country
FROM (
	SELECT name
	FROM store
	WHERE os = 'iOS' ) s1 INNER JOIN (
		SELECT name
		FROM store
		WHERE os = 'Android') s2
		ON s1.name=s2.name
		INNER JOIN (
			SELECT a.name AS app, c.name AS country
			FROM available a INNER JOIN country c
			ON a.country=c.code3
			WHERE c.continent_code = 'EU') europe_apps
		ON s1.name=europe_apps.app;","42, [('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('????????? ???? ???????????', 'Russian Federation'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('CORONAVIRUS - ???????????', 'Ukraine'), ('Luscii', 'Netherlands, Kingdom of the'), ('COVID Radar', 'Netherlands, Kingdom of the')]",,,"SELECT name
FROM country
GROUP BY name
HAVING COUNT(DISTINCT continent_name) > 1;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c1.name as name
FROM country c1 LEFT OUTER JOIN country c2 ON c1.name=c2.name
WHERE c1.continent_name != c2.continent_name
ORDER BY name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT a.name AS name
FROM available a LEFT OUTER JOIN country c ON a.country=c.code3
WHERE c.continent_name='Oceania'
AND a.name IN (
	SELECT s.name
	FROM store s
	GROUP BY s.name
	HAVING COUNT(DISTINCT s.os) >= ALL(
		SELECT COUNT(*)
		FROM store s1
		GROUP BY s1.name)
	)
ORDER BY a.name;","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]","Aggregation is used, CHECK CODE; ",,"SELECT c.name AS name, COUNT(*) AS count
FROM available a LEFT OUTER JOIN country c ON a.country=c.code3
GROUP BY c.name
ORDER BY count DESC, c.name ASC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name AS name, COUNT(*) AS count
FROM available a LEFT OUTER JOIN country c ON a.country=c.code3
GROUP BY c.name
ORDER BY count DESC, c.name ASC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name AS name, COUNT(*) AS count
FROM available a LEFT OUTER JOIN country c ON a.country=c.code3
GROUP BY c.name
ORDER BY count DESC, c.name ASC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name AS name, COUNT(*) AS count
FROM available a LEFT OUTER JOIN country c ON a.country=c.code3
GROUP BY c.name
ORDER BY count DESC, c.name ASC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1 (
	A TEXT NOT NULL,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	PRIMARY KEY (C, D),
    UNIQUE (A, C, D)
);
CREATE TABLE IF NOT EXISTS E2 (
	G TEXT NOT NULL PRIMARY KEY,
	H TEXT NOT NULL,
	J TEXT NOT NULL,
	K TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS S (
	F TEXT NOT NULL,
	E1_A TEXT NOT NULL,
	E1_C TEXT NOT NULL,
	E1_D TEXT NOT NULL,
	E2_G TEXT NOT NULL,
	PRIMARY KEY (E1_A, E1_C, E1_D, E2_G),
	FOREIGN KEY (E1_A, E1_C, E1_D) REFERENCES E1(A, C, D),
	FOREIGN KEY (E2_G) REFERENCES E2(G)
);",No output,Num. tables: 3; Num. not null: 13; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"In the real world example of COVID-19, E1 represents the COIVD-19 patients and
E2 can represent hospitals in a country, and S represents admission to hospital.
So,
E1: patient
E2: hospital
S: admitted_to
And,
A - IC/FIN number of the patient (unique, therefore primary key)
B - Symptoms observed
C - Full Name,
D - Contact Number
F - Contracted Date
G - Hospital Name (Unique)
H - Maximum Bed Capacity
J - Address
K - Type of Hospital (Public/Private)
The relationship admitted_to is a one-to-many relationship from hospital to
patient. It is mandatory for the patient entities but optional for the hospital
entities. The participation constraints for the entity set hospital is (0, n)
and the participation constraints for the entity set patient is (1,1).
This cannot be otherwise because both patient and hospital are dominant entities.
We also note that IC/FIN is a unique identifier in Singapore and can serve as
he primary key for the patient list. A composite key can be the combination of a
patient's full name and contact number. Symptoms observed, contracted date, and
hospital capacity, address and type of hospital do not serve as keys in this case.
Each hospital has a unique name and can serve as the primary key of the hospital
entity.
Finally, we see that the relationship observes that each patient can only be
admitted to one hospital at any time after contracting COVID-19.",No output,,
A0218954U,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT av.name AS app, c.name AS country
FROM available av, country c, appfunctionality af, store s1, store s2
WHERE av.country=c.code3 AND av.name=af.name AND av.name=s1.name AND av.name=s2.name 
AND c.continent_name = 'Europe'
AND s1.os='iOS' AND s2.os='Android' 
AND af.functionality ='contact tracing';","10, [('COVID-19.eus', 'Spain, Kingdom of'), ('Rakning C-19', 'Iceland, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Immuni', 'Italy, Italian Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('ProteGO Safe', 'Poland, Republic of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopCovid France', 'France, French Republic')]",,,"SELECT c.name 
FROM country c
GROUP BY c.name
HAVING COUNT (c.continent_code) >1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c1.name FROM country c1,country c2
WHERE c1.continent_code<>c2.continent_code
AND c1.name=c2.name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT s.name 
FROM store s, store s1, available av, country c
WHERE s.name=s1.name 
AND s.name=av.name 
AND av.country=c.code3
AND s.os<>s1.os 
AND c.continent_name ='Oceania' ;","8, [('Bupa Aged Care Connect',), ('MyAus COVID-19',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',)]",,,"SELECT c.name, COUNT (DISTINCT av.name)as count
FROM available av, country c
WHERE av.country=c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT (DISTINCT av.name)as count
FROM available av, country c
WHERE av.country=c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT (DISTINCT av.name)as count
FROM available av, country c
WHERE av.country=c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT (DISTINCT av.name)as count
FROM available av, country c
WHERE av.country=c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2(
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL,
G TEXT PRIMARY KEY);
CREATE TABLE IF NOT EXISTS E1_S (
A TEXT NOT NULL UNIQUE,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
F TEXT NOT NULL,
G TEXT NOT NULL,
UNIQUE (C,D),
PRIMARY KEY (A,G),
FOREIGN KEY (G) REFERENCES E2 (G));",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"An example would be a company and it's employees. E1 is the employee and E2 is the company while the relationship set S represents work for.
For E1, it is a (1,1) participation constraint as each employee can only work for 1 company and each employee must
work for at least 1 company. A would represent the employee number which is a unique number for each employee.
B represents other attributes of the employee such as the employee's birthday. C represents the employee's first name.
D represents the employee's last name. The combination of the employee first and last name is unique (combination of C and D is thus unique). 
Relationship set S represents the relationship ""works for"" and F represents the date the employee joined the company.
Since the employee ID depends on the company the employee works for (different company can give same employee id), we can merge the table E1 and 
table S and use a combination of employee ID and company ID as the primay key.
For E2, it is a (0,n) participation constraint as a company can have no employees or many employees.
G represents the company registration number (such as UEN which is a unique entity number for each company registered in Singapore). 
H represents the date the company was registered.  J represents the company name and K represents the type of industry the company operates in.
For E1,there are 2 candidate keys (either employee ID which is A or the combination of first and last name which is combination of C and D). 
This is because the entity set E1 can be uniquely identified either by the employee's ID or the unique combination of the employee first and last name. 
For E2, there is only 1 candidate key which is the company's registration number, which is G.",No output,,
A0218968J,"SELECT distinct c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name as app, c.name as country
FROM available a, store s, country c, store s2
WHERE c.continent_name = 'Europe'
AND a.country = c.code3
AND c.code3 is not null
AND s.os = 'Android' 
AND s2.os = 'iOS'
AND s.name = s2.name
AND a.name = s.name
ORDER BY app;","42, [('???', 'Ukraine'), ('????????? ???? ???????????', 'Russian Federation'), ('?????????? ??????????', 'Russian Federation'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Asistencia COVID-19', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('CONFINAPP', 'Spain, Kingdom of'), ('Corona-Datenspende', 'Germany, Federal Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Corona Check Screening', 'Germany, Federal Republic of')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(c.name)>1
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c1.name 
FROM country c1, country c2
WHERE c2.continent_name <> c1.continent_name 
AND c1.name = c2.name
ORDER BY c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT distinct a.name
FROM country c1, store s, available a
WHERE c1.continent_name='Oceania'
AND a.country = c1.code3
AND c1.code3 is not null
and a.name = s.name
AND NOT EXISTS (
	SELECT *   
	FROM store s2  
	WHERE s.name = s2.name
	and a.name = s2.name
	and s.os = s2.os
	AND s.os NOT IN (      
		SELECT DISTINCT s3.os 
		FROM store s3));","12, [('#BeatCovid19Now',), ('Awhina - informing health workers',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('COVID VS',), ('CovidCare - Symptom monitor',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',)]",,,"SELECT c1.name, count(distinct a.name)
FROM country c1, available a
WHERE c1.code3 is not null
and c1.code3 = a.country
group by c1.name
order by count(distinct a.name) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c1.name, count(distinct a.name)
FROM country c1, available a
WHERE c1.code3 is not null
and c1.code3 = a.country
group by c1.name
order by count(distinct a.name) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","SELECT c1.name, count(distinct a.name)
FROM country c1, available a
WHERE c1.code3 is not null
and c1.code3 = a.country
group by c1.name
order by count(distinct a.name) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","SELECT c1.name, count(distinct a.name)
FROM country c1, available a
WHERE c1.code3 is not null
and c1.code3 = a.country
group by c1.name
order by count(distinct a.name) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2 (
J TEXT NOT NULL,
K TEXT NOT NULL,
G TEXT PRIMARY KEY,
H TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS E1 (
A TEXT UNIQUE NOT NULL,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
G TEXT NOT NULL,
F TEXT NOT NULL,
PRIMARY KEY(C,D),
FOREIGN KEY (G) REFERENCES E2(G) );",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"Entity E1 can be wine with primary key G as name.
Other attributes for wine as J, H, K can be appellation, vintage and degree.
Entity E2 can be bottle with combination of attributes as primary keys. 
C attribute can be number(on the bottle) and D attribute can be country.
Relationship S can be CONTAINS where F denotes whether the bottle is empty or contains a wine.
Since, bottle has a one-to-one relationship with contains, the contains relationship has been merged with bottle.",No output,,
A0231847B,"SELECT DISTINCT continent_name, continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT ava.name AS app, c.name AS country
FROM available ava, appfunctionality apf, store s, country c
WHERE ava.name = apf.name
AND ava.name = s.name
AND ava.country = c.code3
AND apf.functionality = 'contact tracing'
AND c.continent_name = 'Europe'
AND apf.name = s.name
AND s.os = 'iOS'
INTERSECT 
SELECT ava.name AS app, c.name AS country
FROM available ava, appfunctionality apf, store s, country c
WHERE ava.name = apf.name
AND ava.name = s.name
AND ava.country = c.code3
AND apf.functionality = 'contact tracing'
AND c.continent_name = 'Europe'
AND apf.name = s.name
AND s.os = 'Android';","10, [('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"SELECT DISTINCT name
FROM country
GROUP BY name 
HAVING count (*) > 1
ORDER BY name ASC;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_name <> c2.continent_name
ORDER BY c1.name ASC;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT ava.name
FROM available ava, country c, store s
WHERE ava.name = s.name 
AND ava.country = c.code3
AND c.continent_name = 'Oceania'
AND s.os IN (
SELECT DISTINCT s1.os FROM store s1);","12, [('Bupa Aged Care Connect',), ('Covid-19  Armenia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',)]",,,"SELECT c.name, COUNT (*) AS count
FROM available ava INNER JOIN country c ON ava.country = c.code3
GROUP BY c.code3,c.name
ORDER BY count DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('France, French Republic', 7)]","SELECT c.name, COUNT (*) AS count
FROM available ava INNER JOIN country c ON ava.country = c.code3
GROUP BY c.code3,c.name
ORDER BY count DESC
LIMIT 17;","17, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('France, French Republic', 7)]","SELECT c.name, COUNT (*) AS count
FROM available ava INNER JOIN country c ON ava.country = c.code3
GROUP BY c.code3,c.name
ORDER BY count DESC
LIMIT 18;","18, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('France, French Republic', 7)]","SELECT c.name, COUNT (*) AS count
FROM available ava INNER JOIN country c ON ava.country = c.code3
GROUP BY c.code3,c.name
ORDER BY count DESC
LIMIT 116;","87, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1 (
A VARCHAR(64) PRIMARY KEY,
B VARCHAR (64) NOT NULL,
C VARCHAR (64) NOT NULL,
D VARCHAR (64) NOT NULL,
UNIQUE (C,D));
CREATE TABLE IF NOT EXISTS E2(
G VARCHAR (64) PRIMARY KEY,
H VARCHAR (64) NOT NULL,
J VARCHAR (64) NOT NULL,
K VARCHAR (64) NOT NULL);
CREATE TABLE IF NOT EXISTS S(
F VARCHAR (64) NOT NULL,
SA VARCHAR (64) PRIMARY KEY,
SG VARCHAR (64) REFERENCES E2 (G),
FOREIGN KEY (SA) REFERENCES E1 (A));",No output,Num. tables: 3; Num. not null: 7; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 is the entity set representing ministries in Singapore such as Ministry of education, Finance, etc. 
E2 is the entity set representing the parliment members in Singapore.
S is the relationship repsenting leadership. Each ministry from E1 can only be lead only one parliment member, while for parliment members they can either not working
any ministries or in multiple ministries.",No output,,
A0231849X,"select distinct c.continent_name,c.continent_code from country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select a.name as app,c.name as country
from app a, store s,country c,available ava
where a.name=s.name
and a.name=ava.name
and s.os='iOS'
and ava.country=c.code3
and c.continent_code='EU'
intersect
select a.name as app,c.name as country
from app a, store s,country c,available ava
where a.name=s.name
and a.name=ava.name
and s.os='Android'
and ava.country=c.code3
and c.continent_code='EU';","42, [('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('Korona ™nlem', 'Turkey, Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('Coronavirus Support App (UK)', 'United Kingdom of Great Britain & Northern Ireland')]",,,"select c.name from country c
group by c.name
having count(distinct c.continent_code)>=2;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct c1.name
from country c1,country c2
where c1.name=c2.name
and c1.continent_name<>c2.continent_name
order by c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select a.name 
from app a,store s,country c,available ava
where a.name=s.name
and a.name=ava.name
and ava.country=c.code3
and c.continent_code='OC'
and not exists (select s2.os from store s2
where a.name=s2.name
and s.os<>s2.os);","4, [('Awhina - informing health workers',), ('COVID VS',), ('Covid-19  Armenia',), ('CovidCare - Symptom monitor',)]",,,"select c.name, count(a.name) from country c,app a,available ava
where a.name=ava.name
and ava.country=c.code3
group by c.name
order by count(a.name) desc;","87, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7)]","select c.name, count(a.name) from country c,app a,available ava
where a.name=ava.name
and ava.country=c.code3
group by c.name
order by count(a.name) desc;","87, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7)]","select c.name, count(a.name) from country c,app a,available ava
where a.name=ava.name
and ava.country=c.code3
group by c.name
order by count(a.name) desc;","87, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7)]","select c.name, count(a.name) from country c,app a,available ava
where a.name=ava.name
and ava.country=c.code3
group by c.name
order by count(a.name) desc;","87, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7)]",,,"create table if not exists E2(
J text not null,
G text not null,
K text not null,
H text not null,
primary key (G))
create table if not exists E1_S(
A text not null unique,
B text not null,
C text not null,
D text not null,
F text not null,	
primary key(C,D),
G text references E2(G))",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"E1 is the people who already got employed by a company and signed a contract.
E2 is the company set.
S can be the contracts that link the employees to the companies.
For E1 people, A can be his or her DNA sequence.
B can be the gender.
C and D can be the Country Code and the ID number of his or her country,
which together can determine who this guy is.
For E2 company,G can be the company registration number that is unique all around the world,
which can determine what company it is.
J,K,H can be something like how many charis the company have, how many countries the company located,
and the revenue of last year.
For S contracts, F can be the contract sign date.
So, for the E1 and S (1,1), because I set E1 to be people who already got employed by a company and signed a contract,
every one in the E1 have to sign one(minimum) and only sign one(maximum) contract to a company. 
For each contract, it has a sign date F.
For E2 and S(0,n), some company might be a start-up company that have not yet sign up contract to hire any people, 
which refers to the 0(minimum) participation in S. Some company might hire many different people with contracts, 
which refers to the n(maximum) particitation in S.
In total, one people one contract refering to one company.
But one company can either sign no contract with any people or sign up contracts with many different people.
To emphasize entity E1 again, people here are those who already got employed by some company
and signed a contract with this company.",No output,,
A0231850M,"SELECT continent_name, continent_code
FROM country;","262, [('Asia', 'AS'), ('Europe', 'EU'), ('Antarctica', 'AN'), ('Africa', 'AF'), ('Oceania', 'OC'), ('Europe', 'EU'), ('Africa', 'AF'), ('North America', 'NA'), ('Europe', 'EU'), ('Asia', 'AS')]",,,"SELECT a.name AS app, c.name AS country
FROM country c, available a, store s
WHERE a.country = c.code3
AND c.continent_code = 'EU'
AND a.name = s.name
GROUP BY a.name, c.name
HAVING COUNT(a.name) = 2;","42, [('COVID AP-HM', 'France, French Republic'), ('???', 'Ukraine'), ('Corona Check Screening', 'Germany, Federal Republic of'), ('Hayat Eve Sigar', 'Turkey, Republic of'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('e-Covid SINFONIA', 'Italy, Italian Republic'), ('Korona ™nlem', 'Turkey, Republic of'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(c.name) >1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_name <> c2.continent_name
GROUP BY c1.name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]","Aggregation is used, CHECK CODE; ",,"SELECT a.name
FROM available a, country c, store s
WHERE c.continent_code = 'OC'
AND a.country = c.code3
AND a.name = s.name
GROUP BY a.name;","12, [('Bupa Aged Care Connect',), ('Covid-19  Armenia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',)]","Aggregation is used, CHECK CODE; ",,"SELECT c.name, COUNT(*)
FROM country c, available a
WHERE a.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(*)
FROM country c, available a
WHERE a.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(*)
FROM country c, available a
WHERE a.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(*)
FROM country c, available a
WHERE a.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E1(
A VARCHAR(32) NOT NULL UNIQUE,
B VARCHAR(32) NOT NULL,
C VARCHAR(32) NOT NULL,
D VARCHAR(32) NOT NULL,
PRIMARY KEY(C, D)); 
CREATE TABLE E2(
J VARCHAR(32) NOT NULL,
K VARCHAR(32) NOT NULL,
G VARCHAR(32) PRIMARY KEY,
H VARCHAR(32) NOT NULL);
CREATE TABLE S(
F VARCHAR(32) NOT NULL,
SA VARCHAR(32) NOT NULL UNIQUE,
SB VARCHAR(32) NOT NULL,
SC VARCHAR(32) NOT NULL,
SD VARCHAR(32) NOT NULL,
SG VARCHAR(32) NOT NULL,
PRIMARY KEY(SC, SD),
FOREIGN KEY (SG) REFERENCES E2(G));",No output,Num. tables: 3; Num. not null: 13; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"E1 may be government, E2 may be parliament_member, S maybe head, A maybe office code,
B maybe department, C maybe office name, D maybe office head, F may be time of appointment,
G may be parliament member id, J may be member name, K may be sex, H may be party name.",No output,,
A0231851L,"select distinct c.continent_name, c.continent_code
from country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select a.name as app, (select c.name from country c where c.code3=av.country) as country
from appfunctionality a right join available av on a.name=av.name 
where exists(
	select s.name
	from store s
	where s.name=a.name and s.os='iOS'
	intersect
	select s.name
	from store s
	where s.name=a.name and s.os='Android')
and a.functionality='contact tracing'
and av.country in(
select c.code3
from country c
where c.continent_name='Europe');","10, [('SwissCovid', 'Switzerland, Swiss Confederation'), ('COVID-19.eus', 'Spain, Kingdom of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopCovid France', 'France, French Republic'), ('Stopp Corona', 'Austria, Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Immuni', 'Italy, Italian Republic')]",,,"select c.name
from country c
group by c.name
having count(c.continent_code)>1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select distinct c.name
from country c, country d
where c.name=d.name and c.continent_code<>d.continent_code;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select a.name
from available a left join country c on a.country=c.code3 
					left join store s on s.name=a.name
where c.continent_name='Oceania'
intersect
select distinct s.name
from store s,store st
where st.name=s.name and st.os<>s.os;","8, [('Bupa Aged Care Connect',), ('MyAus COVID-19',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',)]",,,"select c.name,count(*)
from available a left join country c on a.country=c.code3
group by c.name
order by count(*) desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name,count(*)
from available a left join country c on a.country=c.code3
group by c.name
order by count(*) desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name,count(*)
from available a left join country c on a.country=c.code3
group by c.name
order by count(*) desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name,count(*)
from available a left join country c on a.country=c.code3
group by c.name
order by count(*) desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"create table E1(
A TEXT primary key,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
UNIQUE(C,D));
create table E2(
G TEXT PRIMARY KEY,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL);
CREATE TABLE S(
F TEXT NOT NULL,
A TEXT REFERENCES E1(A) PRIMARY KEY,
G TEXT REFERENCES E2(G));",No output,Num. tables: 3; Num. not null: 7; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 could be a student and A is the identifier, B is gerder,
C is class_id and D is id_inClass.
E2 is the info about the school. G is the location/postcode, J could be the headmaster, K could be type,
and H could be area.
S stands for 'studies at', and F represents the rank.
(1,1)means a student must studies at one and only one school.
(0,n) means a school could have no students, maybe it's at its very beginning of construction.",No output,,
A0231854E,"select distinct continent_name, continent_code 
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select a.name as app, c.name as country
from available a, country c, store
where a.country = c.code3 and c.continent_name = 'Europe' and 
(store.os = 'iOS' and store.os = 'Android');","0, []",,,"select distinct name 
from country 
where code3 in (
	select code3 
	from country 
	group by code3 having count(code3) > 1);","8, [('Turkey, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Georgia',), ('Cyprus, Republic of',), ('Armenia, Republic of',)]",,,"select distinct name 
from country 
where not exists (
	select * 
	from country 
	where code3 = 'MEX');","0, []",,,"select distinct name from store where 
(store.os = 'iOS' or store.os = 'Android')
and exists (
select available.name from available left join country on country.code3 = available.country 
where country.continent_name = 'Oceania'
order by available.name);","395, [('AyudaCOVID',), ('Lynx-Virtual',), ('HowWeFeel',), ('U Informa COVID-19',), ('MorChana - ??????',), ('COVID-19 West Bengal Government',), ('Quidate',), ('SOS CORONA',), ('Apple COVID-19',), ('patientMpower for Covid 19 USA',)]",,,"SELECT country.name, COUNT(available.name)
FROM available left join country on country.code3 = available.country
GROUP BY country.name
order by COUNT(available.name) desc;","88, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Switzerland, Swiss Confederation', 7)]","SELECT country.name, COUNT(available.name)
FROM available left join country on country.code3 = available.country
GROUP BY country.name
order by COUNT(available.name) desc;","88, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Switzerland, Swiss Confederation', 7)]","SELECT country.name, COUNT(available.name)
FROM available left join country on country.code3 = available.country
GROUP BY country.name
order by COUNT(available.name) desc;","88, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Switzerland, Swiss Confederation', 7)]","SELECT country.name, COUNT(available.name)
FROM available left join country on country.code3 = available.country
GROUP BY country.name
order by COUNT(available.name) desc;","88, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Switzerland, Swiss Confederation', 7)]",,,"CREATE TABLE IF NOT EXISTS employees (
first_name VARCHAR(20) NOT NULL,
last_name VARCHAR(20) NOT NULL,
passport NUMERIC PRIMARY KEY,
address VARCHAR(50) NOT NULL
);
CREATE TABLE IF NOT EXISTS ethnicicity (
ethnic_code VARCHAR(20) PRIMARY KEY,
hair_color VARCHAR(20) NOT NULL,
eye_color VARCHAR(20) NOT NULL,
yearsworked NUMERIC NOT NULL
);
CREATE TABLE IF NOT EXISTS identify (
employee NUMERIC(50),
race VARCHAR(20),
review VARCHAR(50) NOT NULL,
PRIMARY KEY (employee, race),
FOREIGN KEY (employee) REFERENCES employees(passport),
FOREIGN KEY (race) REFERENCES ethnicicity(ethnic_code)
);",No output,Num. tables: 3; Num. not null: 7; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 is the list of employees working for the company.
E2 is the ethnicicity table where there're a list of ethnicicities.
S is the relationship where employees identify themselves as what ethnicicity.
A is the passport number of employees, B is their addresses, C and D are first and last names
F is the review of the employee to the company on workplace equality.
G is the ethnicicity code assigned to each ethnicicity.
J is the hair color of the employee.
K is the eye color of the employee.
H is the number of years that the employee worked at this company.
C and D, first and last name, makes a set of candidate key.
The relationship identify is a one-to-many relationship from ethnicicity to employees.
It is mandatory for employees to identify with at least one ethnicicity code.
It is optional for the ethnicicity entity. There can be zero or many under each ethnicicity. 
The participation constraints for the entity set ethnicicity is (0, n). 
The participation constraints for the entity set employees is (1, 1).",No output,,
A0231856B,"SELECT distinct continent_name, continent_code
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT app.name as app, c.name as country
from app, available as a, country as c, store as s1, store as s2
where app.name=a.name
and a.country=c.code3
and app.name=s1.name
and app.name=s2.name
and c.continent_name='Europe'
and s1.os='iOS'
and s2.os='Android';","42, [('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('????????? ???? ???????????', 'Russian Federation'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('CORONAVIRUS - ???????????', 'Ukraine'), ('Luscii', 'Netherlands, Kingdom of the'), ('COVID Radar', 'Netherlands, Kingdom of the')]",,,"SELECT name from country
group by name
having count(*)>1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT distinct c1.name
from country as c1, country as c2
where c1.name=c2.name
and c1.continent_name<>c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT a.name
from available as a
where not exists(
  select distinct s.os from store as s
  except
  select s.os from store as s, country as c
  where c.continent_name='Oceania'
  and a.name=s.name
  and a.country=c.code3
);","8, [('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('TCC COVID Monitor',), ('MyAus COVID-19',)]",,,"SELECT c.name, count(a.name) as count
from country as c, available as a
where c.code3=a.country
group by c.name
order by count desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, count(a.name) as count
from country as c, available as a
where c.code3=a.country
group by c.name
order by count desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, count(a.name) as count
from country as c, available as a
where c.code3=a.country
group by c.name
order by count desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, count(a.name) as count
from country as c, available as a
where c.code3=a.country
group by c.name
order by count desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1 (
  A TEXT UNIQUE NOT NULL,
  B TEXT NOT NULL,
  C TEXT NOT NULL,
  D TEXT NOT NULL,
  PRIMARY KEY(C,D)
);
CREATE TABLE IF NOT EXISTS E2 (
  G TEXT PRIMARY KEY,
  J TEXT NOT NULL,
  K TEXT NOT NULL,
  H TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS S (
  C TEXT NOT NULL,
  D TEXT NOT NULL,
  G TEXT NOT NULL REFERENCES E2(G) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
  F TEXT NOT NULL,
  PRIMARY KEY(C,D),
  FOREIGN KEY (C,D) REFERENCES E1(C,D) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED
);",No output,Num. tables: 3; Num. not null: 11; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 could be the new employee table, E2 is the manager table, and the S describe the
relationship of management. For the E1 new employee table, A is their ID number, B
is age, C is name and D is address. For the E2 manager table, G is the ID number,
H is job level, J is the position, and K is the years of management. For S, it includes
the primary keys of both table, as well as a new attribute F, which is the time when
a manager choose to manage the new employee.
So {A}--->{A,B,C,D,F,G,J,K,H}, {C,D}--->{A,B,C,D,F,G,J,K,H}
Since the partition constraint is (1,1) for E1, so the candidate key is the primary
key of E1, could be A, or the combination of C,D. One entity in the E1 must have
only one corresponding record in E2.",No output,,
A0231857Y,"SELECT continent_name, continent_code FROM country GROUP BY continent_name, continent_code;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name, c.name FROM available a, country c WHERE a.country = c.code3 AND c.continent_name = 'Europe' AND a.name IN
(SELECT s1.name FROM store s1, store s2 WHERE s1.name = s2.name AND s1.os = 'iOS' AND s2.os = 'Android') AND a.name IN (
SELECT name FROM appfunctionality WHERE functionality = 'contact tracing');","10, [('COVID-19.eus', 'Spain, Kingdom of'), ('Rakning C-19', 'Iceland, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Immuni', 'Italy, Italian Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('ProteGO Safe', 'Poland, Republic of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopCovid France', 'France, French Republic')]",,,"SELECT c.name FROM country c GROUP BY c.code3, c.name HAVING COUNT(*) > 1;","8, [('Cyprus, Republic of',), ('Turkey, Republic of',), ('Azerbaijan, Republic of',), ('Russian Federation',), ('Armenia, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c1.name FROM country c1 WHERE EXISTS
(SELECT * FROM country c2 WHERE c1.continent_name <> c2.continent_name
AND c1.code3 = c2.code3);","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT a.name FROM available a WHERE a.country IN (
SELECT c.code3 FROM country c WHERE c.continent_name = 'Oceania')
INTERSECT
SELECT DISTINCT a.name FROM app a CROSS JOIN 
(SELECT DISTINCT s.os FROM store s) AS all_os
WHERE NOT EXISTS (
SELECT * FROM store s1 WHERE s1.name = a.name AND s1.os = all_os.os);","4, [('COVID VS',), ('Awhina - informing health workers',), ('CovidCare - Symptom monitor',), ('Covid-19  Armenia',)]",,,"SELECT c.name, COUNT(*) AS count FROM available a, country c 
WHERE a.country = c.code3 GROUP BY c.name ORDER BY count desc LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(*) AS count FROM available a, country c 
WHERE a.country = c.code3 GROUP BY c.name ORDER BY count desc LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(*) AS count FROM available a, country c 
WHERE a.country = c.code3 GROUP BY c.name ORDER BY count desc LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(*) AS count FROM available a, country c 
WHERE a.country = c.code3 GROUP BY c.name ORDER BY count desc LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E2(
G TEXT NOT NULL,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL,
PRIMARY KEY (G));
CREATE TABLE S_MERGED_E1(
F TEXT NOT NULL,
G TEXT NOT NULL,
A TEXT NOT NULL PRIMARY KEY,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
FOREIGN KEY (G) REFERENCES E2(G));",No output,Num. tables: 2; Num. not null: 10; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"The entity-relationship diagram can represent a scenario where a door producing factory is producing
and tracing its products. In this case, E1 would represent the doors produced, S would represent a 
production ledger that tracks what has been produced and E2 would represent door producing factories.
E1 (Door) attributes could represent the following:
A = Unique Warranty Product Number
B = Door Type
C = Manufacturing Batch
D = Item Batch Number
The candidate keys here are A or C & D because A is unique for each product, meanwhile C & D will 
be able to identify product when used in composite since manufacturing batch points to the group 
and item batch number will identify the exact item produced. The (1, 1) constraint exists because 
a particular door can only be produced once by the factory but when it has been produced, it must 
be tracked (so mandatory participation).
S (Production Ledger) attributes could represent the following:
F = Date of Production
E2 (Factory) attributes could represent the following:
G = Factory Number
H = Factory Specialty
J = Factory Year Open
K = Factory Size
The candidate key is G because G is unique per factory. Other attributes in this table cannot be 
used to identify a factory as it might not be unique among different factories. The (0, n)
constraint exists because a factory can produce between 0 to many doors.",No output,,
A0231863E,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]","Missing semicolon, CHECK CODE; ",,"SELECT app.name AS app, c.name AS country
FROM app app, available av, appfunctionality appf, country c, store s
WHERE app.name = av.name
AND app.name = appf.name
AND av.country = c.code3
AND appf.functionality = 'contact tracing'
AND c.continent_name = 'Europe'
AND s.name = app.name
AND s.os = 'iOS'
INTERSECT
SELECT app.name AS app, c.name AS country
FROM app app, available av, appfunctionality appf, country c, store s
WHERE app.name = av.name
AND app.name = appf.name
AND av.country = c.code3
AND appf.functionality = 'contact tracing'
AND c.continent_name = 'Europe'
AND s.name = app.name
AND s.os = 'Android'","10, [('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]","Missing semicolon, CHECK CODE; ",,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(c.continent_name)>1
ORDER BY c.name","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT c.name
FROM country c
WHERE EXISTS(
	SELECT *
	FROM country c1
	WHERE c1.name = c.name
	AND c1.continent_name <> c.continent_name
)
ORDER BY c.name","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Missing semicolon, CHECK CODE; ",,"SELECT app.name
FROM app app, available av, country c, store s
WHERE c.continent_name = 'Oceania'
AND app.name = av.name
AND av.country = c.code3
AND s.name = av.name
AND s.os = 'iOS'
INTERSECT
SELECT app.name
FROM app app, available av, country c, store s
WHERE c.continent_name = 'Oceania'
AND app.name = av.name
AND av.country = c.code3
AND s.name = av.name
AND s.os = 'Android'","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('MyAus COVID-19',), ('COVIDSafe',), ('TCC COVID Monitor',)]","Missing semicolon, CHECK CODE; ",,"SELECT c.name, COUNT(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT(6)","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT(7)","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT(8)","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT(16)","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]","Missing semicolon, CHECK CODE; ",,"CREATE TABLE E1(
	A TEXT,
	B TEXT NOT NULL,
	C TEXT,
	D TEXT,
	PRIMARY KEY(A, C, D)
);
CREATE TABLE E2(
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL,
	J TEXT NOT NULL,
	K TEXT NOT NULL
);
CREATE TABLE S(
	A TEXT,
	C TEXT,
	D TEXT,
	F TEXT NOT NULL,
	G TEXT,
	PRIMARY KEY(A, C, D, G),
	FOREIGN KEY(A, C, C) REFERENCES E1(A, C, D),
	FOREIGN KEY(G) REFERENCES E2(G)
);",No output,Num. tables: 3; Num. not null: 5; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 as student_club
E2 as student
S as head
E1 (student_club):
A is Club Name
C is Faculty of the club
D is Department of the club
B is Number of members
E2 (student):
G is Student email
H is Age
J is Gender
K is Enrolled course
S (head):
F is Years in position
In this school, every student can at most head only one student club (0,1), and every club
in the school must have a president(1,1).",No output,,
A0231867X,"select distinct continent_name, continent_code
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select t1.name as app, c.name as country
from
(
	select *
	from
	(
		select *
		from
		(
			select *
			from available
			where available.name = any(
			select name 
			from appfunctionality
			where functionality = 'contact tracing'
			)
		) n1
		where country in(select code3
		from country
		where continent_code = 'EU')
	)a 
	where name = any
	(
	select name
	from
	(
		select name,count(os) as provider
		from store
		group by name
		having count(os) >1
	) t
	)
) t1
left join country c
on t1.country = c.code3
;","10, [('Stopp Corona', 'Austria, Republic of'), ('StopCovid France', 'France, French Republic'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of')]",,,"select name
from
(
select name, count(continent_code) as span
from country
group by name
having count(continent_code) > 1
) a
;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select distinct c1.name as name
from country c1
left join country c2
on c1.name = c2.name
where c1.continent_code <> c2.continent_code
order by c1.name 
;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select name
from available
where country = any(select code3
from country
where continent_name = 'Oceania'
)
;","12, [('COVID VS',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',), ('CovidCare - Symptom monitor',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('TCC COVID Monitor',)]",,,"select country, count(distinct name) as app_count
from available
group by country
order by count(distinct name) desc
limit 6
;","6, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14)]","select country, count(distinct name) as app_count
from available
group by country
order by count(distinct name) desc
limit 7
;","7, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('IDN', 8)]","select country, count(distinct name) as app_count
from available
group by country
order by count(distinct name) desc
limit 8
;","8, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('IDN', 8), ('AUS', 8)]","select country, count(distinct name) as app_count
from available
group by country
order by count(distinct name) desc
limit 16
;","16, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('IDN', 8), ('AUS', 8), ('DEU', 7), ('ARG', 7)]",,,"CREATE Table E1(
A TEXT not null unique,
B TEXT not null,
C TEXT not null,
D TEXT not null,
Primary Key (C, D)
);
CREATE Table E2(
J TEXT not null,
K TEXT not null,
G TEXT not null Primary Key,
H TEXT not null
)
;
CREATE TABLE S(
F TEXT NOT NULL,
sc TEXT NOT NULL,
sd TEXT NOT NULL,
PRIMARY KEY (sc, sd),
FOREIGN KEY (sc,sd) REFERENCES E1(C,D))
;",No output,Num. tables: 3; Num. not null: 11; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"In real life, E1 could be a record of patients be admitted to hospital, 
while E2 could be the details of each hospital, and S informs us who was
admitted to which hosptial. 
In E1, A could be one's identity number, which is absolutely a primary key.
C and D could be one's first name and last name respectively. B could be the
age. Suppose everyone has a distinctive name in this table,
then both A and (C,D) can be the candidate key.
Each patient could only be admitted to one hospital during a specific period.
But a hospital could admit several patients at the same time, or didn't admit
anyone at all. 
In E2, G could be the official code of each hospital, which is a primary key. 
H could be the contact number and J could be the adress of this hospital.
K could be the capacity of the hospital. The only candidate key is G.
In S, F could be the date each petient was admitted to the hospital.",No output,,
A0231868W,"select distinct continent_name, continent_code
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select af.name as app, c.name as country
from appfunctionality af, available av, country c, store s
where af.name = av.name
and av.country = c.code3
and af.name = s.name
and af.functionality = 'contact tracing'
and c.continent_name = 'Europe'
and os = 'iOS'
intersect
select af.name as app, c.name as country
from appfunctionality af, available av, country c, store s
where af.name = av.name
and av.country = c.code3
and af.name = s.name
and af.functionality = 'contact tracing'
and c.continent_name = 'Europe'
and os = 'Android';","10, [('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"select name
from country c
group by name
having count(continent_name) > 1
order by name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct c.name
from country c
where exists(
select c1.name, c1.continent_name
from country c1
where c1.name = c.name
and c1.continent_name <> c.continent_name)
order by name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select av.name
from available av, store s, country c
where av.name = s.name
and c.code3 = av.country
and c.continent_name = 'Oceania'
except
select w.name from
(select distinct s1.name, s2.os from store s1, store s2 order by name) w
left join
store s on w.name = s.name and s.os = w.os
where s.name ISNULL;","8, [('Bupa Aged Care Connect',), ('MyAus COVID-19',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',)]",,,"select c.name, count(distinct av.name)
from country c, available av
where av.country = c.code3
group by c.name
order by count DESC
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count(distinct av.name)
from country c, available av
where av.country = c.code3
group by c.name
order by count DESC
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","select c.name, count(distinct av.name)
from country c, available av
where av.country = c.code3
group by c.name
order by count DESC
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","select c.name, count(distinct av.name)
from country c, available av
where av.country = c.code3
group by c.name
order by count DESC
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2(
G TEXT NOT NULL PRIMARY KEY,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS E1(
A TEXT UNIQUE NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
F TEXT NOT NULL,
G TEXT NOT NULL,
PRIMARY KEY(C, D),
FOREIGN KEY(G) references E2(G)
);",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"Example:
Suppose this is an entity-relationship diagram describing games
and their publishers with their relationship.
Entity set E1 represents 'Games'; entity set E2 represents 'Publishers';
relation set S represents 'Publications of games'.
In E1, A represents the issue number of the game, which is unique; B represents
the category of the game; C represents the name of the game; and D represents
the version of the game.The game could be identified either by A or
by the combination of C and D. And one game only has one publisher.
In E2, G represents the full name of the publisher; H represents the country
the publisher belongs to; J represents the address of the publisher company;
and K represents the year the publisher company was founded.
In S, F represents the initial publication date of the game.",No output,,
A0231869U,"SELECT continent_name, continent_code
FROM country
GROUP BY continent_name, continent_code;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT DISTINCT a.name AS app, c.name AS country
FROM available a, store s, country c, appfunctionality af
WHERE a.name = s.name
AND a.name = af.name
AND af.functionality = 'contact tracing'
AND a.name in (SELECT s1.name
FROM store s1
GROUP BY s1.name
HAVING COUNT(s1.os) >1)
AND a.country in (SELECT c1.code3 as Ecountry
FROM country c1
WHERE c.continent_code = 'EU')
AND a.country = c.code3","10, [('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Immuni', 'Italy, Italian Republic'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopCovid France', 'France, French Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]","Missing semicolon, CHECK CODE; ",,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING count(c.name)>1","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT c2.name
FROM country c1 LEFT JOIN country c2 ON c1.code2 = c2.code2 AND c1.continent_code <> c2.continent_code
WHERE c2.name IS NOT NULL","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT a.name
FROM available a, store s, country c
WHERE a.name = s.name
AND a.name in (
SELECT s1.name
FROM store s1, store s2
WHERE s1.name = s2.name
AND s1.os = 'iOS'
AND s2.os = 'Android')
AND a.country in (SELECT c1.code3 as Ecountry
FROM country c1
WHERE c.continent_code = 'OC')
AND a.country = c.code3","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]","Missing semicolon, CHECK CODE; ",,"SELECT c.name, p.count
FROM country c
RIGHT JOIN
(SELECT a.country AS country, count(a.name) AS count
FROM available a
GROUP BY a.country
ORDER BY count DESC
LIMIT 6) p
ON p.country = c.code3
ORDER BY p.count DESC;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, p.count
FROM country c
RIGHT JOIN
(SELECT a.country AS country, count(a.name) AS count
FROM available a
GROUP BY a.country
ORDER BY count DESC
LIMIT 7) p
ON p.country = c.code3
ORDER BY p.count DESC;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","SELECT c.name, p.count
FROM country c
RIGHT JOIN
(SELECT a.country AS country, count(a.name) AS count
FROM available a
GROUP BY a.country
ORDER BY count DESC
LIMIT 8) p
ON p.country = c.code3
ORDER BY p.count DESC;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","SELECT c.name, p.count
FROM country c
RIGHT JOIN
(SELECT a.country AS country, count(a.name) AS count
FROM available a
GROUP BY a.country
ORDER BY count DESC
LIMIT 16) p
ON p.country = c.code3
ORDER BY p.count DESC;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2 (
G TEXT,
J TEXT NOT NULL,
K TEXT NOT NULL,
H TEXT NOT NULL,
PRIMARY KEY (G));
CREATE TABLE IF NOT EXISTS E1 (
A TEXT NOT NULL UNIQUE ,
B TEXT NOT NULL,
C TEXT,
D TEXT,
F TEXT NOT NULL,
G TEXT,
PRIMARY KEY (C,D),
FOREIGN KEY (G) REFERENCES E2(G));",No output,Num. tables: 2; Num. not null: 6; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"E1 can be an entity table of cars registered, S is the relation ""registered"", and E2 is an entity table of person. So, a person can register 0-n cars while a
registered car can be registered only by one person.
In this case, for E1, A can be the car's unique attribute of 'registration number', B can be color. C can be state, and D can be licence, so combined C and D we can identify a car.
For relation S, we can make F be the attribute of registration expiry date.
For E2, we can make G, the primary key, id number for the person. J can be date of birth. K can be gender. H can be income.",No output,,
A0231872E,"select distinct c.continent_name,c.continent_code
from country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select distinct a.name as app,c.name
from app a, available av,store s,country c
where a.name=av.name
and c.code3=av.country
and a.name=s.name
and c.continent_name='Europe'
and s.os='Android'
intersect
select distinct a.name as app,c.name
from app a, available av,store s,country c
where a.name=av.name
and c.code3=av.country
and c.continent_name='Europe'
and a.name=s.name
and s.os='iOS';","42, [('Korona ™nlem', 'Turkey, Republic of'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('Coronavirus Support App (UK)', 'United Kingdom of Great Britain & Northern Ireland')]",,,"select distinct c1.name
from country c1
where exists (select c.name,count(*)
from country c
where c1.name=c.name
group by c.name
having count(*)>=2);","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct c.name
from country c
where exists (select c1.name
			 from country c1
			 where c1.name=c.name
			 and c1.continent_name<>c.continent_name);","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select distinct av.name
from available av,store s,country c
where s.name=av.name
and c.code3=av.country
and c.continent_name='Oceania'
and not exists (select distinct s2.os
				from store s2
				where s2.name = s.name
				except
				select distinct s1.os
			    from store s1
			    );","12, [('#BeatCovid19Now',), ('Awhina - informing health workers',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('COVID VS',), ('CovidCare - Symptom monitor',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',)]",,,"select c.name,count(*)
from country c,available av
where av.country=c.code3
group by c.name
order by count(*)desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name,count(*)
from country c,available av
where av.country=c.code3
group by c.name
order by count(*)desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name,count(*)
from country c,available av
where av.country=c.code3
group by c.name
order by count(*)desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name,count(*)
from country c,available av
where av.country=c.code3
group by c.name
order by count(*)desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"create table if not exists E2(
G varchar(32) primary key,
H varchar(32) not null,
J varchar(32) not null,
K varchar(32) not null);
create table if not exists E1_S(
A varchar(32) unique not null,
B varchar(32) not null,
C varchar(32),
D varchar(32),
primary key(C,D),
F varchar(32) not null,
G varchar(32) references E2(G)	
)",No output,Num. tables: 2; Num. not null: 6; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"E1 represents students in a class of kindergarten. E2 represents a class. S represents the relationship between the student and the class.A child can only be in one class, and a class can have many students.
In E1, A represents the student ID, B represents the student’s gender, C represents the student’s date of birth, and D represents the student’s name. The student ID of each student is different. At the same time, the date of birth and the name of the student are enough to find a student.
In S, F represents the time when the student started school.
In E2, G represents the name of the class, H represents the class size, J represents the floor where the class is located, and K represents the ratio of male to female students in the class. In a kindergarten, the name of the class is enough to find a class.In a kindergarten, each class has a different name.",No output,Illegal fullwidth character detected ['2019']; ,
A0231875Y,"SELECT DISTINCT ct.continent_name, ct.continent_code
FROM country AS ct;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT avail.name, ct.name 
FROM available AS avail, country AS ct 
LEFT JOIN 
	SELECT a.name
	FROM app AS a, store AS s1, store AS s2
	WHERE a.name = s1.name
	AND a.name = s2.name 
	AND s1.os = 'iOS'
	AND s2.os = 'Android'
ON avail.name  = a.name
WHERE avail.country = ct.code3
AND ct.continent_name = 'Europe';",No output,,,"SELECT DISTINCT ct.name, 
	(CASE WHEN ct2.frequency < 2 THEN 0 
	WHEN ct2.frequency >=2 THEN frequency END) AS frequency
FROM country AS ct, 
	(SELECT ct.name, count(ct.name) AS frequency
	FROM country AS ct 
	GROUP BY ct.name) AS ct2
WHERE ct.name = ct2.name 
AND frequency >=2;","8, [('United States Minor Outlying Islands', 2), ('Georgia', 2), ('Cyprus, Republic of', 2), ('Azerbaijan, Republic of', 2), ('Armenia, Republic of', 3), ('Turkey, Republic of', 2), ('Kazakhstan, Republic of', 2), ('Russian Federation', 2)]",,,"SELECT DISTINCT ct.name, 
	(CASE WHEN ct2.frequency < 2 THEN 0 
	WHEN ct2.frequency >=2 THEN frequency END) AS frequency
FROM country AS ct, 
	(SELECT ct.name, count(ct.name) AS frequency
	FROM country AS ct 
	GROUP BY ct.name) AS ct2
WHERE ct.name = ct2.name 
AND frequency >=2;","8, [('United States Minor Outlying Islands', 2), ('Georgia', 2), ('Cyprus, Republic of', 2), ('Azerbaijan, Republic of', 2), ('Armenia, Republic of', 3), ('Turkey, Republic of', 2), ('Kazakhstan, Republic of', 2), ('Russian Federation', 2)]","Aggregation is used, CHECK CODE; ",,"SELECT ct.name
FROM country AS ct, available AS avail, app AS a 
WHERE ct.continent_code = 'Oceania'
AND ct3 = avail.country
AND avail.name = app.name 
AND avail.name IN (
	(SELECT a.name
	FROM app AS a, store AS s
	WHERE a.name = s.name
	AND s.os = 'iOS'
	INTERSECT
	SELECT a.name
	FROM app AS a, store AS s
	WHERE a.name = s.name
	AND s.os = 'Android')",No output,"Missing semicolon, CHECK CODE; ",,"SELECT ct.name, sub.frequency
FROM country AS ct, 
	(SELECT count(avail.name) AS frequency
	FROM available AS avail, country AS ct 
	GROUP BY ct.name) AS sub 
ORDER BY sub.frequency DESC;","66286, [('French Polynesia', 1170), ('Azerbaijan, Republic of', 1170), ('Sri Lanka, Democratic Socialist Republic of', 1170), ('Mongolia', 1170), ('El Salvador, Republic of', 1170), ('Gambia, Republic of the', 1170), ('Aruba', 1170), ('Belize', 1170), ('Armenia, Republic of', 1170), ('Mayotte', 1170)]","SELECT ct.name, sub.frequency
FROM country AS ct, 
	(SELECT count(avail.name) AS frequency
	FROM available AS avail, country AS ct 
	GROUP BY ct.name) AS sub 
ORDER BY sub.frequency DESC;","66286, [('French Polynesia', 1170), ('Azerbaijan, Republic of', 1170), ('Sri Lanka, Democratic Socialist Republic of', 1170), ('Mongolia', 1170), ('El Salvador, Republic of', 1170), ('Gambia, Republic of the', 1170), ('Aruba', 1170), ('Belize', 1170), ('Armenia, Republic of', 1170), ('Mayotte', 1170)]","SELECT ct.name, sub.frequency
FROM country AS ct, 
	(SELECT count(avail.name) AS frequency
	FROM available AS avail, country AS ct 
	GROUP BY ct.name) AS sub 
ORDER BY sub.frequency DESC;","66286, [('French Polynesia', 1170), ('Azerbaijan, Republic of', 1170), ('Sri Lanka, Democratic Socialist Republic of', 1170), ('Mongolia', 1170), ('El Salvador, Republic of', 1170), ('Gambia, Republic of the', 1170), ('Aruba', 1170), ('Belize', 1170), ('Armenia, Republic of', 1170), ('Mayotte', 1170)]","SELECT ct.name, sub.frequency
FROM country AS ct, 
	(SELECT count(avail.name) AS frequency
	FROM available AS avail, country AS ct 
	GROUP BY ct.name) AS sub 
ORDER BY sub.frequency DESC;","66286, [('French Polynesia', 1170), ('Azerbaijan, Republic of', 1170), ('Sri Lanka, Democratic Socialist Republic of', 1170), ('Mongolia', 1170), ('El Salvador, Republic of', 1170), ('Gambia, Republic of the', 1170), ('Aruba', 1170), ('Belize', 1170), ('Armenia, Republic of', 1170), ('Mayotte', 1170)]",,,,No output,Num. tables: 0; Num. not null: 0 (CHECK CODE) ; Num. foreign keys defined: 0; ,,"-- E1 is parliment member, E2 is political party and S is belong_to. 
-- The name of the parliment memeber may not be unique, hence it requires the age(A), name  and gender as primary key. 
--",No output,,
A0231880H,"SELECT DISTINCT(continent_name), continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT s.name AS app, c.name as country
FROM available av, country c, store s, appfunctionality ap
WHERE av.country = c.code3
AND ap.name = av.name
AND c.continent_code = 'EU'
AND av.name = s.name
AND ap.functionality = 'contact tracing'
GROUP BY s.name, c.name, s.name
HAVING count(s.name)>1
ORDER BY app;","10, [('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Immuni', 'Italy, Italian Republic'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopCovid France', 'France, French Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"SELECT name
FROM country
GROUP BY name
HAVING count(continent_code)>1
ORDER BY name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT(c1.name)
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_code <> c2.continent_code
ORDER BY c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,,No output,,,,No output,,No output,,No output,,No output,,,"CREATE TABLE E2 (
	J TEXT NOT NULL,
	K TEXT NOT NULL,
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL);
CREATE TABLE E1 (
	A TEXT NOT NULL,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	G TExT NOT NULL,
	F TEXT NOT NULL,
	PRIMARY KEY (A,C,D),
	FOREIGN KEY (G) REFERENCES E2 (G));",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"E2 is primary schools, E1 is student, S is the admission form. 
Primary school can have many students or nil, if it is a very bad school and no one wants to enter.
Kid must attend one primary school but no more than 1.
J,K,G,H is district, gender(boy/girl/co-ed), school name and principle name respectively.
School name is the primary key, assuming no same school name in a city.
A,B,C,D is student's name, gender, class, class number.
F is date of admission of the student.",No output,,
A0231884Y,"select distinct continent_name, continent_code
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select distinct ap.name as app, cou.name as country
from app ap, available ava, country cou, appfunctionality apf, store st1, store st2
where ap.name = ava.name
and ava.country = cou.code3
and cou.continent_name = 'Europe'
and ap.name = apf.name
and apf.functionality = 'contact tracing'
and ap.name = st1.name
and ap.name = st2.name
and st1.os = 'Android'
and st2.os = 'iOS';","10, [('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Immuni', 'Italy, Italian Republic'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopCovid France', 'France, French Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"select c.name
from country c
group by c.name
having count(c.continent_code) > 1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select distinct c1.name
from country c1, country c2
where c1.name = c2.name
and c1.continent_code != c2.continent_code;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select ap.name
from app ap
where not exists (
	select *
	from store st
	where ap.name = st.name
	and not exists (
	 	select *
		from available ava, country cou
		where st.name = ava.name
		and ava.country = cou.code3
		and cou.continent_name = 'Oceania'));","12, [('TCC COVID Monitor',), ('healthdirect',), ('CovidCare - Symptom monitor',), ('Coronavirus Australia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('NZ COVID Tracer',), ('Covid-19  Armenia',)]",,,"select cou.name, count(ap.name) as count
from country cou, available ava, app ap
where ava.name = ap.name
and ava.country = cou.code3
group by cou.name
order by count desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select cou.name, count(ap.name) as count
from country cou, available ava, app ap
where ava.name = ap.name
and ava.country = cou.code3
group by cou.name
order by count desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select cou.name, count(ap.name) as count
from country cou, available ava, app ap
where ava.name = ap.name
and ava.country = cou.code3
group by cou.name
order by count desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select cou.name, count(ap.name) as count
from country cou, available ava, app ap
where ava.name = ap.name
and ava.country = cou.code3
group by cou.name
order by count desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"create table if not exists E2 (
	G text primary key,
	H text not null,
	J text not null,
	K text not null);
create table if not exists E1_S (
	A text not null,
	B text not null,
	C text not null,
	D text not null,
	F text not null,
	e2G text not null,
	foreign key (e2G) references E2(G),
	primary key (A, C, D));",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"Describe in English an original real world example to which the entity-relationship
diagram in Figure 1 could correspond. Give the real world meaning of entity sets E1 and E2,
of relationship set S, and of attributes A, B, C, D, F, G, H, J, and K. Justify the candidate
keys and participation constraints in the entity-relationship diagram. 
E1: each car available at the store house
E2: car type
S: contain
A:car color under each car type
B:car price
C:car individual number given under each car type
D:car production batch number under each car type
F:the number of cars of each type stored at the house
G:car number that identifies the unique car type
H:production year
J:mileage
K:brand",No output,,
A0231885X,"SELECT c.continent_name, c.continent_code
FROM country c
GROUP BY c.continent_name, c.continent_code;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name AS app, c.name AS country, s.os
FROM app a, country c, store s
WHERE s.os IN (SELECT s.os FROM store s 
			   WHERE (s.os = 'iOS' OR s.os='Android')
			   AND s.name=a.name)
AND c.continent_name = 'Europe'
AND s.name=a.name
GROUP BY a.name, c.name, s.os;","29848, [('BeAware Bahrain', 'Liechtenstein, Principality of', 'iOS'), ('Telemedicina Paran\xa0', 'San Marino, Republic of', 'Android'), ('1-Check COVID', 'Bosnia and Herzegovina', 'iOS'), ('MapVi', 'Ireland', 'iOS'), ('GVA Responde', 'Denmark, Kingdom of', 'iOS'), ('GERAK MALAYSIA', 'Isle of Man', 'Android'), ('Quarantine Watch', 'Belgium, Kingdom of', 'Android'), ('COVID-19 Care Tamil Nadu - (Official)', 'Russian Federation', 'Android'), ('CRUSH COVID RI', 'Portugal, Portuguese Republic', 'iOS'), ('Wabash COVID', 'Estonia, Republic of', 'iOS')]",,,"SELECT DISTINCT c.name, c.continent_name 
FROM country c
GROUP BY c.name, c.continent_name
HAVING COUNT(*)>1;","0, []",,,"SELECT c.name, c.continent_name 
FROM country c
GROUP BY c.name, c.continent_name
WHERE  c.continent_name > ANY (SELECT DISTINCT c.name, c.continent_name 
FROM country c
GROUP BY c.name, c.continent_name);",No output,"Aggregation is used, CHECK CODE; ",,"SELECT a.name
FROM app a
WHERE NOT EXITS(
	SELECT DISTINCT s.os
	FROM store s
	WHERE s.name=a.name
	AND NOT EXISTS (
		SELECT DISTINCT s.os
		FROM available a
		WHERE s.name=a.name));",No output,,,,No output,,No output,,No output,,No output,,,"CREATE TABLE IF NOT EXISTS E2 (
	J TEXT NOT NULL,
	K TEXT NOT NULL,
	H TEXT NOT NULL,
	G TEXT NOT NULL PRIMARY KEY);
CREATE TABLE IF NOT EXISTS E1 (
	A TEXT NOT NULL,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	PRIMARY KEY (A, C, D));
CREATE TABLE IF NOT EXISTS S (
	F TEXT NOT NULL,
	A TEXT NOT NULL,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	G TEXT NOT NULL,
	PRIMARY KEY (A, C, D, G),
	FOREIGN KEY (G) REFERENCES E2(G));",No output,Num. tables: 3; Num. not null: 14; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"For example, we take E1 as students, S as accept_by, and E2 as Universities.
A can be the passport ID which is a candidate key, B can be the age of student,
C can be the full name of student which can be a candidate key, and D is the email address of the student
which can be a candidate key. F can be student ID. G can be the name of Univerisity which is a candidate key,
J can be the country of the university, K can be the number of faculties in university, and H can be the address
of Universities. University can accept many students but a student can only be enrolled in one university.
All candidate keys should not be null.",No output,,
A0231886W,"SELECT
    continent_name
    , continent_code
from
    country
group by
    continent_name
    , continent_code;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT
    a.name as app
    , d.name as country
FROM
    app a
    left JOIN
        appfunctionality b
    ON
        a.name = b.name
    AND
        b.functionality = 'contact tracing'
    left JOIN
        available c
    on
        a.name = c.name
    left JOIN
        country d
    on
        c.country = d.code3
where
    d.continent_name = 'Europe';","102, [('VoxCOVID', 'France, French Republic'), ('????????? ???? ???????????', 'Russian Federation'), ('???', 'Ukraine'), ('COVapp', 'Germany, Federal Republic of'), ('COVID izle', 'Azerbaijan, Republic of'), ('Corona Check Screening', 'Germany, Federal Republic of'), ('geoHealthApp Covid19 / Coronavirus? Tracker', 'Switzerland, Swiss Confederation'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Tonic: Medicina para M‚dicos', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland')]",,,"select
    a.name
from
    country a
group by
    a.name
having
    count(distinct a.continent_name) > 1;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select
    distinct a.name
from
    country a
    left join
        country b
    on
        a.name = b.name
where
    a.continent_name <> b.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select
    a.name
from
    app a
    left join
        available b
    on
        a.name = b.name
    left join
        country c
    on
        b.country = c.code3
    and
        c.continent_name = 'Oceania'
where
    a.name not in (
        select
            d.name
        from
            store d
            left join
                app e
            on
                d.name = e.name
        where
            d.os is null);","395, [('COVID-19 CDMX',), ('CovTracer',), ('????????????????',), ('Relief Central | COVID-19',), ('Stop COVID-19 KG',), ('Lynx-Virtual',), ('Canada COVID-19',), ('NMC COVID-19',), ('StopCOVID NI',), ('Koronavirus MK',)]",,,"select
    a.name
    , count(distinct c.name) as count
from
    country a
    left join
        available b
    ON
        a.code3 = b.country
    left join
        app c
    on
        b.name = c.name
group by
    a.name
order by
    count(distinct c.name) desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select
    a.name
    , count(distinct c.name) as count
from
    country a
    left join
        available b
    ON
        a.code3 = b.country
    left join
        app c
    on
        b.name = c.name
group by
    a.name
order by
    count(distinct c.name) desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","select
    a.name
    , count(distinct c.name) as count
from
    country a
    left join
        available b
    ON
        a.code3 = b.country
    left join
        app c
    on
        b.name = c.name
group by
    a.name
order by
    count(distinct c.name) desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","select
    a.name
    , count(distinct c.name) as count
from
    country a
    left join
        available b
    ON
        a.code3 = b.country
    left join
        app c
    on
        b.name = c.name
group by
    a.name
order by
    count(distinct c.name) desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Italy, Italian Republic', 7), ('Switzerland, Swiss Confederation', 7)]",,,"CREATE TABLE E1 (
A TEXT,
C TEXT,
D TEXT,
B TEXT NOT NULL,
F TEXT NOT NULL,
PRIMARY KEY (A, C, D));
CREATE TABLE E2 (
G TEXT,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL,
PRIMARY KEY (G));
CREATE TABLE S (
A TEXT REFERENCES E1(A),
C TEXT REFERENCES E1(C),
D TEXT REFERENCES E1(D),
G TEXT REFERENCES E2(G),
F TEXT NOT NULL,
FOREIGN KEY(A, C, D) REFERENCES E1(A, C, D),
PRIMARY KEY ((A, C, D, G));",No output,Num. tables: 3; Num. not null: 6; Num. foreign keys defined: 5 (CHECK CODE) ; ,,"E1: zoo species information
attributes:
    A: zoo species family name;
    C: zoo species genus name;
    D: zoo species species name;
    B: zoo species common name;
S: zoo species sector information
attributes:
    A: zoo species family name;
    C: zoo species genus name;
    D: zoo species species name;
    F: species sector identification number;
    G: maintenance personnal identification number
E2: zoo maintenance personnal information
attributes:
    G: maintenance personnal identification number
    H: personnal position;
    J: personnal name;
    K: personnal gender;
explantion:
My real-world example is a zoo maintenance system. E1 is the information of 
species including plants and animals; E2 is the personnal information; S is 
the maintenance record of personnal to species sector.
participation constraints:
As family, genus and species identifies a species, and a species belongs to 
one species sector, the cardinality is (1,1) for species and sectors.
As a species sector is maintained by zero or more personnal(plants may need 
no regular maintenance), and every personnal may be in charge of zero or 
more sectors according to his/her position, the cardinality is (0,n) for 
sector and personnal.
candidate key:
    E1: {A,C,D}
        family, genus and species specifies an animal and its common name(which 
        could be duplicate among species);
    E2: {G}
        personnal ID identifies a person;
    S: {A,C,D,G};
        a personnal may take care of multiple sectors or none; a sector may 
        need multiple maintainer or none.",No output,,
A0231887U,"select distinct continent_name, continent_code 
from country
;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select app, country
from(
	select a.name as app, c.name as country, s.os as os
	from country c
	inner join available a on c.code3 = a.country
	inner join store s on s.name = a.name
	inner join appfunctionality f on f.name = a.name
	where 1=1
	  and c.continent_name = 'Europe'
	  and f.functionality = 'contact tracing'
) t
group by 1,2
having count(*) > 1
;","10, [('SwissCovid', 'Switzerland, Swiss Confederation'), ('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of')]",,,"select name
from country
group by 1
having count(distinct continent_name) > 1 
;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select name
from country
where continent_name >= ALL(select continent_name from country group by 1)
;","14, [('Argentina, Argentine Republic',), ('Bolivia, Republic of',), ('Brazil, Federative Republic of',), ('Chile, Republic of',), ('Colombia, Republic of',), ('Ecuador, Republic of',), ('Falkland Islands (Malvinas)',), ('French Guiana',), ('Guyana, Co-operative Republic of',), ('Paraguay, Republic of',)]","Aggregation is used, CHECK CODE; ",,"select a.name
from country c
inner join available a on a.country = c.code3
inner join store s on s.name = a.name
where 1=1
  and continent_name = 'Oceania'
  and s.os in (select os from store group by 1)
group by 1
order by 1
;","12, [('#BeatCovid19Now',), ('Awhina - informing health workers',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('COVID VS',), ('CovidCare - Symptom monitor',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',)]","Aggregation is used, CHECK CODE; ",,"select c.name, count(distinct a.name) 
from available a
inner join country c on c.code3 = a.country
group by 1
order by 2 desc 
limit 6
;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count(distinct a.name) 
from available a
inner join country c on c.code3 = a.country
group by 1
order by 2 desc 
limit 7
;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","select c.name, count(distinct a.name) 
from available a
inner join country c on c.code3 = a.country
group by 1
order by 2 desc 
limit 8
;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","select c.name, count(distinct a.name) 
from available a
inner join country c on c.code3 = a.country
group by 1
order by 2 desc 
limit 16
;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE E1(
	B VARCHAR(32) NOT NULL,
	A VARCHAR(32),
	C VARCHAR(32),
	D VARCHAR(32),
	PRIMARY KEY (A, C, D)
)
;
CREATE TABLE E2(
	G VARCHAR(32) PRIMARY KEY,
	H VARCHAR(32) NOT NULL,
	J VARCHAR(32) NOT NULL,
	K VARCHAR(32) NOT NULL
)
;
CREATE TABLE S(
	F VARCHAR(32) NOT NULL,
	e1_a VARCHAR(32),
	e1_c VARCHAR(32),
	e1_d VARCHAR(32), 
	e2_g VARCHAR(32),
	PRIMARY KEY (e1_a, e1_c, e1_d, e2_g),
	FOREIGN KEY (e1_a, e1_c, e1_d) 
	REFERENCES E1(A, C, D),
	FOREIGN KEY (e2_g) REFERENCES E2(G)
)
;",No output,Num. tables: 3; Num. not null: 5; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"We can think about the case of students applying for the companies to work for. 
In this case, the entity set 'E1' can be 'Students' 
and the entity set 'E2' can be 'Companies'. 
The relationship set 'S' can be described as 'Apply', 
and here, it means that one student can apply for many different companies.
Attributes A, C, D can be 'First name', 'Last name', 'gender' respectively 
and the attribute B can be 'the country that the student is living' 
while the attributes A, C, and D are composite key for the table E1.
Attribute F can be 'the datetime that the student applied',
and the attributes G, H, J, K can be 'company id', 
'number of employees in the company', 'the industry of the company', 
and 'the name of the CEO of the company' respectively.
while the 'company id' is the primary key that indicates one unique company.",No output,,
A0231891A,"select distinct continent_name,  continent_code
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select distinct ap.name AS app, c.name AS country
from available av, store s, app ap, country c
where ap.name = av.name
and ap.name = s.name
and c.code3 = av.country
and c.continent_name = 'Europe'
and s.os = 'iOS'
intersect 
select distinct ap.name AS app, c.name AS country
from available av, store s, app ap, country c
where ap.name = av.name
and ap.name = s.name
and c.code3 = av.country
and c.continent_name = 'Europe'
and s.os = 'Android'
order by app;","42, [('???', 'Ukraine'), ('????????? ???? ???????????', 'Russian Federation'), ('?????????? ??????????', 'Russian Federation'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Asistencia COVID-19', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('CONFINAPP', 'Spain, Kingdom of'), ('Corona-Datenspende', 'Germany, Federal Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Corona Check Screening', 'Germany, Federal Republic of')]",,,"select c.name
from country c
group by c.name
having count(c.continent_name) > 1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select distinct c.name
from country c
where c.continent_name <> ANY(select c1.continent_name
							 from country c1
							 where c.name = c1.name);","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct av.name 
from available av, store s, app ap, country c
where ap.name = av.name
and ap.name = s.name
and c.code3 = av.country
and c.continent_name = 'Oceania'
and s.os in (select distinct s.os from store s);","12, [('Bupa Aged Care Connect',), ('Covid-19  Armenia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',)]",,,"select c.name, count(*)
from country c, available av
where c.code3 = av.country
group by c.name
order by count(*) desc, c.name desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count(*)
from country c, available av
where c.code3 = av.country
group by c.name
order by count(*) desc, c.name desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name, count(*)
from country c, available av
where c.code3 = av.country
group by c.name
order by count(*) desc, c.name desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8)]","select c.name, count(*)
from country c, available av
where c.code3 = av.country
group by c.name
order by count(*) desc, c.name desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Switzerland, Swiss Confederation', 7)]",,,"create table E1(
	A TEXT,
	B TEXT NOT NULL,
	C TEXT,
	D TEXT,
	F TEXT NOT NULL,
	PRIMARY KEY (A, C, D));
create table E2(
	J TEXT NOT NULL,
	K TEXT NOT NULL,
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL);",No output,Num. tables: 2; Num. not null: 5; Num. foreign keys defined: 0; ,,"The entity set E1 and E2 could be the department leader and different departments. 
ACD represents the first name, last name and email address of the department head/leader. 
G represents the unique code for the department. 
One leader can lead several departments. But one department can only have one department leader.",No output,,
A0231894X,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT av.name AS app, c.name AS country
FROM available av, store s1, country c, store s2, appfunctionality af
WHERE s1.name = av.name
AND s1.name = s2.name
AND c.code3 = av.country
AND s1.os = 'iOS'
AND s2.os = 'Android'
AND c.continent_code = 'EU'
AND af.name = s1.name
AND af.functionality = 'contact tracing';","10, [('COVID-19.eus', 'Spain, Kingdom of'), ('Rakning C-19', 'Iceland, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Immuni', 'Italy, Italian Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('ProteGO Safe', 'Poland, Republic of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopCovid France', 'France, French Republic')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(DISTINCT c.continent_name) > 1;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_name <> c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT av.name
FROM available av
WHERE NOT EXISTS(
	SELECT *
	FROM store s	
	WHERE av.name = s.name
	AND NOT EXISTS(
		SELECT *
		FROM country c, store s1, available av1
		WHERE c.continent_name = 'Oceania'
		AND av.country = c.code3
	)
);","12, [('COVID VS',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',), ('CovidCare - Symptom monitor',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('TCC COVID Monitor',)]",,,"SELECT c.name, COUNT(DISTINCT av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(DISTINCT av.name) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(DISTINCT av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(DISTINCT av.name) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(DISTINCT av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(DISTINCT av.name) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(DISTINCT av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(DISTINCT av.name) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE E1(
	A TEXT NOT NULL,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	PRIMARY KEY (A, C, D)
);
CREATE TABLE E2(
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL,
	J TEXT NOT NULL,
	K TEXT NOT NULL
);
CREATE TABLE S(
	F TEXT NOT NULL,
	A TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	PRIMARY KEY (A, C, D),
	FOREIGN KEY (A, C, D) REFERENCES E1(A, C, D),
	G TEXT REFERENCES E2(G)
);",No output,Num. tables: 3; Num. not null: 11; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"Set E1 is a student set and A is the e-mail of students, B is gender of students, 
C is family name of students, D is first name of students. Set E2 is a university 
set and G is school name, H is the QS rank for the school this year, J and K is 
country and city the school locates in respectively. The set S records the school 
each student is studying in at present and F represents the faculty students are in. 
In the entity-relationship diagram, each record in E1 should have the only record in E2 
to correspond in S, so the set S records which college the student is in now. But the 
college in E2 may have no student in E1 to correspond, and also may have a lot of students 
to correspond. There is no limitation. The candidate key for E1 are (A, C, D) and the 
candidate key for E2 is (G). The candidate key for S is also (A, C, D).",No output,,
A0231902R,"select distinct(country.continent_name, upper(substring(country.continent_name,1,2)))
from country;","7, [('(Africa,AF)',), ('(Antarctica,AN)',), ('(Asia,AS)',), ('(Europe,EU)',), ('(""North America"",NO)',), ('(Oceania,OC)',), ('(""South America"",SO)',)]",,,"select app.name as app, country.name as country
from app, country, available, store
where app.name = available.name
and app.name = store.name
and available.country = country.code3
and country.continent_name = 'Europe'
and store.os = 'iOS'
intersect
select app.name as app, country.name as country
from app, country, available, store
where app.name = available.name
and app.name = store.name
and available.country = country.code3
and country.continent_name = 'Europe'
and store.os = 'Android';","42, [('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('Korona ™nlem', 'Turkey, Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('Coronavirus Support App (UK)', 'United Kingdom of Great Britain & Northern Ireland')]",,,"select country.name
from country
group by country.name
having count(country.continent_name) >= 2;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,,No output,,,"select app.name 
from app, country, store, available
where app.name = available.name
and available.country = country.code3
and app.name = store.name
and country.continent_name = 'Europe'
and store.os = 'iOS'
intersect
select app.name 
from app, country, store, available
where app.name = available.name
and available.country = country.code3
and app.name = store.name
and country.continent_name = 'Europe'
and store.os = 'Android';","42, [('COVID Radar',), ('????????? ???? ???????????',), ('COVID-19.eus',), ('Care Workforce',), ('StopCovid France',), ('STOP COVID19 CAT',), ('???',), ('patientMpower for COVID-19',), ('Asistencia COVID-19',), ('COVIDCare NI',)]",,,"select country.name, count(app.name) as count
from app, available, country, store
where app.name = available.name
and available.country = country.code3
and app.name = store.name
group by country.name
order by count desc
limit(6);","6, [('United States of America', 75), ('India, Republic of', 62), ('Mexico, United Mexican States', 29), ('Brazil, Federative Republic of', 24), ('Spain, Kingdom of', 24), ('United Kingdom of Great Britain & Northern Ireland', 18)]","select country.name, count(app.name) as count
from app, available, country, store
where app.name = available.name
and available.country = country.code3
and app.name = store.name
group by country.name
order by count desc
limit(7);","7, [('United States of America', 75), ('India, Republic of', 62), ('Mexico, United Mexican States', 29), ('Spain, Kingdom of', 24), ('Brazil, Federative Republic of', 24), ('United Kingdom of Great Britain & Northern Ireland', 18), ('Australia, Commonwealth of', 15)]","select country.name, count(app.name) as count
from app, available, country, store
where app.name = available.name
and available.country = country.code3
and app.name = store.name
group by country.name
order by count desc
limit(8);","8, [('United States of America', 75), ('India, Republic of', 62), ('Mexico, United Mexican States', 29), ('Spain, Kingdom of', 24), ('Brazil, Federative Republic of', 24), ('United Kingdom of Great Britain & Northern Ireland', 18), ('Australia, Commonwealth of', 15), ('Russian Federation', 14)]","select country.name, count(app.name) as count
from app, available, country, store
where app.name = available.name
and available.country = country.code3
and app.name = store.name
group by country.name
order by count desc
limit(16);","16, [('United States of America', 75), ('India, Republic of', 62), ('Mexico, United Mexican States', 29), ('Spain, Kingdom of', 24), ('Brazil, Federative Republic of', 24), ('United Kingdom of Great Britain & Northern Ireland', 18), ('Australia, Commonwealth of', 15), ('Russian Federation', 14), ('Indonesia, Republic of', 13), ('Germany, Federal Republic of', 11)]",,,"CREATE TABLE E1 (
A VARCHAR(64) Unique,
B VARCHAR(64) not null,
C VARCHAR(64) not NULL,
D VARCHAR(64) not NULL,
primary key(C,D) );
CREATE TABLE E2 (
J VARCHAR(64) not null,
K VARCHAR(64) not null,
G VARCHAR(64) primary key,
H VARCHAR(64) not null);
create table S (
SA VARCHAR(64) not null,
SC VARCHAR(64) not null,
SD VARCHAR(64) not null,
F VARCHAR(64) not null,
SG VARCHAR(64) not null,
foreign key (SA) references E1(A),
foreign key (SC,SD) references E1(C,D),
foreign key (SG) references E2(G),
primary key(SC,SD)
);",No output,Num. tables: 3; Num. not null: 11; Num. foreign keys defined: 3 (CHECK CODE) ; ,,"We can assume that 
E1 is the entity of children,
E2 is the entity of fathers, and
S is the blood relationship between children and fathers.
A is the ID number of the child, 
B is the name of the child, 
C is the code of the school where the child is studying, 
D is the ID of the child in the school which is unique within the school,
F is the name of the mother,
G is the ID number of the father,
H is the company where the father works,
J is the name of the father, and
K is the citizenship of the father.
Unique constraint for A means a child can only have one ID number.
Unique constraint for C and D means we can use the combination of school's code and the ID of the child in that school to identify each child.
Unique constraint for G means a father can only have one ID number.
The (1,1) constraint means every child must have a father.
The (0,n) constraint means a father can have many children or no child that is recorded in the E1 table.",No output,,
A0231904M,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country AS c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT ap.name AS app, c.name AS country
FROM app AS ap, available AS av, store AS s,
	appfunctionality AS af, country AS c
WHERE ap.name = av.name
AND ap.name = s.name
AND ap.name = af.name
AND af.functionality = 'contact tracing'
AND s.os = 'iOS'
AND av.country = c.code3
AND av.country IN(
	SELECT c.code3
	FROM country AS c
	WHERE c.continent_name = 'Europe')
INTERSECT
SELECT ap.name AS app, c.name AS country
FROM app AS ap, available AS av, store AS s, 
	appfunctionality AS af, country AS c
WHERE ap.name = av.name
AND ap.name = s.name
AND ap.name = af.name
AND af.functionality = 'contact tracing'
AND s.os = 'Android'
AND av.country = c.code3
AND av.country IN(
	SELECT c.code3
	FROM country AS c
	WHERE c.continent_name = 'Europe');","10, [('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Stopp Corona', 'Austria, Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"SELECT c.name
FROM country AS c
GROUP BY c.name
HAVING COUNT(*) > 1
ORDER BY name ASC;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"Select DISTINCT a.name from country a
where EXISTS (Select * from country b 
                where (a.name = b.name)
                     and a.continent_code != b.continent_code);","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT ap.name
FROM app AS ap, available AS av, store AS s
WHERE ap.name = av.name
AND ap.name = s.name
AND av.country IN (
	SELECT c.code3
	FROM country AS c
	WHERE c.continent_name = 'Oceania'
	AND NOT EXISTS(
		SELECT *
		FROM store AS s
		WHERE s.os NOT IN(
			SELECT DISTINCT s.os
			FROM store AS s)));","12, [('Bupa Aged Care Connect',), ('Covid-19  Armenia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',)]",,,"SELECT c.name, COUNT(*) 
FROM country AS c, available AS av
WHERE c.code3 = av.country
GROUP BY c.name
ORDER BY count DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(*) 
FROM country AS c, available AS av
WHERE c.code3 = av.country
GROUP BY c.name
ORDER BY count DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(*) 
FROM country AS c, available AS av
WHERE c.code3 = av.country
GROUP BY c.name
ORDER BY count DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(*) 
FROM country AS c, available AS av
WHERE c.code3 = av.country
GROUP BY c.name
ORDER BY count DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1(
	A TEXT UNIQUE NOT NULL,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	PRIMARY KEY (C, D));
CREATE TABLE IF NOT EXISTS E2(
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL,
	J TEXT NOT NULL,
	K TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS S(
	F TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	G TEXT NOT NULL REFERENCES E2(G),
	FOREIGN KEY (C, D) REFERENCES E1(C, D));",No output,Num. tables: 3; Num. not null: 11; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 as government, E2 as parliament_member, S as head.
Each government must have one and only one head.
Each parliament member can be zero to several heads of government.
A can be the government name, for example: Ministry of Finance.
B can be the government building age.
C can be the government address.
D can be the government phone number.
F can be the date that the parliament member start to serve as a head of government.
G can be the name of parliament member.
H can be the date of starting serving.
J can be the office address of parliament member.
K can be the age of parliament member.",No output,,
A0231905L,"SELECT DISTINCT
  continent_name, 
  continent_code 
FROM 
  country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT 
  av.name AS app, 
  c.name AS country 
FROM 
  available av, 
  country c, 
  store s1, 
  store s2 
WHERE 
  av.country = c.code3 
  AND av.name = s1.name 
  AND av.name = s2.name 
  AND s1.os = 'iOS' 
  AND s2.os = 'Android' 
  AND c.continent_name = 'Europe';","42, [('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('????????? ???? ???????????', 'Russian Federation'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('CORONAVIRUS - ???????????', 'Ukraine'), ('Luscii', 'Netherlands, Kingdom of the'), ('COVID Radar', 'Netherlands, Kingdom of the')]",,,"SELECT 
  name 
FROM 
  country 
GROUP BY 
  name 
HAVING 
  COUNT(continent_name) > 1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT 
  DISTINCT c1.name 
FROM 
  country c1, 
  country c2 
WHERE 
  c1.code2 = c2.code2 
  AND c1.continent_name <> c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT ava.name
FROM available ava, country c
WHERE ava.country = c.code3
AND c.continent_name = 'Oceania'
AND NOT EXISTS (SELECT DISTINCT s1.os
			   FROM store s1
			   WHERE NOT EXISTS (SELECT *
								 FROM store s, available ava, country c
								WHERE ava.country = c.code3
								AND ava.name = s.name));","12, [('COVID VS',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',), ('CovidCare - Symptom monitor',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('TCC COVID Monitor',)]",,,"SELECT 
  c.name, 
  COUNT (ava.name) as count 
FROM 
  country c, 
  available ava 
WHERE 
  c.code3 = ava.country 
GROUP BY 
  c.name 
ORDER BY 
  count desc 
LIMIT 
  6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT 
  c.name, 
  COUNT (ava.name) as count 
FROM 
  country c, 
  available ava 
WHERE 
  c.code3 = ava.country 
GROUP BY 
  c.name 
ORDER BY 
  count desc 
LIMIT 
  7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT 
  c.name, 
  COUNT (ava.name) as count 
FROM 
  country c, 
  available ava 
WHERE 
  c.code3 = ava.country 
GROUP BY 
  c.name 
ORDER BY 
  count desc 
LIMIT 
  8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT 
  c.name, 
  COUNT (ava.name) as count 
FROM 
  country c, 
  available ava 
WHERE 
  c.code3 = ava.country 
GROUP BY 
  c.name 
ORDER BY 
  count desc 
LIMIT 
  16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E1 (
A text UNIQUE NOT NULL,
B text NOT NULL,
C text NOT NULL,
D text NOT NULL,
UNIQUE (C,D));
CREATE TABLE S (
F text NOT NULL);
CREATE TABLE E2(
J text NOT NULL,
K text NOT NULL,
H text NOT NULL,
G text UNIQUE NOT NULL);",No output,Num. tables: 3; Num. not null: 9; Num. foreign keys defined: 0; ,,"This could be a list of form teacher and their students. E1 could be the table of students.
B could be the name of the student, A could be their NRIC number so it is unique. C could be
the class number and D could be the roll number, so the combination of class number and roll
number would be unique. S determines list of classes at the school and F is the class number.
E2 is for the teachers. J is the class number, K is the name, G is the unique NRIC number and 
H could be the subject the teacher specialises in. 
Each student has only one form teacher but each form teacher has multiple students in their class.",No output,,
A0231906J,"select distinct c.continent_name, c.continent_code
from country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select distinct a.name as app, c.name as country
from app a, country c, store s, available av
where s.name = a.name
and c.code3 = av.country
and (s.os = 'iOS' or s.os = 'Android')
and c.continent_name = 'Europe'
order by a.name, c.name;","12245, [('#BeatCovid19Now', 'Armenia, Republic of'), ('#BeatCovid19Now', 'Austria, Republic of'), ('#BeatCovid19Now', 'Azerbaijan, Republic of'), ('#BeatCovid19Now', 'Bulgaria, Republic of'), ('#BeatCovid19Now', 'Croatia, Republic of'), ('#BeatCovid19Now', 'Cyprus, Republic of'), ('#BeatCovid19Now', 'Czech Republic'), ('#BeatCovid19Now', 'Denmark, Kingdom of'), ('#BeatCovid19Now', 'France, French Republic'), ('#BeatCovid19Now', 'Georgia')]",,,"select distinct c.name
from country c
group by c.name
having count(c.continent_code)>1;","8, [('Turkey, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Georgia',), ('Cyprus, Republic of',), ('Armenia, Republic of',)]",,,"select distinct c.name
from country c
where c.continent_code >= all(
select c.continent_code
from country c);","14, [('Argentina, Argentine Republic',), ('Bolivia, Republic of',), ('Brazil, Federative Republic of',), ('Chile, Republic of',), ('Colombia, Republic of',), ('Ecuador, Republic of',), ('Falkland Islands (Malvinas)',), ('French Guiana',), ('Guyana, Co-operative Republic of',), ('Paraguay, Republic of',)]",,,"select distinct a.name
from app a, available av, country c
where av.country = c.code3
and a.name = av.name
and c.continent_name = 'Oceania'
and exists(
select *
from store s
where s.os is not null);","12, [('Bupa Aged Care Connect',), ('Covid-19  Armenia',), ('Awhina - informing health workers',), ('MyAus COVID-19',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',)]",,,"select c.name, count(av.name)
from country c, app a, available av
where c.code3 = av.country
and a.name = av.name
group by c.name
order by count(av.name)desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count(av.name)
from country c, app a, available av
where c.code3 = av.country
and a.name = av.name
group by c.name
order by count(av.name)desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name, count(av.name)
from country c, app a, available av
where c.code3 = av.country
and a.name = av.name
group by c.name
order by count(av.name)desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name, count(av.name)
from country c, app a, available av
where c.code3 = av.country
and a.name = av.name
group by c.name
order by count(av.name)desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E1(
A text not null,
B text not null,
C text not null,
D text not null,
primary key(A,C,D));
create table E2(
J text not null,
K text not null,
G text primary key,
H text not null);
create table S(
F text not null,
G text not null,
C text not null,
D text not null,
A text not null,
primary key(A,C,D,G),
foreign key(A,C,D) references E1(A,C,D),
foreign key(G) references E2(G));",No output,Num. tables: 3; Num. not null: 12; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"real-life scenario:
E1 is manager
A could be the manager position name
C could be the salary of that manager position
and D could be the department in which the position is. 
E2 is employees
G could be the employee id
R is the relationship of which employee is in what manager position.
Each manager position must have only one employee's id.
Some employees are not managers while some talented employee can be the manager of two departments.",No output,,
A0231907H,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]","Missing semicolon, CHECK CODE; ",,"SELECT av.name AS app, c.name AS country
FROM country c, available av, store s1, store s2, appfunctionality af
WHERE av.name = s1.name
AND av.name = s2.name
AND s1.os = 'iOS'
AND s2.os = 'Android'
AND av.country = c.code3
AND c.continent_code = 'EU'
AND av.name = af.name
AND af.functionality = 'contact tracing'
GROUP BY av.name, c.name","10, [('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Immuni', 'Italy, Italian Republic'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopCovid France', 'France, French Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]","Missing semicolon, CHECK CODE; ",,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING count(*) > 1","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_name <> c2.continent_name","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]","Missing semicolon, CHECK CODE; ",,"SELECT av.name
FROM available av, store s, country c
WHERE s.name = av.name
AND av.country = c.code3
AND c.continent_name ='Oceania'
GROUP BY av.name
HAVING count(*) = count(DISTINCT s.os)","12, [('#BeatCovid19Now',), ('Awhina - informing health workers',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('COVID VS',), ('CovidCare - Symptom monitor',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',)]","Aggregation is used, CHECK CODE; ",,"SELECT av.country, count(*) AS number
FROM available av
GROUP BY av.country
ORDER BY number DESC
LIMIT 6","6, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14)]","SELECT av.country, count(*) AS number
FROM available av
GROUP BY av.country
ORDER BY number DESC
LIMIT 7","7, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('AUS', 8)]","SELECT av.country, count(*) AS number
FROM available av
GROUP BY av.country
ORDER BY number DESC
LIMIT 8","8, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('IDN', 8), ('AUS', 8)]","SELECT av.country, count(*) AS number
FROM available av
GROUP BY av.country
ORDER BY number DESC
LIMIT 16","16, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('AUS', 8), ('IDN', 8), ('DEU', 7), ('FRA', 7)]","Missing semicolon, CHECK CODE; ",,"CREATE TABLE IF NOT EXISTS E1(
A TEXT,
B TEXT NOT NULL，
C TEXT，
D TEXT,
PRIMARY KEY （A, C, D)
);
CREATE TABLE IF NOT EXISTS E2(
G TEXT PRIMARY KEY,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL,
);
CREATE TABLE IF NOT EXISTS S(
F TEXT NOT NULL,
A TEXT,
C TEXT,
D TEXT,
G TEXT,
PRIMARY KEY (A,C,D,G),
FOREIGN KEY (A,C,D) REFERENCES E1(A,C,D),
FOREIGN KEY (G) REFERENCES E2(G)
);
CREATE TABLE IF NOT EXISTS E1_S(
F TEXT NOT NULL,
A TEXT,
C TEXT,
D TEXT,
B TEXT NOT NULL,
G TEXT NOT NULL,
PRIMARY KEY (A,C,D),
FOREIGN KEY (G) REFERENCES E2(G)
);",No output,"Illegal fullwidth character detected ['ff0c', 'ff08', 'ff0c']; 
Num. tables: 4; Num. not null: 8; Num. foreign keys defined: 3 (CHECK CODE) ; ",,"Description
A school has several deparments, each deparment has only one head to
lead the whole department, but an excellent head can lead several relative deparments.
Each school will also elect a committee through their unterstanding teachers, including
both headers and non-headers.
Now we want to build a database to record the head relationship between
different school deparments and committees. The member of the committee can be the head of 
one or more school departments, amd they can also not be the head of any department and be chosen
just because of their good performance.
So the database is shown as figure 1.
The actual meaning is as follows:
E1 records school deparment;
  A is school_name
  B is number of members in this department
  C is department_name
  D is office address
  ACD together form the primary key to identigy a department
E2 records school educational committee;
  G is the unique committe_number as the primary key to identify a person
  H is the name
  J is the email
  K is the address of the member
R functions as head connecting E1 and E2
  F is the term of office
  ACD is the foreign key referring to E1
  G is the foreign key referring to E2",No output,,
A0231908E,"select continent_name,continent_code
from country;","262, [('Asia', 'AS'), ('Europe', 'EU'), ('Antarctica', 'AN'), ('Africa', 'AF'), ('Oceania', 'OC'), ('Europe', 'EU'), ('Africa', 'AF'), ('North America', 'NA'), ('Europe', 'EU'), ('Asia', 'AS')]",,,"select distinct a.name app, c.name country
from available a, store s1, store s2, country c
where a.name=s1.name
and a.name=s2.name
and s1.os!=s2.os
and c.code3=a.country
and c.continent_name='Europe';","42, [('Korona ™nlem', 'Turkey, Republic of'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('Coronavirus Support App (UK)', 'United Kingdom of Great Britain & Northern Ireland')]",,,"select c.name 
from country c
group by c.name
having count(distinct continent_name)>1;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct c1.name
from country c1,country c2
where c1.name=c2.name
and c1.continent_name!=c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select a.name
from available a
where not exists(
select s.os
from store s
where a.name=s.name 
and not exists(
select c.code3
from country c
where a.country=c.code3
and c.continent_name='Oceania'
));","12, [('COVID VS',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',), ('CovidCare - Symptom monitor',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('TCC COVID Monitor',)]",,,"select c.name,count(a.name) count
from available a,country c
where a.country=c.code3
group by c.name
order by count desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name,count(a.name) count
from available a,country c
where a.country=c.code3
group by c.name
order by count desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name,count(a.name) count
from available a,country c
where a.country=c.code3
group by c.name
order by count desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name,count(a.name) count
from available a,country c
where a.country=c.code3
group by c.name
order by count desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"create table E2(
j text not null,
k text not null,
g text primary key,
h text not null
);
create table E1_S(
a text unique not null,
b text not null,
c text,
d text,
f text not null,
g text not null,
primary key(c,d),
foreign key(g) references E2(g)
);",No output,Num. tables: 2; Num. not null: 7; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"This can correspond to the relationship of children and female. 
E1 represents the children while children only have one natural mother.
E2 represents the female while one female can have none or many children.
S can represnets the blood relationship.
Under this case, A can represent the birth certification number, 
B represents gender, C represents name and D represents ID number.
J represents gender, K represents country, G represents ID number,
H represents address.
F can denote the birth date.",No output,,
A0231909A,"select continent_name, continent_code from country;","262, [('Asia', 'AS'), ('Europe', 'EU'), ('Antarctica', 'AN'), ('Africa', 'AF'), ('Oceania', 'OC'), ('Europe', 'EU'), ('Africa', 'AF'), ('North America', 'NA'), ('Europe', 'EU'), ('Asia', 'AS')]",,,"select a.name, c.name
from available a, country c
where a.country = c.code3
and c.continent_name = 'Europe'
and a.name in (select s.name from store s
group by s.name
having count (*) = 2);","42, [('Stopp Corona', 'Austria, Republic of'), ('ViruSafe', 'Bulgaria, Republic of'), ('Covidom Patient', 'France, French Republic'), ('StopCovid France', 'France, French Republic'), ('COVID AP-HM', 'France, French Republic'), ('Terr-eSant‚ eCovid', 'France, French Republic'), ('Corona-Datenspende', 'Germany, Federal Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Corona Check Screening', 'Germany, Federal Republic of'), ('COVapp', 'Germany, Federal Republic of')]",,,"select name from country
group by name
having count (*)>1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,,No output,,,"select a.name, c.name from available a, country c where a.country = c.code3
and c.continent_name = 'Oceania'
and a.name in (
select s.nmae from store s where exists(
select r.os from stroe r));",No output,,,"select c.name as name, count(*) as count from available
left join country c on a.country = c.code3 
group by c.name order by count desc limit 6;",No output,"select c.name as name, count(*) as count from available
left join country c on a.country = c.code3 
group by c.name order by count desc limit 7;",No output,"select c.name as name, count(*) as count from available
left join country c on a.country = c.code3 
group by c.name order by count desc limit 8;",No output,"select c.name as name, count(*) as count from available
left join country c on a.country = c.code3 
group by c.name order by count desc limit 16;",No output,,,"CREATE TABLE E1(
A TEXT NOT NULL,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
PRIMARY KEY (A,C,D));
CREATE TABLE E2(
G TEXT NOT NULL,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL,
PRIMARY KEY (G));
CREATE TABLE S(
F TEXT NOT NULL
);",No output,Num. tables: 3; Num. not null: 9; Num. foreign keys defined: 0; ,,"E1: Student
A: Student ID
B: Age
C: Department
D: Major
S: Register for
F: Grade
E2:Course
G: Course ID
H: Course Name
J: Course Level
K: Pre-requesite Courses",No output,,
A0231912N,"SELECT DISTINCT continent_name, continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT af.name as app, c.name as country
FROM appfunctionality af, country c
WHERE af.functionality LIKE  '%contact tracing%'
AND continent_name LIKE '%Europe%';","4144, [('SwissCovid', 'Albania, Republic of'), ('SwissCovid', 'Andorra, Principality of'), ('SwissCovid', 'Azerbaijan, Republic of'), ('SwissCovid', 'Austria, Republic of'), ('SwissCovid', 'Armenia, Republic of'), ('SwissCovid', 'Belgium, Kingdom of'), ('SwissCovid', 'Bosnia and Herzegovina'), ('SwissCovid', 'Bulgaria, Republic of'), ('SwissCovid', 'Belarus, Republic of'), ('SwissCovid', 'Croatia, Republic of')]",,,"SELECT name 
FROM country
GROUP BY name
HAVING COUNT(continent_name) > 1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT distinct c1.name
FROM country c1, country c2
where c1.name = c2.name
and c1.continent_name<> c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT af.name
FROM appfunctionality af, 
	SELECT a.name
			FROM available a, country c
			WHERE c.name = a.country
			AND c.continent_name LIKE '%Oceaniea%'
	);",No output,,,"SELECT country, COUNT (DISTINCT name)
FROM available
GROUP BY country
ORDER BY COUNT (DISTINCT name) DESC
LIMIT 6;","6, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14)]","SELECT country, COUNT (DISTINCT name)
FROM available
GROUP BY country
ORDER BY COUNT (DISTINCT name) DESC
LIMIT 7;","7, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('IDN', 8)]","SELECT country, COUNT (DISTINCT name)
FROM available
GROUP BY country
ORDER BY COUNT (DISTINCT name) DESC
LIMIT 8;","8, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('IDN', 8), ('AUS', 8)]","SELECT country, COUNT (DISTINCT name)
FROM available
GROUP BY country
ORDER BY COUNT (DISTINCT name) DESC
LIMIT 16;","16, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('IDN', 8), ('AUS', 8), ('DEU', 7), ('ARG', 7)]",,,"CREATE TABLE IF NOT EXISTS E1(
A VARCHAR PRIMARY KEY,
B VARCHAR NOT NULL,
C VARCHAR NOT NULL,
D VARCHAR NOT NULL
);
CREATE TABLE IF NOT EXISTS E2(
J VARCHAR NOT NULL,
K VARCHAR NOT NULL,
G VARCHAR PRIMARY KEY,
H VARCHAR NOT NULL
);
CREATE TABLE IF NOT EXISTS S(
F VARCHAR NOT NULL
);",No output,Num. tables: 3; Num. not null: 7; Num. foreign keys defined: 0; ,,"For instance, entity 1 E1 could be diners, entity 2 E2 can be
restaurants, and relationship S can be the orders that diners placed
at the restaurants. A can be diner's email address which is a primary key,
or the diner can be identified using a combination of C and D (name and telephone
number, for instance).",No output,,
A0231915J,"select distinct continent_name,continent_code
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select a.name AS app, c.name AS country
from app a join store s1 on a.name=s1.name join store s2 on a.name=s2.name join appfunctionality af on a.name=af.name join available av on a.name=av.name join country c on av.country=c.code3
where af.functionality='contact tracing' and s1.os='iOS' and s2.os='Android' and c.continent_code='EU';","10, [('COVID-19.eus', 'Spain, Kingdom of'), ('Rakning C-19', 'Iceland, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Immuni', 'Italy, Italian Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('ProteGO Safe', 'Poland, Republic of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopCovid France', 'France, French Republic')]",,,"select c.name
from country c
group by c.name
having count(c.continent_code)!=1 and count(c.continent_code)!=0;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select distinct(c.name)
from country c
where c.continent_code in (select c1.continent_code from country c1,country c2 
						   where c1.continent_code!=c2.continent_code and c.name=c1.name and c1.name=c2.name);","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct(a.name)
from app a join available av on a.name=av.name join country c on av.country=c.code3 
where c.continent_code='OC'
and not exists(select distinct store,os from store AS OS
			   where not exists(select * from store s where s.name=a.name and s.os=OS.os));","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]",,,"select c.name, count(a.name)
from app a join available av on a.name=av.name join country c on av.country=c.code3
group by c.name
order by count(a.name) DESC limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count(a.name)
from app a join available av on a.name=av.name join country c on av.country=c.code3
group by c.name
order by count(a.name) DESC limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name, count(a.name)
from app a join available av on a.name=av.name join country c on av.country=c.code3
group by c.name
order by count(a.name) DESC limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name, count(a.name)
from app a join available av on a.name=av.name join country c on av.country=c.code3
group by c.name
order by count(a.name) DESC limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"create table E1(
A TEXT, 
B TEXT NOT NULL,
C TEXT,
D TEXT, 
PRIMARY KEY(A,C,D));
create table E2(
G TEXT PRIMARY KEY, 
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL);
create table S(
G TEXT REFERENCES E2(G),
A TEXT,
C TEXT,
D TEXT,
F TEXT NOT NULL,
FOREIGN KEY(A,C,D)
REFERENCES E1(A,C,D),
PRIMARY KEY(A,C,D));",No output,Num. tables: 3; Num. not null: 5; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E2 is the information of world top_500_company, G is company_code which is also the candidate key,JKH is company_name, company_size,company_revenue respectively which must be recognized;
E1 is the information of employee, ACD is employee_name, employer_jobtitle, employer_workingnumber which are together the candidate key, and B is employer_gender which can't be null;
S is the work_for_top_500 relationship, each employee in S only and must work for one top_500_company while each company can have different
employees and f is the work_duration for each employee which can't be null, employer_name, employer_jobtitle, employer_workingnumber are together as the candidate key.Participation constraint
is those who work for small companies(not top 500) not in the table S.",No output,,
A0231917E,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c
ORDER BY c.continent_name","7, [('Africa', 'AF'), ('Antarctica', 'AN'), ('Asia', 'AS'), ('Europe', 'EU'), ('North America', 'NA'), ('Oceania', 'OC'), ('South America', 'SA')]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT a.name AS app, c.name AS country
FROM app a, available av, country c, store s, appfunctionality af
WHERE a.name = av.name
AND a.name = s.name
AND a.name = af.name
AND av.country = c.code3
AND c.continent_code = 'EU'
AND af.functionality = 'contact tracing'
AND s.os = 'iOS'
INTERSECT
SELECT DISTINCT a.name AS app, c.name AS country
FROM app a, available av, country c, store s, appfunctionality af
WHERE a.name = av.name
AND a.name = s.name
AND a.name = af.name
AND av.country = c.code3
AND c.continent_code = 'EU'
AND af.functionality = 'contact tracing'
AND s.os = 'Android'
ORDER BY country","10, [('Stopp Corona', 'Austria, Republic of'), ('StopCovid France', 'France, French Republic'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(c.continent_code) > 1
ORDER BY c.name","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_name <> c2.continent_name
ORDER BY c1.name","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT a.name
FROM app a, country c, available av, store s1
WHERE a.name = av.name
AND a.name = s1.name
AND av.country = c.code3
AND c.continent_name = 'Oceania'
AND s1.os =ANY (SELECT DISTINCT s2.os FROM store s2)","12, [('Bupa Aged Care Connect',), ('Covid-19  Armenia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',)]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT c.name, COUNT(*) AS count
FROM app a, available av, country c
WHERE a.name = av.name
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 6","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT DISTINCT c.name, COUNT(*) AS count
FROM app a, available av, country c
WHERE a.name = av.name
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 7","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT DISTINCT c.name, COUNT(*) AS count
FROM app a, available av, country c
WHERE a.name = av.name
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 8","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT DISTINCT c.name, COUNT(*) AS count
FROM app a, available av, country c
WHERE a.name = av.name
AND av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 16","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Argentina, Argentine Republic', 7)]","Missing semicolon, CHECK CODE; ",,"CREATE TABLE IF NOT EXISTS E1 (
A VARCHAR(64) ,
B VARCHAR(64) NOT NULL,
C VARCHAR(64) ,
D VARCHAR(64) ,
PRIMARY KEY(A,C,D)
)
CREATE TABLE IF NOT EXISTS E2 (
G VARCHAR(64) PRIMARY KEY,
H VARCHAR(64) NOT NULL,
J VARCHAR(64) NOT NULL,
K VARCHAR(64) NOT NULL)
CREATE TABLE IF NOT EXISTS S(
A VARCHAR(64), 
C VARCHAR(64), 
D VARCHAR(64), 
G VARCHAR(64),
F VARCHAR(64) NOT NULL,
FOREIGN KEY(A,C,D) REFERENCES E1(A,C,D),
FOREIGN KEY(G) REFERENCES E2(G)
)",No output,Num. tables: 3; Num. not null: 5; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 as hobby club in a university, E2 as club_member, S as head
E1 as hobby club in a university
A is the club's code, which is unique.
B is where the club will have activities, which is not that important for 
identification.
C is the name of the club, and D is the year of establishment, the
combination of which will help identify the club. 
A, C and D are candidate keys.
For example, if I say the code as AA1234, or I say 'The Musical club 
established in 2012', everyone can find the exact club. 
E2 as club member.
G is the student number (A0231917E for example)
H can be the person's name.
J can be the person's gender.
K can be the person's mobile number.
Since H,J,K are not candidate keys, they can also be the members' address, 
age, and so on. There will be no constriants on H,J and K excepr to be 
not null.
S as the relationship of a certain person in E2 heading E1.
(0,n) means a many-to-many relationship. Everyone can join many clubs as 
each will have many hobbies. One club could have no members except the 
head if few people feel interested.
(1,1) means a one-to-one relationship. One club must have one person to lead,
or it will not be established. If one want to be the he head of the club,
he or she can't be the head of another.",No output,,
A0231918A,"SELECT DISTINCT continent_name, continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT af.name AS app, c.name AS country
FROM appfunctionality af, country c, store s, available av, functionality f
WHERE af.name = s.name
AND af.functionality = f.type
AND af.name = av.name
AND av.country = c.code3
AND s.os = 'iOS'
AND c.continent_code = 'EU'
AND f.type = 'contact tracing'
INTERSECT
SELECT af.name AS app, c.name AS country
FROM appfunctionality af, country c, store s, available av, functionality f
WHERE af.name = s.name
AND af.functionality = f.type
AND af.name = av.name
AND av.country = c.code3
AND s.os = 'Android'
AND c.continent_code = 'EU'
AND f.type = 'contact tracing';","10, [('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(c.continent_code) > 1
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,,No output,,,"SELECT DISTINCT av.name
FROM available av
WHERE NOT EXISTS(
SELECT * 
FROM store s
WHERE s.name = av.name
AND NOT EXISTS(
SELECT *
FROM country c
WHERE c.continent_code = 'OC'
AND c.code3 = av.country
));","12, [('#BeatCovid19Now',), ('Awhina - informing health workers',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('COVID VS',), ('CovidCare - Symptom monitor',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',)]",,,"SELECT c.name, COUNT(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(*)
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E1(
A TEXT NOT NULL,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
PRIMARY KEY(A,C,D)
);
CREATE TABLE E2(
G TEXT PRIMARY KEY,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL);
CREATE TABLE S(
F TEXT NOT NULL,
A TEXT, 
C TEXT,
D TEXT,
G TEXT,
FOREIGN KEY(A,C,D) REFERENCES E1(A,C,D),
FOREIGN KEY (G) REFERENCES E2(G),
PRIMARY KEY(A,C,D,G));",No output,Num. tables: 3; Num. not null: 8; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1: person
A: first_name
C: last_name
D: email
B: birth_date
Assume that there is not exist two people with the same first name, last name and email address.
So these three attributes can denote a particular person, then they are the primary key of E1.
E2: company
G: company number
H: company name
J: company address
K: company post code
Assume company number is a unique index for a company, which can not be same in any other companies.
So company number can denote a company and it is the primary key of E2.
S: workfor
F: start_year
A particular person works for a particular company, so the primary keys of E1 AND E2
will be the primary key of S, and start_year indecates in which year the person started to work for the company.",No output,,
A0231919B,"select distinct c.continent_name, c.continent_code 
from country c","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]","Missing semicolon, CHECK CODE; ",,"ALTER TABLE public.country 
    ADD CONSTRAINT countryid
        PRIMARY KEY (continent_code, code2);
CREATE TABLE country_code3 (
code3 CHAR(3),
continent_code CHAR(2) NOT NULL,
code2 CHAR(2) NOT NULL,
PRIMARY KEY (continent_code, code2)
Foreign key (continent_code,code2) REFERENCES country(continent_code,code2));
INSERT INTO country_code3
SELECT distinct(code3) FROM country where code3 is not null;
(select a.name as app, v.name as country
from app a, available v, country_code3 cc, coutry c, store s
where a.name = v.name
and cc.code3 = v.country
and s.name = a.name
and (cc.continent_code = c.continent_code and cc.code2=c.code2)
and c.continent_name = 'Europe'
and (s.os = 'iOS')
intersect
(select a.name as app, v.name as country
from app a, available v, country_code3 cc, coutry c, store s
where a.name = v.name
and cc.code3 = v.country
and s.name = a.name
and (cc.continent_code = c.continent_code and cc.code2=c.code2)
and c.continent_name = 'Europe'
and (s.os = 'Andriod'))",No output,"Multiple semicolons detected, CHECK CODE; ",,"select name from country
group by name having count(name)>1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select distinct(c1.name) from country c1
right join (select name from country c2) as country2
where country.name isnull;",No output,,,"select a.name
from",No output,"Missing semicolon, CHECK CODE; ",,select,"1, [()]",select,"1, [()]",select,"1, [()]",select,"1, [()]","Missing semicolon, CHECK CODE; ",,"CREATE TABLE E1(
A TEXT NOT NULL,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
PRIMARY KEY (A, C, D));
CREATE TABLE E2(
G TEXT NOT NULL PRIMARY KEY,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL);
CREATE TABLE S(
A TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
G TEXT NOT NULL REFERENCES E2(G),	
Foreign key (A,C,D) REFERENCES E1(A,C,D));",No output,Num. tables: 3; Num. not null: 12; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 is students, S is library borrowing account, E2 is books avaible for borrowing;
one student can have one and only one account, one account can have 0 to n books borrowed
ACD is a student's email,name, age;F is the account number; 
G is the unique book identication number, JKH is other features",No output,,
A0231921N,"SELECT DISTINCT continent_name, continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"WITH ios AS (SELECT DISTINCT a.name as app, c.name as country
FROM store s, available a, country c
WHERE a.country = c.code3
	AND s.name = a.name
	AND c.continent_code = 'EU'
	AND s.os = 'iOS'),
android AS (SELECT DISTINCT a.name as app, c.name as country
FROM store s, available a, country c
WHERE a.country = c.code3
	AND s.name = a.name
	AND c.continent_code = 'EU'
	AND s.os = 'Android')
SELECT DISTINCT i.app, i.country
FROM ios i INNER JOIN android a ON (i.app, i.country) = (a.app, a.country)","42, [('???', 'Ukraine'), ('????????? ???? ???????????', 'Russian Federation'), ('?????????? ??????????', 'Russian Federation'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Asistencia COVID-19', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('CONFINAPP', 'Spain, Kingdom of'), ('Corona-Datenspende', 'Germany, Federal Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Corona Check Screening', 'Germany, Federal Republic of')]","Missing semicolon, CHECK CODE; ",,"SELECT name
FROM country
GROUP BY name
HAVING count(DISTINCT continent_code) > 1","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
	AND c1.continent_name <> c2.continent_name","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]","Missing semicolon, CHECK CODE; ",,,No output,,,"WITH winner AS (SELECT c.name as name, COUNT(DISTINCT a.name) as count1
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name),
loser AS (SELECT c.name as name, COUNT(DISTINCT a.name) as count1
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name)
SELECT loser.name, loser.count1
FROM loser LEFT OUTER JOIN winner
					ON winner.name<>loser.name 
					AND winner.count1 > loser.count1
GROUP BY loser.name, loser.count1
HAVING COUNT(loser.name) < 6
ORDER BY count1 DESC;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","WITH winner AS (SELECT c.name as name, COUNT(DISTINCT a.name) as count1
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name),
loser AS (SELECT c.name as name, COUNT(DISTINCT a.name) as count1
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name)
SELECT loser.name, loser.count1
FROM loser LEFT OUTER JOIN winner
					ON winner.name<>loser.name 
					AND winner.count1 > loser.count1
GROUP BY loser.name, loser.count1
HAVING COUNT(loser.name) < 7
ORDER BY count1 DESC;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8)]","WITH winner AS (SELECT c.name as name, COUNT(DISTINCT a.name) as count1
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name),
loser AS (SELECT c.name as name, COUNT(DISTINCT a.name) as count1
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name)
SELECT loser.name, loser.count1
FROM loser LEFT OUTER JOIN winner
					ON winner.name<>loser.name 
					AND winner.count1 > loser.count1
GROUP BY loser.name, loser.count1
HAVING COUNT(loser.name) < 8
ORDER BY count1 DESC;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8)]","WITH winner AS (SELECT c.name as name, COUNT(DISTINCT a.name) as count1
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name),
loser AS (SELECT c.name as name, COUNT(DISTINCT a.name) as count1
FROM available a, country c
WHERE a.country = c.code3
GROUP BY c.name)
SELECT loser.name, loser.count1
FROM loser LEFT OUTER JOIN winner
					ON winner.name<>loser.name 
					AND winner.count1 > loser.count1
GROUP BY loser.name, loser.count1
HAVING COUNT(loser.name) < 16
ORDER BY count1 DESC;","17, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Switzerland, Swiss Confederation', 7), ('France, French Republic', 7)]",,,"CREATE TABLE S (
A TEXT NOT NULL,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
F TEXT NOT NULL,
G TEXT NOT NULL,
PRIMARY KEY (A, G),
FOREIGN KEY (G) REFERENCES E2(G));
CREATE TABLE E2(
G TEXT PRIMARY KEY,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL);",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"The entity set E1 can represent Key Appointment Holders in a company 
(e.g. CEO, CFO, COO) and the table E2 can represent employees of the company. 
The relationship S represents 'Held By' i.e. each position in E1 is held by 
someone in E2. 
Participation constraints: Each key position (A) can be held by only 1 person,
 hence E1 and S are combined in the table set up. However, one person can
 hold multiple positions e.g. in some companies, CEO and COO may be the 
 same person.
Attributes could stand for:
A: Title (e.g. Global CEO, CFO North America, COO Asia-Pacific, hence this is the Primary Key of S)
B: Duties
C: Rank (e.g. Director, VP)
D: Region (e.g. USA, Global, Asia)
F: Appointment Date (e.g. Date the person became CEO)
G: Employee ID
H: Name 
J: Join Date
K: Reporting Manager (if any)
Hence, C,D may be a composite primary key as they are unique when combined.
Although C,D,G is a candidate key for S, this is not as simple as A,G hence A,G 
is chosen for the table set up.",No output,,
A0231922M,"select distinct continent_name,continent_code
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select distinct a.name as app, c.name as country
FROM available a, country c, store s1, store s2
where s1.name = a.name
and s2.name = a.name
and a.country = c.code3
and c.continent_name ='Europe'
and s1.os = 'Android' 
and s2.os = 'iOS'
and s1.name = s2.name
;","42, [('Korona ™nlem', 'Turkey, Republic of'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Karantinas', 'Lithuania, Republic of'), ('Covidom Patient', 'France, French Republic'), ('GVA Responde', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('?????????? ??????????', 'Russian Federation')]",,,"SELECT c.name
from country c
group by c.name
having count(c.continent_name) > 1
order by c.name asc;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT distinct c.name
from country c, country C2
where c.name = c2.name 
and c.continent_name <> c2.continent_name
order by c.name asc;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select a.name
from available a, country c
where c.code3 = a.country
and c.continent_name ='Oceania'
and not exists
(select *
from store s1
where s1.os = all (select distinct s2.os from store s2)
order by s1.name);","12, [('COVID VS',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',), ('CovidCare - Symptom monitor',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('TCC COVID Monitor',)]",,,"select c.name, count(*)
from country c, available a
where a.country = c.code3
group by c.name 
order by count(*) desc limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count(*)
from country c, available a
where a.country = c.code3
group by c.name 
order by count(*) desc limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name, count(*)
from country c, available a
where a.country = c.code3
group by c.name 
order by count(*) desc limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name, count(*)
from country c, available a
where a.country = c.code3
group by c.name 
order by count(*) desc limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2 (
J text not null,
K text not null,
G text primary key,
H text not null
);
CREATE TABLE IF NOT EXISTS E1 (
A text ,
B text not null,
C text ,
D text ,
F text not null,
primary key (A,C,D),
G text references E2(G) deferrable
);",No output,Num. tables: 2; Num. not null: 5; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"the real world example
E2: parliament_member 
E1: Government_divisions
R: Head
The entity set Government_divisions has attributes division_code, division_name, floor_number,
and member_size, the Primary key of government is the composite 
primary key (division_code, division_name, floor_number), which can be used to unique identify one instance.
the entity set parliament_member has attributs member_first_name, member_last_name,
member_age, and member_id. The primary key is member_id.
The relationship set Head has one attribute since, which describes the time when the parliament member is nominated a role in the government
Each government division can have one and only one parliament member searving as the head,
therefore there is both a minimum and a maximum of one relationship.
However, each parliament member can head many government divisions if she/he is very potent, 
or head zero government division if she/he got unlucky.
Since Government_divisions can have one and only one parliament member to head it, the member_id of this heading member 
need to be the foreign key of Government_divisions. In this way the relationships between these 2 entities are preserved.
More over, the attribute 'since' from the relation set Head can be included in the entity set Government_divisions.",No output,,
A0231929Y,"result should be similar to that in the table below in any order.                                                    */
SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;",No output,,,"SELECT DISTINCT a.name AS app, c.name AS country
FROM app a, available ava, country c, store s1, store s2, functionality f
WHERE a.name = ava.name
AND ava.country = c.code3
AND (s1.name = a.name AND s1.os = 'iOS')
AND (s2.name = a.name AND s2.os = 'Android')
AND c.continent_name= 'Europe'
AND f.type = 'contact tracing'
GROUP BY a.name,c.name,c.continent_name,c.continent_code,c.code2;","42, [('???', 'Ukraine'), ('????????? ???? ???????????', 'Russian Federation'), ('?????????? ??????????', 'Russian Federation'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Asistencia COVID-19', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('CONFINAPP', 'Spain, Kingdom of'), ('Corona-Datenspende', 'Germany, Federal Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Corona Check Screening', 'Germany, Federal Republic of')]",,,"SELECT c1.name
FROM country c1, country c2
WHERE c1.code3 = c2.code3
AND c1.continent_code <> c2.continent_code
GROUP BY c1.name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.code3 = c2.code3
AND c1.continent_code <> c2.continent_code;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT a.name
FROM app a, available ava, country c, store s
WHERE a.name = ava.name
AND ava.country = c.code3
AND c.continent_code = 'OC'
AND c.continent_name = 'Oceania'
AND s.name = a.name
GROUP BY a.name, s.name, s.store, s.os;","12, [('#BeatCovid19Now',), ('Awhina - informing health workers',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('COVID VS',), ('CovidCare - Symptom monitor',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',)]","Aggregation is used, CHECK CODE; ",,"SELECT c.name, COUNT(a.name) AS count
FROM country c, app a, available ava
WHERE a.name = ava.name
AND ava.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(a.name) AS count
FROM country c, app a, available ava
WHERE a.name = ava.name
AND ava.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(a.name) AS count
FROM country c, app a, available ava
WHERE a.name = ava.name
AND ava.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(a.name) AS count
FROM country c, app a, available ava
WHERE a.name = ava.name
AND ava.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1 (
	A VARCHAR(20),
	B VARCHAR(20) NOT NULL,
	C VARCHAR(20),
	D VARCHAR(20),
	PRIMARY KEY (A,C,D));
CREATE TABLE IF NOT EXISTS E2 (
	J VARCHAR(20) NOT NULL,
	G VARCHAR(20) PRIMARY KEY ,
	H VARCHAR(20) NOT NULL,
	K VARCHAR(20) NOT NULL);
CREATE TABLE IF NOT EXISTS S (
	F VARCHAR(20) NOT NULL,
	G VARCHAR(20) NOT NULL,
	A VARCHAR(20) NOT NULL,
	C VARCHAR(20) NOT NULL,
	D VARCHAR(20) NOT NULL,
	PRIMARY KEY (A,C,D,G),
	FOREIGN KEY (A,C,D) REFERENCES E1(A,C,D),
	FOREIGN KEY (G) REFERENCES E2(G)
);",No output,Num. tables: 3; Num. not null: 9; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 is a government. 
In E1, A is the country of the government, B is the number of parliament in the government
C is the name of the government, and D is the head of the government.
E2 is the member of parliament.
G is the name of each of head of the parliament,
J is the number of member in the parliament,
H is the abbreviation of the Abbreviation,
K is the address of the headquarter for the parliament.
S is the head of each parliament in the government.
F is the Time in office of the head of each parliament.",No output,,
A0231930N,"SELECT DISTINCT continent_name, continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT av.name app, c.name country
FROM available av, country c, store st, appfunctionality af
WHERE c.code3 = av.country
AND st.name = av.name
AND af.name = av.name
AND af.name = st.name
AND c.continent_name = 'Europe'
AND af.functionality = 'contact tracing'
AND st.os = 'iOS' AND st.name  IN ( 
SELECT st.name 
FROM store st
WHERE st.os = 'Android');","10, [('COVID-19.eus', 'Spain, Kingdom of'), ('Rakning C-19', 'Iceland, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Immuni', 'Italy, Italian Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('ProteGO Safe', 'Poland, Republic of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopCovid France', 'France, French Republic')]",,,"SELECT DISTINCT(name) FROM country
WHERE code3 IN (SELECT code3 
				AS cc FROM 
				country 
				GROUP BY code3 
				HAVING COUNT(*) > 1
			    )
ORDER BY name ASC;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT(name) FROM country
WHERE code2 IN (SELECT code2
				AS cc FROM 
				country 
				GROUP BY code2
				HAVING COUNT(*) > 1
			    )
ORDER BY name ASC;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Aggregation is used, CHECK CODE; ",,"SELECT av.name
FROM available av , country c, store st
WHERE c.code3 = av.country
AND st.name = av.name
AND c.continent_name = 'Oceania'
AND st.os = 'iOS' AND st.name  IN ( 
SELECT st.name 
FROM store st
WHERE st.os = 'Android')
ORDER BY st.name DESC;","8, [('TCC COVID Monitor',), ('NZ COVID Tracer',), ('MyAus COVID-19',), ('healthdirect',), ('COVIDSafe',), ('Coronavirus Australia',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',)]",,,"SELECT c.name , COUNT(*)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 6 ;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name , COUNT(*)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 7 ;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name , COUNT(*)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 8 ;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name , COUNT(*)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 16 ;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE ""E1"" (
A VARCHAR(1) NOT NULL PRIMARY KEY, 
B VARCHAR(1) NOT NULL ,
C VARCHAR(1) NOT NULL,
D VARCHAR(1) NOT NULL
)
SELECT * FROM e1
CREATE TABLE ""S"" (
F VARCHAR(1) NOT NULL,
FOREIGN KEY(""A"")
REFERENCES E1 (""A""),
FOREIGN KEY (""C"",""D"")
REFERENCES E1 (""C"",""D""),
FOREIGN KEY (""C"",""D"")
REFERENCES E2 (""G"")
)
CREATE TABLE ""E2"" (
""J"" VARCHAR(1) NOT NULL ,
""K"" VARCHAR(1)NOT NULL ,
""H"" VARCHAR(1) NOT NULL,
""G"" VARCHAR(1) NOT NULL PRIMARY KEY)",No output,Num. tables: 3; Num. not null: 9; Num. foreign keys defined: 3 (CHECK CODE) ; ,,"A an example fitting the ER diagram above would be an employee and manager, 
where the employee is being managed by the manager
Here we have the case where and employee can have only one manager, 
but the manager can manage many employees
A rough translation of the letters would be:
Employee (E1)
	The Primary Key A - Business Entity ID
	B - Department
	C - Department ID (Candidate Key)
	D - Sales Territory Region Code (Candidate Key)
The combination of Department ID and Sales Territory Region Code would make sense in this case since 
would uniquely identify the rows on the employee, and would always be non-null hence paramount for row identification
Removing any of them would lead to a high risk of duplicate values in the future *f.ex Candidates in the department would have 
the same id. 
Is_Managed (S)
	F - Starting Date
Manager (E2)
	The Primary Key G - email
	H - Full Name
	K - Specialization
	L - Years of Managing in Department
Referenced File: https://dataedo.com/download/AdventureWorks.pdf
Lecture Video On Entity",No output,,
A0231931M,"SELECT c.continent_name, c.continent_code
FROM country c;","262, [('Asia', 'AS'), ('Europe', 'EU'), ('Antarctica', 'AN'), ('Africa', 'AF'), ('Oceania', 'OC'), ('Europe', 'EU'), ('Africa', 'AF'), ('North America', 'NA'), ('Europe', 'EU'), ('Asia', 'AS')]",,,"SELECT av.name AS app, c.name 
FROM available av, store s, country c
WHERE av.name = s.name
AND s.os = 'Android'
AND av.country = c.code3
INTERSECT
SELECT av.name AS app, c.name
FROM available av, store s, country c
WHERE av.name = s.name
AND s.os = 'iOS'
AND av.country = c.code3
INTERSECT
SELECT av.name AS app, c.name
FROM available av, store s, country c
WHERE av.name = s.name
AND av.country = c.code3
AND c.continent_code = 'EU'","42, [('COVID AP-HM', 'France, French Republic'), ('???', 'Ukraine'), ('Corona Check Screening', 'Germany, Federal Republic of'), ('Hayat Eve Sigar', 'Turkey, Republic of'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('e-Covid SINFONIA', 'Italy, Italian Republic'), ('Korona ™nlem', 'Turkey, Republic of'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of')]","Missing semicolon, CHECK CODE; ",,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(*) > 1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c.name
FROM country c
WHERE exists
	(select 1 from country c2
	where c.name = c2.name and c.continent_code  <> c2.continent_code );","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT av.name
FROM available av, store s
WHERE av.country = 'AUS'
OR av.country = 'PNG'
OR av.country = 'NZL'
OR av.country = 'FJI'
OR av.country = 'SLB'
OR av.country = 'FSM'
OR av.country = 'VUT'
OR av.country = 'WSM'
OR av.country = 'KIR'
OR av.country = 'TON'
OR av.country = 'MHL'
OR av.country = 'PLW'
OR av.country = 'TUV'
OR av.country = 'NRU'
GROUP BY av.name
HAVING COUNT(*) > 2;","11, [('CovidCare - Symptom monitor',), ('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('COVIDSafe',)]","Aggregation is used, CHECK CODE; ",,"SELECT av.country, COUNT(*)
FROM available av
GROUP BY av.country
ORDER BY COUNT(*) DESC;","88, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('AUS', 8), ('IDN', 8), ('FRA', 7), ('ARG', 7)]","SELECT av.country, COUNT(*)
FROM available av
GROUP BY av.country
ORDER BY COUNT(*) DESC;","88, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('AUS', 8), ('IDN', 8), ('FRA', 7), ('ARG', 7)]","SELECT av.country, COUNT(*)
FROM available av
GROUP BY av.country
ORDER BY COUNT(*) DESC;","88, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('AUS', 8), ('IDN', 8), ('FRA', 7), ('ARG', 7)]","SELECT av.country, COUNT(*)
FROM available av
GROUP BY av.country
ORDER BY COUNT(*) DESC;","88, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('AUS', 8), ('IDN', 8), ('FRA', 7), ('ARG', 7)]",,,"CREATE TABLE E1 (
A VARCHAR(32),
C VARCHAR(32),
D VARCHAR(32),
B VARCHAR(32) NOT NULL,
PRIMARY KEY (A, C, D));
CREATE TABLE E2 (
G VARCHAR(32) PRIMARY KEY,
J VARCHAR(32) NOT NULL,
K VARCHAR(32) NOT NULL,
H VARCHAR(32) NOT NULL);
CREATE TABLE S (
F VARCHAR(32) NOT NULL,
A VARCHAR(32),
C VARCHAR(32),
D VARCHAR(32),
B VARCHAR(32) NOT NULL,
G VARCHAR(32) NOT NULL,
J VARCHAR(32) NOT NULL,
K VARCHAR(32) NOT NULL,
H VARCHAR(32) NOT NULL,
PRIMARY KEY (A, C, D),
FOREIGN KEY (G) REFERENCES E2(G));",No output,Num. tables: 3; Num. not null: 10; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"A real world example for entity set E1 could be for students around the world. The student id, first name, last time could be A, C, D 
and their age is in B
The id, first name, and last name will be the primary key which is connected to S where it shows the student's contact number in F.
Enity set E2 could be the record of how student booking the SAT test. G could be the email the student
used to register to be the primary key to recognize which student it is
J, K, H could be the location, date, and time where the test was booked",No output,,
A0231933J,"select distinct continent_name,continent_code
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select distinct a1.name as app,c.name as country
from appfunctionality a1, available a2, country c
where a1.name=a2.name
and a2.country=c.code3
and a1.functionality='contact tracing'
and c.continent_name='Europe'
and a1.name in(
select distinct s1.name
from store s1, store s2
where s1.name=s2.name
and s1.os<>s2.os);","10, [('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Immuni', 'Italy, Italian Republic'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopCovid France', 'France, French Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"select c.name
from country c
group by c.name
having count(*)>1
order by c.name asc;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct c1.name
from country c1, country c2
where c1.name=c2.name
and c1.continent_code<>c2.continent_code
order by c1.name asc;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select a.name
from available a, country c
where a.country=c.code3
and c.continent_name='Oceania'
and a.name in (
select distinct s1.name
from store s1, store s2
where s1.name=s2.name
and s1.os<>s2.os)
order by a.name;","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]",,,"select c.name,count(*)
from available a,country c
where a.country=c.code3
group by c.name
order by count(*) desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name,count(*)
from available a,country c
where a.country=c.code3
group by c.name
order by count(*) desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name,count(*)
from available a,country c
where a.country=c.code3
group by c.name
order by count(*) desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name,count(*)
from available a,country c
where a.country=c.code3
group by c.name
order by count(*) desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2 (
G VARCHAR(64) not null PRIMARY KEY,
H VARCHAR(64) not null,
J VARCHAR(64) not null,
K VARCHAR(64) not null);
CREATE TABLE IF NOT EXISTS E1_S (
A VARCHAR(64) not null,
B VARCHAR(64) not null,
C VARCHAR(64) not null,
D VARCHAR(64) not null,
F VARCHAR(64) not null,
I VARCHAR(64) not null,
PRIMARY KEY (A,B,C),
FOREIGN KEY (I) REFERENCES E2(G));",No output,Num. tables: 2; Num. not null: 10; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"In a neighbourhood, every dog has its sole owner. People living in the neibourhood may have 
one or more dogs or they don't want to have dogs. We assume that in this neighbourhood, there is no same
dogs who have same name, dog breed and origin. The pets have their name, dog breed, origin and hair color. 
They are raised by people in the neighborhood. People have their identity card number, hobby, gender and job. 
In this case, the entity set E1 is dogs and entity E2 is people. Relationship set S is that the dogs are raised
by people. For the attributes A,B,C and D of E1 dogs, they are name, dog breed,origin and hair color, respectively. 
Among these, name, dog breed and origin are the candidate keys because these three attributes can determine the dog.
For the attributes G,H,J and K of entity E2 people, they are identity card number, hobby, gender and job, respectively
and identity card number is the candidate key as every people have their unique identity number. For the attribute F
for the relationship S, it is time for how long people have had the dog. Because every dog must have its sole owner, 
therefore, the participation constraint for E1 dogs is (1,1). For people, they may not have dogs or they may have one 
or more dogs, therefore, the participation constraint for people is (0,n).",No output,,
A0231936A,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT s.name AS app, av.country AS country
FROM available av, store s
WHERE av.country IN (SELECT c.code3
					 FROM country c
					 WHERE c.continent_name = 'Europe')
AND (s.os = 'iOS' AND s.os = 'Android')
AND s.name = af.name
AND s.name IN (SELECT af.name
			   FROM appfunctionality af
			   WHERE functionality = 'contact tracing');",No output,,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(c.name) > 1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT c.name
FROM country c
RIGHT JOIN (SELECT DISTINCT c2.name 
			FROM country c2) as cc
ON c.name = cc.name
WHERE c.name IS NOT NULL;","262, [('Afghanistan, Islamic Republic of',), ('Albania, Republic of',), ('Antarctica (the territory South of 60 deg S)',), (""Algeria, People's Democratic Republic of"",), ('American Samoa',), ('Andorra, Principality of',), ('Angola, Republic of',), ('Antigua and Barbuda',), ('Azerbaijan, Republic of',), ('Azerbaijan, Republic of',)]",,,"SELECT DISTINCT av.name
FROM available av, store s, country c
WHERE av.name = s.name
AND av.country IN (SELECT c.code3
 				   FROM country c
 				   WHERE c.continent_name = 'Oceania')
AND NOT EXISTS (SELECT S.name
			    FROM store s
			    WHERE av.name = s.name
				AND NOT EXISTS(SELECT av.name
							    FROM available av
							   WHERE av.name = s.name));","12, [('TCC COVID Monitor',), ('Coronavirus Australia',), ('MyAus COVID-19',), ('COVIDSafe',), ('healthdirect',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('COVID VS',), ('Awhina - informing health workers',), ('NZ COVID Tracer',)]",,,"SELECT av.country, COUNT(*)
FROM available av
GROUP BY av.country
ORDER BY COUNT(*) DESC 
LIMIT 6;","6, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14)]","SELECT av.country, COUNT(*)
FROM available av
GROUP BY av.country
ORDER BY COUNT(*) DESC 
LIMIT 7;","7, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('AUS', 8)]","SELECT av.country, COUNT(*)
FROM available av
GROUP BY av.country
ORDER BY COUNT(*) DESC 
LIMIT 8;","8, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('IDN', 8), ('AUS', 8)]","SELECT av.country, COUNT(*)
FROM available av
GROUP BY av.country
ORDER BY COUNT(*) DESC 
LIMIT 16;","16, [('USA', 65), ('IND', 52), ('MEX', 21), ('BRA', 17), ('ESP', 16), ('GBR', 14), ('AUS', 8), ('IDN', 8), ('DEU', 7), ('FRA', 7)]",,,"CREATE TABLE E1(
	A TEXT UNIQUE NOT NULL,
	B TEXT NOT NULL,
	C TEXT,
	D TEXT,
	PRIMARY KEY(C,D));
CREATE TABLE E2(
	J TEXT NOT NULL,
	K TEXT NOT NULL,
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL
	);
CREATE TABLE S(
	F TEXT NOT NULL,
	sC TEXT,
	sD TEXT,
	sG TEXT REFERENCES E2(G),
	PRIMARY KEY(sC, sD),
	FOREIGN KEY(sC, sD) REFERENCES E1(C,D)
	);
CREATE TABLE E1_S(
	F TEXT NUT NULL,
	eA TEXT UNIQUE NOT NULL
	eB TEXT NOT NULL
	eC TEXT,
	eD TEXT,
	PRIMARY KEY(eC,eD)
	FOREIGN KEY(eG) REFERENCES E2(G)
	);",No output,Num. tables: 4; Num. not null: 8; Num. foreign keys defined: 3 (CHECK CODE) ; ,,"Real world example could be game downloading. E1 could be the customers
   in app store, E2 could be games in app store, and S could be the
   downloading records.
   A could be the customer ID which is unique for each
   customer, B could be the age of the customers, C could be the name of 
   the customer, and D could be the email of the customer. Composite of
   name and email is unique for each customer.
   G could be the code of the games given by app store which is unique for
   each game listed; H could be game developer; J could be the name of the
   game, and K could be the age limit for a game.
   F could be download date.
   The participation countraint could be fullfilled as followed: each customer
   can download only one game in order to be a eligible user, while each
   game could exist without being downloaded and can be downloaded by
   multiple users.",No output,,
A0231941L,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name AS app, c.name AS country
FROM available a, country c, store s
WHERE a.country = c.code3
AND a.name = s.name
AND c.continent_name='Europe'
AND s.os='iOS'
INTERSECT
SELECT a.name AS app, c.name AS country
FROM available a, country c, store s
WHERE a.country = c.code3
AND a.name = s.name
AND c.continent_name='Europe'
AND s.os='Android';","42, [('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('Korona ™nlem', 'Turkey, Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('Coronavirus Support App (UK)', 'United Kingdom of Great Britain & Northern Ireland')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING count(c.continent_name)>1
ORDER BY c.name ASC;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT c.name
FROM country c
GROUP BY c.name, c.continent_name;","262, [('Romania',), ('Nepal, State of',), ('Libyan Arab Jamahiriya',), ('Gibraltar',), ('Angola, Republic of',), ('Oman, Sultanate of',), ('Nigeria, Federal Republic of',), ('Gabon, Gabonese Republic',), ('Greenland',), ('Montserrat',)]","Aggregation is used, CHECK CODE; ",,"SELECT a.name 
FROM available a, store s, country c
WHERE a.name=s.name
AND a.country=c.code3
AND c.continent_name='Oceania'
GROUP BY a.name
HAVING COUNT(*) = (
	SELECT COUNT(DISTINCT s.os)
	FROM store s);","8, [('Bupa Aged Care Connect',), ('MyAus COVID-19',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',)]","Aggregation is used, CHECK CODE; ",,"SELECT c.name, COUNT(DISTINCT(a.name)) AS count
FROM country c, available a
WHERE c.code3=a.country
GROUP BY c.name
ORDER BY count DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(DISTINCT(a.name)) AS count
FROM country c, available a
WHERE c.code3=a.country
GROUP BY c.name
ORDER BY count DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(DISTINCT(a.name)) AS count
FROM country c, available a
WHERE c.code3=a.country
GROUP BY c.name
ORDER BY count DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(DISTINCT(a.name)) AS count
FROM country c, available a
WHERE c.code3=a.country
GROUP BY c.name
ORDER BY count DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2(
G TEXT PRIMARY KEY,
H TEXT NOT NULL,
J TEXT NOT NULL,
K TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS E1(
A TEXT UNIQUE,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
G TEXT NOT NULL,
F TEXT NOT NULL,
PRIMARY KEY (C,D),
FOREIGN KEY (G) REFERENCES E2(G));",No output,Num. tables: 2; Num. not null: 8; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"This could be a manager-employee relationship database to record employee information and 
their manager in a company. An employee in a company must have one and only one manager,
but a manager could have no reportee or multiple reportees.
Let E1 as employee, which stores employee information. A is employee email address
that is unique and can be used to identity each employee. C is the department employee 
belongs to and D is employee number. With C and D composition, we will be able identify
an employee. B is employee address.
E2 as manager, which stroes manager inforamtion including G- managerID, H - date of birth
K - position, H - manager address.
F stores the start year when the manager start to manage the employee.",No output,,
A0231945A,"select distinct c.continent_name,c.continent_code
from country c","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]","Missing semicolon, CHECK CODE; ",,"select a.name as app, c.name as country
from available a,store s,country c,appfunctionality ff
where a.name=s.name
and a.country=c.code3
and ff.name=a.name
and c.continent_name='Europe'
and s.os='iOS'
and ff.functionality='contact tracing'
intersect 
select a.name as app, c.name as country
from available a,store s,country c,appfunctionality ff
where a.name=s.name
and a.country=c.code3
and ff.name=a.name
and c.continent_name='Europe'
and s.os='Android'
and ff.functionality='contact tracing'","10, [('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]","Missing semicolon, CHECK CODE; ",,"select c.name
from country c 
group by c.name
having count(c.continent_name)>=2","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]","Missing semicolon, CHECK CODE; ",,"select distinct c.name
from country c
except
select c.name
from country c
where not exists(
	select *
	from country cc
	where c.name=cc.name
	and c.continent_name<>cc.continent_name
)","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]","Missing semicolon, CHECK CODE; ",,"select a.name
from available a,country c
where c.continent_name='Oceania'
and a.country=c.code3
and not exists
(
	select *
	from store ss
	where not exists(
		select *
		from store s
		where s.name=a.name
		and s.os=ss.os
	)
)","8, [('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('TCC COVID Monitor',), ('MyAus COVID-19',)]","Missing semicolon, CHECK CODE; ",,"select c.name,temp.count
from(
select a.country,count(a.name) as count
from available a
group by a.country
order by count(a.name) desc
limit 6)as temp, country c
where temp.country=c.code3
order by temp.count desc","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name,temp.count
from(
select a.country,count(a.name) as count
from available a
group by a.country
order by count(a.name) desc
limit 7)as temp, country c
where temp.country=c.code3
order by temp.count desc","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","select c.name,temp.count
from(
select a.country,count(a.name) as count
from available a
group by a.country
order by count(a.name) desc
limit 8)as temp, country c
where temp.country=c.code3
order by temp.count desc","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","select c.name,temp.count
from(
select a.country,count(a.name) as count
from available a
group by a.country
order by count(a.name) desc
limit 16)as temp, country c
where temp.country=c.code3
order by temp.count desc","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7), ('Italy, Italian Republic', 7)]","Missing semicolon, CHECK CODE; ",,"create table if not exists E2(
	J varchar(64) not null,
	K varchar(64) not null,
	G varchar(64) primary key,
	H varchar(64) not null
)
create table if not exists E1_S(
	A varchar(64) not null,
	B varchar(64) not null,
	C varchar(64) not null,
	D varchar(64) not null,
	F varchar(64) not null,
	primary key(A,C,D),
	G varchar(64) not null references E2(G)
)",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"The E1 represents the set of wines. Each of wines is identified 
by its name(Parade D'Amour), appellation(Bordeaux) and vintage(1980).
Thus, (A, B D) is (name,appellation, vintage). C represents the degree of alcohol.
The primary key for E1 is (A,C,D)
E2 represents the brand of wine（like Martell). attribute G is the name of 
the brand, because we can indentity the brand by its name. While J, K H represnts
the start time of the brand, the name of Legal Representative, the birthplace of the brand.
Because these three attributes are important as well.
R represents a kind of affiliation. Each wine should belong to one specific brand.
While each brand may contain multiple wines and some brands do not have any wines
because the brand do not produce wines, it produces xo，whiskey etc.
and the attribut of R, F represents whether this wine is the main product of this brand.
If this wine is the brand main product, then F is 'is main product', otherwise, F is 'is not main product'.",No output,"Illegal fullwidth character detected ['ff0c', 'ff08', 'ff0c']; ",
A0231947Y,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT av.name as app, c.name as country
FROM available av, store s1, store s2, country c
WHERE av.name = s1.name
AND av.name = s2.name
AND s1.os = 'Android' 
AND s2.os = 'iOS'
AND av.country = c.code3
AND c.continent_name = 'Europe';","42, [('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('????????? ???? ???????????', 'Russian Federation'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('CORONAVIRUS - ???????????', 'Ukraine'), ('Luscii', 'Netherlands, Kingdom of the'), ('COVID Radar', 'Netherlands, Kingdom of the')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING count(*) >= 2
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT c1.name FROM country c1
WHERE c1.name >= ALL (SELECT c2.name FROM country c2);","1, [('Zimbabwe, Republic of',)]",,,"SELECT DISTINCT av.name
FROM available av, country c, store s1, store s2
where c.continent_code = 'OC'
AND av.country = c.code3
AND av.name = s1.name
AND av.name = s2.name
AND s1.os = 'Android' 
AND s2.os = 'iOS';","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]",,,"SELECT c.name, count(av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count(*) DESC LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, count(av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count(*) DESC LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, count(av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count(*) DESC LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, count(av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count(*) DESC LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E1(
A VARCHAR(32) UNIQUE,
B VARCHAR(32) NOT NULL,
C VARCHAR(32),
D VARCHAR(32),
PRIMARY KEY(C, D));
CREATE TABLE E2(
J VARCHAR(32) NOT NULL,
K VARCHAR(32) NOT NULL,
G VARCHAR(32) PRIMARY KEY,
H VARCHAR(32) NOT NULL);
CREATE TABLE S(
E1A VARCHAR(32),
E1B VARCHAR(32) NOT NULL,
E1C VARCHAR(32),
E1D VARCHAR(32),
FOREIGN KEY(E1C, E1D) REFERENCES E1(C, D)
E2G VARCHAR(32) PRIMARY KEY,
FOREIGN KEY(E2G) REFERENCES E2(G))
FOREIGN KEY (E2J, E2K, E2G, E2H) REFERENCE E2(J, K, H);",No output,Num. tables: 3; Num. not null: 5; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"A, B, C, and D are attributes to Entity E1.
J, K, G, H are attributes to Entity E2. G is primary key to E2, which means only one unique to E2. 
Only one-to-one relationship between E1 and S, and there are many-to-many 
relationship between E2 and S. We can know the keys of the participating entities 
from S, which is our relationship sets.",No output,,
A0231952H,"select distinct c.continent_name, c.continent_code
from country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select distinct a.name as app, c.name as country
from country c, available a, store s1, store s2 
where a.country=c.code3 and c.continent_name='Europe' 
and s1.name=a.name and s2.name=s1.name and s2.name=a.name
and s1.os='iOS' and s2.os='Android'
order by app;","42, [('???', 'Ukraine'), ('????????? ???? ???????????', 'Russian Federation'), ('?????????? ??????????', 'Russian Federation'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Asistencia COVID-19', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('CONFINAPP', 'Spain, Kingdom of'), ('Corona-Datenspende', 'Germany, Federal Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Corona Check Screening', 'Germany, Federal Republic of')]",,,"select c.name
from country c
group by c.name
having count(c.continent_name)>1
order by c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct c1.name
from country c1,country c2
where c1.name=c2.name and c1.continent_name <> c2.continent_name
order by c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select a.name
from country c, store s, available a
where a.country=c.code3 
and c.continent_name='Oceania'  
and s.name=a.name
group by a.name
having count(s.os) = (select count(distinct s.os)
						 from store s);","8, [('Bupa Aged Care Connect',), ('MyAus COVID-19',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',)]","Aggregation is used, CHECK CODE; ",,"SELECT loser.count, loser.name 
FROM (select count(a.name) as count, c.name 
from available a, country c
where a.country=c.code3  
group by c.name) as loser
LEFT OUTER JOIN (select count(a.name) as count, c.name 
from available a, country c
where a.country=c.code3  
group by c.name) as winner
ON winner.name<>loser.name
AND winner.count>loser.count
GROUP BY loser.name, loser.count 
HAVING COUNT(loser.name) < 6
ORDER BY loser.count desc;","6, [(65, 'United States of America'), (52, 'India, Republic of'), (21, 'Mexico, United Mexican States'), (17, 'Brazil, Federative Republic of'), (16, 'Spain, Kingdom of'), (14, 'United Kingdom of Great Britain & Northern Ireland')]","SELECT loser.count, loser.name 
FROM (select count(a.name) as count, c.name 
from available a, country c
where a.country=c.code3  
group by c.name) as loser
LEFT OUTER JOIN (select count(a.name) as count, c.name 
from available a, country c
where a.country=c.code3  
group by c.name) as winner
ON winner.name<>loser.name
AND winner.count>loser.count
GROUP BY loser.name, loser.count 
HAVING COUNT(loser.name) < 7
ORDER BY loser.count desc;","7, [(65, 'United States of America'), (52, 'India, Republic of'), (21, 'Mexico, United Mexican States'), (17, 'Brazil, Federative Republic of'), (16, 'Spain, Kingdom of'), (14, 'United Kingdom of Great Britain & Northern Ireland'), (10, 'Russian Federation')]","SELECT loser.count, loser.name 
FROM (select count(a.name) as count, c.name 
from available a, country c
where a.country=c.code3  
group by c.name) as loser
LEFT OUTER JOIN (select count(a.name) as count, c.name 
from available a, country c
where a.country=c.code3  
group by c.name) as winner
ON winner.name<>loser.name
AND winner.count>loser.count
GROUP BY loser.name, loser.count 
HAVING COUNT(loser.name) < 8
ORDER BY loser.count desc;","9, [(65, 'United States of America'), (52, 'India, Republic of'), (21, 'Mexico, United Mexican States'), (17, 'Brazil, Federative Republic of'), (16, 'Spain, Kingdom of'), (14, 'United Kingdom of Great Britain & Northern Ireland'), (10, 'Russian Federation'), (8, 'Indonesia, Republic of'), (8, 'Australia, Commonwealth of')]","SELECT loser.count, loser.name 
FROM (select count(a.name) as count, c.name 
from available a, country c
where a.country=c.code3  
group by c.name) as loser
LEFT OUTER JOIN (select count(a.name) as count, c.name 
from available a, country c
where a.country=c.code3  
group by c.name) as winner
ON winner.name<>loser.name
AND winner.count>loser.count
GROUP BY loser.name, loser.count 
HAVING COUNT(loser.name) < 16
ORDER BY loser.count desc;","16, [(65, 'United States of America'), (52, 'India, Republic of'), (21, 'Mexico, United Mexican States'), (17, 'Brazil, Federative Republic of'), (16, 'Spain, Kingdom of'), (14, 'United Kingdom of Great Britain & Northern Ireland'), (10, 'Russian Federation'), (8, 'Australia, Commonwealth of'), (8, 'Indonesia, Republic of'), (7, 'Switzerland, Swiss Confederation')]",,,"CREATE TABLE IF NOT EXISTS E1 ( 
A VARCHAR(64) UNIQUE NOT NULl,
B VARCHAR(64) NOT NULL,
C VARCHAR(64) NOT NULL,
D VARCHAR(64) NOT NULL,
PRIMARY KEY(C,D)
) ;
CREATE TABLE IF NOT EXISTS E2( 
J VARCHAR(64) NOT NULL,
K VARCHAR(64) NOT NULL,
G VARCHAR(64) PRIMARY KEY,
H VARCHAR(64) NOT NULL
);
CREATE TABLE IF NOT EXISTS S (
C VARCHAR(64),
D VARCHAR(64),
F VARCHAR(64) NOT NULL,
G VARCHAR(64),
FOREIGN KEY (C,D) REFERENCES E1(C,D),
FOREIGN KEY (G) REFERENCES E2(G),
PRIMARY KEY(C,D,G)
);",No output,Num. tables: 3; Num. not null: 8; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"A company want to send advertisement of its product to its consumer, in order to attract consumer to buy its products.
E1 is conusmer of a company. A is consumer's email adress, which must be unique, a candidate key. B is consumers's name. C is consumers' contact number and a id number for company to lable each consumer. C and D are used to identify a consumer.
E2 is products of the company. G is the id number of a product, which is set by the company to identify each product. J is the name of the products. K is the function of the products. H is the profit of the products.
S is the relationship between consumers and products. F is the result of whether the consumer response to the advertisemen of the product. Each consumer will only have one result. Therefore, the relationship is a one-to-one relationship from E1 to S.
However, a product may correspond to many results from different consumers. The relationship is a many-to-many relationship from E2 to S.",No output,,
A0231953E,"select distinct continent_name, continent_code
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select distinct ap.name as app, c.name as country 
 from app ap, available av, country c, store s1, store s2
 where ap.name = av.name
 and c.code3 = av.country
 and c.continent_name = 'Europe'
 and c.code3 = av.country
 and s1.name = ap.name
 and s2.name = ap.name
 and s1.os = 'iOS'
 and s2.os = 'Android';","42, [('Korona ™nlem', 'Turkey, Republic of'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Karantinas', 'Lithuania, Republic of'), ('Covidom Patient', 'France, French Republic'), ('GVA Responde', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('?????????? ??????????', 'Russian Federation')]",,,"select c.name
from country c
group by c.name
having count(distinct c.continent_name)>1;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct c1.name
from country c1, country c2
where c1.name = c2.name
and c1.continent_name <> c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select ap.name
from app ap, available av, country c
where ap.name = av.name
and av.country = c.code3
and c.continent_name = 'Oceania'
and not exists(
	select s1.os
	from store s1
	where s1.name <> ap.name);","0, []",,,"select c.name, count(distinct ap.name)
from country c, available av, app ap
where c.code3 = av.country
and av.name = ap.name
group by c.name
order by count(distinct ap.name) desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]","select c.name, count(distinct ap.name)
from country c, available av, app ap
where c.code3 = av.country
and av.name = ap.name
group by c.name
order by count(distinct ap.name) desc
limit 17;","17, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7), ('Germany, Federal Republic of', 7)]","select c.name, count(distinct ap.name)
from country c, available av, app ap
where c.code3 = av.country
and av.name = ap.name
group by c.name
order by count(distinct ap.name) desc
limit 18;","18, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7), ('France, French Republic', 7)]","select c.name, count(distinct ap.name)
from country c, available av, app ap
where c.code3 = av.country
and av.name = ap.name
group by c.name
order by count(distinct ap.name) desc
limit 116;","87, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Germany, Federal Republic of', 7), ('Argentina, Argentine Republic', 7)]",,,"create table E2(
G TEXT primary key,
H TEXT not null, 
J TEXT not null,
K TEXT not null);
create table E1(
A TEXT not null,
B TEXT not null,
C TEXT not null,
D TEXT not null,
F TEXT not null,
G TExT not null,
primary key(A,C,D),
foreign key (G) references E2(G));",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"Table E1 could be the entity set for dancing clubs in China. 
Attibutes A, B, C, D respectively represent the name of each club, the slogan
of each club, the type of dance they are teaching and the founder of each club. 
With the club name, the type of dance and the founder, we could distinguish 
different dancing clubs.
Table E2 could be the entity set for provinces in China.
Attributes G, H, J, K respectively represent the name of each province, the region
it belongs to, the governor of each province and the vice-governor of each province. 
The relationship set shows which province each dancing club locates in.
Attribute F represents the exact location of the each dancing club in each province.",No output,,
A0231956Y,"select continent_name, continent_code
from country;","262, [('Asia', 'AS'), ('Europe', 'EU'), ('Antarctica', 'AN'), ('Africa', 'AF'), ('Oceania', 'OC'), ('Europe', 'EU'), ('Africa', 'AF'), ('North America', 'NA'), ('Europe', 'EU'), ('Asia', 'AS')]",,,"select af.name as app, c.name as country 
from appfunctionality af, available av, country c, store s1, store s2
where af.functionality ='contact tracing'
	and af.name=av.name
	and af.name=s1.name
	and af.name=s2.name
	and av.country=c.code3
	and c.continent_code='EU'
	and s1.os='Android' and s2.os='iOS';","10, [('COVID-19.eus', 'Spain, Kingdom of'), ('Rakning C-19', 'Iceland, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Immuni', 'Italy, Italian Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('ProteGO Safe', 'Poland, Republic of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopCovid France', 'France, French Republic')]",,,"select name
from country
group by name
having count(*)>1
order by name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct c1.name
from country c1, country c2
where c1.name=c2.name
and c1.continent_code<>c2.continent_code
order by name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select av.name,c.continent_code,s.os
from available av, country c, store s
where av.country=c.code3
and c.continent_code='OC'
and av.name=s.name
and not exists(
	select *
	from store s2
	where av.name=s2.name
	and not exists(
		select *
		from store s2
		where av.name=s2.name
		and s.os=s2.os
	)
)
order by name, os;","20, [('#BeatCovid19Now', 'OC', 'Android'), ('#BeatCovid19Now', 'OC', 'iOS'), ('Awhina - informing health workers', 'OC', 'Android'), ('Bupa Aged Care Connect', 'OC', 'Android'), ('Bupa Aged Care Connect', 'OC', 'iOS'), ('Coronavirus Australia', 'OC', 'Android'), ('Coronavirus Australia', 'OC', 'iOS'), ('Covid-19  Armenia', 'OC', 'iOS'), ('COVID VS', 'OC', 'iOS'), ('CovidCare - Symptom monitor', 'OC', 'iOS')]",,,"select c.name,count(*)
from available av, country c
where av.country=c.code3
group by c.name
order by count desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]","select c.name,count(*)
from available av, country c
where av.country=c.code3
group by c.name
order by count desc
limit 17;","17, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Germany, Federal Republic of', 7)]","select c.name,count(*)
from available av, country c
where av.country=c.code3
group by c.name
order by count desc
limit 18;","18, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Germany, Federal Republic of', 7)]","select c.name,count(*)
from available av, country c
where av.country=c.code3
group by c.name
order by count desc
limit 116;","87, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE E2(
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL,
	J TEXT NOT NULL,
	K TEXT NOT NULL
);
CREATE TABLE E1(
	A TEXT UNIQUE NOT NULL,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	F TEXT NOT NULL,
	Z TEXT NOT NULL 
		REFERENCES E2(G),
	PRIMARY KEY (C,D)
);",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"Table E2 can be the project POC or lead table in an imaginary company with attributes:
- first name
- last name
- line of business
- email (would correspond to G and should be unique)
Table E1 can be the business analysts table with attributes
- first name (part of the primary composite key and can be C/D in the diagram)
- last name (part of primary composite key and can be C/D in the diagram)
- email (would correspond to A and should be unique)
- line of business
- manager (would correspond to F)
In table E1, it is assumed that the composite of first name, last name is unique. Likewise as per the table creation integrity
checks provided the attribute manager in table E1 cannot be left blank since a (1,1) participation constraint has been imposed.",No output,,
A0231957X,"SELECT continent_name, continent_code
FROM country;","262, [('Asia', 'AS'), ('Europe', 'EU'), ('Antarctica', 'AN'), ('Africa', 'AF'), ('Oceania', 'OC'), ('Europe', 'EU'), ('Africa', 'AF'), ('North America', 'NA'), ('Europe', 'EU'), ('Asia', 'AS')]",,,"SELECT ap.name AS app,c.name AS country
FROM app ap, available av, store s, appfunctionality af,
country c
WHERE ap.name=av.name
AND ap.name=s.name
AND ap.name=af.name
AND av.country=c.code3
AND af.functionality='contact tracing'
AND c.continent_name='Europe'
AND ap.name in (select s.name
			FROM store s
		    where s.os='iOS'
			intersect
			select s.name
			FROM store s
		    where s.os='Android')
			group by ap.name,c.name;","10, [('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Immuni', 'Italy, Italian Republic'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopCovid France', 'France, French Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"SELECT c.name
FROM country c
group by c.name
having COUNT(c.continent_name) >1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,,No output,,,"SELECT ap.name
FROM app ap, available av, store s,
country c
WHERE ap.name=av.name
AND ap.name=s.name
AND av.country=c.code3
AND c.continent_name='Oceania'
AND ap.name = any (select s1.name
			FROM store s1
		    where s1.os='iOS'
			intersect
			select s2.name
			FROM store s2
		    where s2.os='Android');","16, [('TCC COVID Monitor',), ('TCC COVID Monitor',), ('Coronavirus Australia',), ('Coronavirus Australia',), ('MyAus COVID-19',), ('MyAus COVID-19',), ('COVIDSafe',), ('COVIDSafe',), ('healthdirect',), ('healthdirect',)]",,,"SELECT c.name,COUNT(ap.name)
FROM app ap, available av, store s,
country c
WHERE ap.name=av.name
AND ap.name=s.name
AND av.country=c.code3
GROUP BY c.name
ORDER BY COUNT(ap.name) DESC
LIMIT 6;","6, [('United States of America', 75), ('India, Republic of', 62), ('Mexico, United Mexican States', 29), ('Brazil, Federative Republic of', 24), ('Spain, Kingdom of', 24), ('United Kingdom of Great Britain & Northern Ireland', 18)]","SELECT c.name,COUNT(ap.name)
FROM app ap, available av, store s,
country c
WHERE ap.name=av.name
AND ap.name=s.name
AND av.country=c.code3
GROUP BY c.name
ORDER BY COUNT(ap.name) DESC
LIMIT 7;","7, [('United States of America', 75), ('India, Republic of', 62), ('Mexico, United Mexican States', 29), ('Spain, Kingdom of', 24), ('Brazil, Federative Republic of', 24), ('United Kingdom of Great Britain & Northern Ireland', 18), ('Australia, Commonwealth of', 15)]","SELECT c.name,COUNT(ap.name)
FROM app ap, available av, store s,
country c
WHERE ap.name=av.name
AND ap.name=s.name
AND av.country=c.code3
GROUP BY c.name
ORDER BY COUNT(ap.name) DESC
LIMIT 8;","8, [('United States of America', 75), ('India, Republic of', 62), ('Mexico, United Mexican States', 29), ('Spain, Kingdom of', 24), ('Brazil, Federative Republic of', 24), ('United Kingdom of Great Britain & Northern Ireland', 18), ('Australia, Commonwealth of', 15), ('Russian Federation', 14)]","SELECT c.name,COUNT(ap.name)
FROM app ap, available av, store s,
country c
WHERE ap.name=av.name
AND ap.name=s.name
AND av.country=c.code3
GROUP BY c.name
ORDER BY COUNT(ap.name) DESC
LIMIT 16;","16, [('United States of America', 75), ('India, Republic of', 62), ('Mexico, United Mexican States', 29), ('Spain, Kingdom of', 24), ('Brazil, Federative Republic of', 24), ('United Kingdom of Great Britain & Northern Ireland', 18), ('Australia, Commonwealth of', 15), ('Russian Federation', 14), ('Indonesia, Republic of', 13), ('Germany, Federal Republic of', 11)]",,,"CREATE TABLE IF NOT EXISTS E2(
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL,
	K TEXT NOT NULL,
	J TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS E1(
	A TEXT NOT NULL,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	PRIMARY KEY (C,D),
	FOREIGN KEY (A) REFERENCES E2(G));
CREATE TABLE IF NOT EXISTS S(
	F TEXT NOT NULL,
	G TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	FOREIGN KEY (G) REFERENCES E2(G),
	FOREIGN KEY (C,D) REFERENCES E1(C,D)
);",No output,Num. tables: 3; Num. not null: 11; Num. foreign keys defined: 3 (CHECK CODE) ; ,,"this is the database of political participants
E2 is the table of jobs in government,
G means the job title, 
J,K,H is features of one job, like work period,salary,duty
the key is G.
E1 is tha table of participants,
C,D is his first name and last name,
A is his job title,
B can be his address,
the combination of first name and last name is the key,
S is their relationship table.
Two tables' relationship is that 
one participants can have multiple job title or zero
but one job title only give one participant
F can be when participants get the job title",No output,,
A0231958W,"select distinct c.continent_name, c.continent_code
from country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select distinct a.name as app, c.name as country
from app a, country c, store s, available av
where c.continent_name = 'Europe'
and s.os in ('iOS','Android')
and av.country = c.code3;","12245, [('JamCOVID19', 'Germany, Federal Republic of'), ('COVI', 'France, French Republic'), ('JamCOVID19', 'Slovakia (Slovak Republic)'), ('Korona ™nlem', 'Macedonia, The Former Yugoslav Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('COVID-19 Tam', 'Turkey, Republic of'), ('Osler ePortfolio', 'Bulgaria, Republic of'), ('Solidarity \x07 ??????????', 'Turkey, Republic of'), ('COVAPP', 'Czech Republic'), ('CG Covid-19 ePass', 'Slovakia (Slovak Republic)')]",,,"select c.name
from country c, available av, app a
where a.name = av.name and av.country = c.code3
group by a.name, c.name
having count(av.country) not in (0,1)
order by c.name asc;","13, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Russian Federation',), ('Russian Federation',), ('Russian Federation',), ('Russian Federation',)]",,,"select c.name
from country c, available av, app a
where a.name = av.name and av.country = c.code3
group by a.name, c.name
having count(av.country) not in (0,1)
order by c.name asc;","13, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Russian Federation',), ('Russian Federation',), ('Russian Federation',), ('Russian Federation',)]","Aggregation is used, CHECK CODE; ",,"select distinct a.name
from app a
where exists(
 	select c.continent_name
 	from country c, available av, app a, store s
 	where c.code3 = av.country and c.continent_name = 'Oceania'
 	and s.os in ('iOS','Android'));","395, [('Lynx-Virtual',), ('AyudaCOVID',), ('HowWeFeel',), ('U Informa COVID-19',), ('MorChana - ??????',), ('COVID-19 West Bengal Government',), ('Quidate',), ('SOS CORONA',), ('Apple COVID-19',), ('patientMpower for Covid 19 USA',)]",,,"select c.name, count(a.name)
from country c, app a, available av
where av.country = c.code3 and av.name = a.name
group by c.name
order by count(a.name) desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count(a.name)
from country c, app a, available av
where av.country = c.code3 and av.name = a.name
group by c.name
order by count(a.name) desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name, count(a.name)
from country c, app a, available av
where av.country = c.code3 and av.name = a.name
group by c.name
order by count(a.name) desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name, count(a.name)
from country c, app a, available av
where av.country = c.code3 and av.name = a.name
group by c.name
order by count(a.name) desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,,No output,Num. tables: 0; Num. not null: 0 (CHECK CODE) ; Num. foreign keys defined: 0; ,,,No output,,
A0231971E,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT av.name AS app, c.name AS country
FROM available av, country c, store s1, store s2
WHERE av.country = c.code3
AND c.continent_name = 'Europe'
AND av.name = s1.name
AND av.name = s2.name
AND s1.os = 'iOS' 
AND s2.os = 'Android';","42, [('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('????????? ???? ???????????', 'Russian Federation'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('CORONAVIRUS - ???????????', 'Ukraine'), ('Luscii', 'Netherlands, Kingdom of the'), ('COVID Radar', 'Netherlands, Kingdom of the')]",,,"SELECT c.name 
FROM country c
GROUP BY c.name
HAVING COUNT(*)>1
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT c.name 
FROM country c
GROUP BY c.name
HAVING COUNT(*)>1
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Aggregation is used, CHECK CODE; ",,"SELECT av.name 
FROM available av
WHERE NOT EXISTS(
	SELECT * 
	FROM country c
	WHERE c.continent_name = 'Oceania' AND NOT EXISTS(
		SELECT *
		FROM store s
		WHERE s.name = av.name AND av.country = c.code3));","0, []",,,"SELECT c.name, count(*) AS count
FROM available av, country c
WHERE av.country = c.code3
GROUP BY av.country, c.name
ORDER BY count DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, count(*) AS count
FROM available av, country c
WHERE av.country = c.code3
GROUP BY av.country, c.name
ORDER BY count DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, count(*) AS count
FROM available av, country c
WHERE av.country = c.code3
GROUP BY av.country, c.name
ORDER BY count DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, count(*) AS count
FROM available av, country c
WHERE av.country = c.code3
GROUP BY av.country, c.name
ORDER BY count DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('France, French Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1_S(
A VARCHAR(64) NOT NULL,
B VARCHAR(64) NOT NULL,
C VARCHAR(64) NOT NULL,
D VARCHAR(64) NOT NULL,
F VARCHAR(64) NOT NULL,
PRIMARY KEY(A,C,D)
FOREIGN KEY(E2G) REFERENCES E2(G));
CREATE TABLE IF NOT EXISTS E2(
J VARCHAR(64) NOT NULL,
K VARCHAR(64) NOT NULL,
G VARCHAR(64) NOT NULL,
H VARCHAR(64) NOT NULL,
PRIMARY KEY(G));",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"This ER diagram can be used to describe the relationship between government head 
and parliament members. E1 is composed of several government department. E2 is the 
set of parliament member. R is the head of each government department. 
A,B,C,D are department name, department function, department code and candidancy. 
F is the job description of the parliament head. G is the name of the person. 
J, K, H are the marriage status, education and sex of parliament members. 
Each governmetn department must have a head and the head can be in parliament, 
but parliament can have members not from any department.",No output,,
A0231973B,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name AS app, c.name AS country
FROM app a, available av JOIN country c ON av.country = c.code3
WHERE a.name = av.name
AND c.continent_name = 'Europe'
AND EXISTS(
	SELECT a1.name
	FROM app a1, store s1, store s2
	WHERE a1.name = a.name
	AND a1.name = s1.name
	AND a1.name = s2.name
	AND s1.store = 'GooglePlay'
	AND s2.store = 'AppStore')
ORDER BY c.name;","42, [('Stopp Corona', 'Austria, Republic of'), ('ViruSafe', 'Bulgaria, Republic of'), ('Covidom Patient', 'France, French Republic'), ('StopCovid France', 'France, French Republic'), ('COVID AP-HM', 'France, French Republic'), ('Terr-eSant‚ eCovid', 'France, French Republic'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Corona-Datenspende', 'Germany, Federal Republic of'), ('COVapp', 'Germany, Federal Republic of'), ('Corona Check Screening', 'Germany, Federal Republic of')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(c.name)>1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_name <> c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT a.name
FROM app a, available av JOIN country c ON av.country = c.code3
WHERE a.name = av.name
AND c.continent_name = 'Oceania'
AND NOT EXISTS (
	SELECT s.os
	FROM store s
	WHERE NOT EXISTS (
		SELECT a1.name
		FROM app a1, store s1
		WHERE a1.name = s1.name
		AND s1.name = s.name));","12, [('TCC COVID Monitor',), ('healthdirect',), ('CovidCare - Symptom monitor',), ('Coronavirus Australia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('NZ COVID Tracer',), ('Covid-19  Armenia',)]",,,"SELECT c.name, COUNT(DISTINCT a.name)
FROM app a, available av JOIN country c ON av.country = c.code3
WHERE a.name = av.name
GROUP BY c.name
ORDER BY COUNT(DISTINCT a.name) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(DISTINCT a.name)
FROM app a, available av JOIN country c ON av.country = c.code3
WHERE a.name = av.name
GROUP BY c.name
ORDER BY COUNT(DISTINCT a.name) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(DISTINCT a.name)
FROM app a, available av JOIN country c ON av.country = c.code3
WHERE a.name = av.name
GROUP BY c.name
ORDER BY COUNT(DISTINCT a.name) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(DISTINCT a.name)
FROM app a, available av JOIN country c ON av.country = c.code3
WHERE a.name = av.name
GROUP BY c.name
ORDER BY COUNT(DISTINCT a.name) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2 (
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL,
	J TEXT NOT NULL,
	K TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS E1_S (
	A TEXT,
	B TEXT NOT NULL,
	C TEXT,
	D TEXT,
	F TEXT NOT NULL,
	G TEXT NOT NULL,
	PRIMARY KEY(A, C, D),
	FOREIGN KEY(G) REFERENCES E2(G));",No output,Num. tables: 2; Num. not null: 6; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"We can think of a database which would list the buildings in Singapore and the architect
who built these buildings. Please note that in my understanding, one and only one architect is 
responsible for a construction site. If this is not the case in real life, I assume 
the architects in the table to be the 'chief architects' or 'chief project developer' for each building (so that 1 and exactly 1 architect is affected to a building - conversely, an architect can conceive a large number of buildings throughout his life).
We would then have the following entities, relationship and attributes:
- E1: 'architect'
- E2: 'building'
- S: 'conceived'
The attributes of 'architect' would be:
- A: 'license_id_number', the architect's license identification number 
as the job of being an architect is a regulated profession
- B: 'birth_date'
- C: 'first_name'
- D: 'last_name'
(A, B, C) is a correct primary key because we can perfectly identify (without ambiguity) an architect
(in Singapore, since the license numbers must not be shared globally) given these three attributes.
The attribute of 'conceived' would be:
- F: 'conception_date'
The attributes of 'building' would be:
- G: 'building permit number', which is a unique number used legally 
and would perfectly identify the building referred to. G is then an adequate primary key
- H: 'geographic_coordinates', which precisely identifies the location of the building. 
I saw on Google maps (https://support.google.com/maps/answer/18539?hl=fr&co=GENIE.Platform%3DAndroid)
that this is useful to precisely identify an address 
- J: 'address' including the street number and street name
- K: 'height' with the height of the building",No output,,
A0231974Y,"Select distinct c.continent_name, c.continent_code
From country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"Select distinct a.name AS app, c.name AS country
From app a, country c, store s, available av
WHERE s.os IN ('iOS', 'Android')
AND av.name = a.name
AND s.name = a.name
AND av.country = c.code3
AND c.continent_code = 'EU';","102, [('Coronapp-HUG', 'Switzerland, Swiss Confederation'), ('COVID AP-HM', 'France, French Republic'), ('eRouska - part of smart quarantine', 'Czech Republic'), ('Babylon: 24/7 Healthcare', 'United Kingdom of Great Britain & Northern Ireland'), ('LazioDrCovid', 'Italy, Italian Republic'), ('???', 'Ukraine'), ('CovTracer', 'Cyprus, Republic of'), ('Corona Check Screening', 'Germany, Federal Republic of'), ('Hayat Eve Sigar', 'Turkey, Republic of'), ('Moje ezdravie', 'Slovakia (Slovak Republic)')]",,,"Select distinct c.name
From country c
Group by c.name
HAVING count(c.number) > 1
Order by c.name ASC;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,,No output,,,"Select distinct a.name
From app a, country c, available av, store s
WHERE a.name = av.name
AND av.country = c.code3
AND s.name = a.name
AND s.os IN ('iOS', 'Android')
AND c.continent_code = 'OC';","12, [('Bupa Aged Care Connect',), ('Covid-19  Armenia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',)]",,,"Select c.name, count(*) AS count
From country c, app a, available av
WHERE c.code3 = av. country
AND av.name = a.name
Group by c.name
Order by count(*) DESC
Limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","Select c.name, count(*) AS count
From country c, app a, available av
WHERE c.code3 = av. country
AND av.name = a.name
Group by c.name
Order by count(*) DESC
Limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","Select c.name, count(*) AS count
From country c, app a, available av
WHERE c.code3 = av. country
AND av.name = a.name
Group by c.name
Order by count(*) DESC
Limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","Select c.name, count(*) AS count
From country c, app a, available av
WHERE c.code3 = av. country
AND av.name = a.name
Group by c.name
Order by count(*) DESC
Limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1(
	A VARCHAR(64) NOT NULL,
	B VARCHAR(64) NOT NULL,
	C VARCHAR(64) NOT NULL,
	D VARCHAR(64) NOT NULL,
	F VARCHAR(64) NOT NULL,
	PRIMARY KEY (A,C,D)
);
CREATE TABLE IF NOT EXISTS S(
	A VARCHAR(64) NOT NULL REFERENCES E1(A),
	C VARCHAR(64) NOT NULL REFERENCES E1(C),
	D VARCHAR(64) NOT NULL REFERENCES E1(D),
	G VARCHAR(64) NOT NULL REFERENCES E2(G),
	F VARCHAR(64) NOT NULL
);
CREATE TABLE IF NOT EXISTS E2(
	G VARCHAR(64) NOT NULL PRIMARY KEY,
	H VARCHAR(64) NOT NULL,
	J VARCHAR(64) NOT NULL,
	K VARCHAR(64) NOT NULL
);",No output,Num. tables: 3; Num. not null: 14; Num. foreign keys defined: 4 (CHECK CODE) ; ,,"'It could be a student-mentorship problem. E1 will be students sets. One student are required to find a mentor. S represent the mentoring. E2 would be the mentors sets. Each mentor/academic faculty could have no student to mentor, or have multiple students. 
The attrubutes of E1
A: student email
B: student faculty
C: student last_name
D: student first_name
The attrubutes of S
F: the proposed mentoring duration
The attrubutes of E2
G: faculty number
H: school address
J: office hour
K: rating from previou student",No output,,
A0231975X,"Select Distinct continent_name, continent_code
from country","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]","Missing semicolon, CHECK CODE; ",,"Select ap.name as app, c.name as country
from app ap, available av, country c, store s, appfunctionality af
where ap.name = s.name
and ap.name = av.name
and ap.name = af.name
and c.code3 = av.country
and af.functionality = 'contact tracing'
and c.continent_code = 'EU'
and (s.os = 'iOS' or s.os ='Android');","36, [('CovTracer', 'Cyprus, Republic of'), ('StopCOVID NI', 'United Kingdom of Great Britain & Northern Ireland'), ('geoHealthApp Covid19 Tracker', 'Switzerland, Swiss Confederation'), ('COVID-19.eus', 'Spain, Kingdom of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Rakning C-19', 'Iceland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Radar Covid', 'Spain, Kingdom of')]",,,"Select c.name
from country c
group by c.name
having count(*) > 1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"Select distinct c1.name
from country c1 left outer join country c2 on c1.name =c2.name
where c1.continent_name <> c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"Select distinct ap.name
from app ap, available av, country c, store s
where ap.name = s.name
and ap.name = av.name
and c.code3 = av.country
and c.continent_code = 'OC'
and s.os = any(
Select distinct os
from store);","12, [('Bupa Aged Care Connect',), ('Covid-19  Armenia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',)]",,,"Select c.name, count(distinct ap.name) as count
from app ap, available av, country c
where ap.name = av.name
and c.code3 = av.country
group by c.name 
order by count desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","Select c.name, count(distinct ap.name) as count
from app ap, available av, country c
where ap.name = av.name
and c.code3 = av.country
group by c.name 
order by count desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","Select c.name, count(distinct ap.name) as count
from app ap, available av, country c
where ap.name = av.name
and c.code3 = av.country
group by c.name 
order by count desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","Select c.name, count(distinct ap.name) as count
from app ap, available av, country c
where ap.name = av.name
and c.code3 = av.country
group by c.name 
order by count desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE E1(
A VARCHAR(64) unique,
B VARCHAR(64) not null,
C VARCHAR(64) not null,
D VARCHAR(64) not null,
PRIMARY KEY (C,D));
CREATE TABLE E1(
J VARCHAR(64) not null,
K VARCHAR(64) not null,
G VARCHAR(64) PRIMARY KEY,
H VARCHAR(64) not null);
CREATE TABLE S(
F VARCHAR(64)
A REFERENCES E1(A)
F REFERENCES E2(G));",No output,Num. tables: 3; Num. not null: 6; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"The E1 is employee database. E2 is manager. S is company.
A is employee's identity card number. B is his or her department. C is employee's first name. D is employee's last name.
F is company's name.
J is manager's age. K is manager's department. G is manager's ID. H is manager's gender.
Candidate keys of E1 is A.  Candidate keys of E2 is G.
Participation constraints are one manager can only enter one company, and one employee can enter 0 to infinite companies.",No output,,
A0231979N,"SELECT DISTINCT continent_name, continent_code FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT  DISTINCT appli.name, c.name FROM appfunctionality appfunc JOIN app appli ON appfunc.name = appli.name JOIN available av ON av.name = appli.name  JOIN country  c ON av.country = c.code3 JOIN store str on str.name = appli.name																	 
WHERE continent_code = 'EU' AND functionality = 'contact tracing' AND os = 'iOS'
INTERSECT
SELECT  DISTINCT appli.name, c.name FROM appfunctionality appfunc JOIN app appli ON appfunc.name = appli.name JOIN available av ON av.name = appli.name  JOIN country  c ON av.country = c.code3 JOIN store str on str.name = appli.name																		 
WHERE continent_code = 'EU' AND functionality = 'contact tracing' AND os = 'Android'","10, [('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]","Missing semicolon, CHECK CODE; ",,"SELECT c.name FROM country c
GROUP BY c.name
HAVING COUNT(*)>1
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c.name FROM country c
WHERE EXISTS (SELECT * FROM country c2 WHERE c2.continent_code != c.continent_code AND c2.name = c.name)
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT  DISTINCT appli.name FROM appfunctionality appfunc JOIN app appli ON appfunc.name = appli.name JOIN available av ON av.name = appli.name  JOIN country  c ON av.country = c.code3 JOIN store str on str.name = appli.name																	 
WHERE c.continent_name = 'Oceania'  AND os = 'iOS'
INTERSECT
SELECT  DISTINCT appli.name FROM appfunctionality appfunc JOIN app appli ON appfunc.name = appli.name JOIN available av ON av.name = appli.name  JOIN country  c ON av.country = c.code3 JOIN store str on str.name = appli.name																		 
WHERE c.continent_name = 'Oceania'   AND os = 'Android'","8, [('Bupa Aged Care Connect',), ('MyAus COVID-19',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',)]","Missing semicolon, CHECK CODE; ",,"SELECT c.name, COUNT(DISTINCT av.name)  as cc FROM country c JOIN available av ON av.country = c.code3
GROUP BY c.name
ORDER BY cc DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(DISTINCT av.name)  as cc FROM country c JOIN available av ON av.country = c.code3
GROUP BY c.name
ORDER BY cc DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(DISTINCT av.name)  as cc FROM country c JOIN available av ON av.country = c.code3
GROUP BY c.name
ORDER BY cc DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(DISTINCT av.name)  as cc FROM country c JOIN available av ON av.country = c.code3
GROUP BY c.name
ORDER BY cc DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE E1 (
A TEXT NOT NULL ,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
F TEXT NOT NULL,
G TEXT REFERENCES E2(G)
PRIMARY KEY (A,D,C));
CREATE TABLE E2 (
J TEXT NOT NULL,
G TEXT PRIMARY KEY,
K TEXT NOT NULL,
H TEXT NOT NULL);",No output,Num. tables: 2; Num. not null: 8; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"One example could be private teachers and students
One student can have only one teacher, but teachers can have multiple students.
E1 would represent the students. A= name, C = last name, D = student id, B= age. (A,C,D) could be a candidate key (we can assume name, last name and id totally identifies a student). F= hours per week
E2 would represent the teachers. G = teacher_id, J = age, K = hourly_remuneration, H = sex",No output,,
A0231982B,"select distinct c.continent_name, c.continent_code
from country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select av.name as app, c.name as country
from available av, country c, store s
where av.country=c.code3
and s.name=av.name
and c.continent_code='EU'
and s.os='iOS'
intersect
select av.name as app, c.name as country
from available av, country c, store s
where av.country=c.code3
and s.name=av.name
and c.continent_code='EU'
and s.os='Android'
order by app;","42, [('???', 'Ukraine'), ('????????? ???? ???????????', 'Russian Federation'), ('?????????? ??????????', 'Russian Federation'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Asistencia COVID-19', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('CONFINAPP', 'Spain, Kingdom of'), ('Corona-Datenspende', 'Germany, Federal Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Corona Check Screening', 'Germany, Federal Republic of')]",,,"select c.name
from country c
group by c.name
having count(*)>=2
order by c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct c1.name
from country c1, country c2
where c1.code3=c2.code3
and c1.continent_code <>c2.continent_code
order by c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct av.name
from available av, country c, store s1, store s2
where av.country=c.code3
and s1.name=av.name
and s2.name=av.name
and s1.name=s2.name
and c.continent_code='OC'
and s1.os <> s2.os
order by av.name;","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]",,,"select c.name, count(*)
from available av, country c
where c.code3=av.country
group by c.name
order by count(*) desc limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count(*)
from available av, country c
where c.code3=av.country
group by c.name
order by count(*) desc limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name, count(*)
from available av, country c
where c.code3=av.country
group by c.name
order by count(*) desc limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name, count(*)
from available av, country c
where c.code3=av.country
group by c.name
order by count(*) desc limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"create table if not exists E1(
A VARCHAR(255) unique,
B VARCHAR(255) not null,
C VARCHAR(255) not null,
D VARCHAR(255) not null,
primary key (C,D));
create table if not exists E2(
G VARCHAR(255) primary key,
H VARCHAR(255) not null,
J VARCHAR(255) not null,
K VARCHAR(255) not null);
create table if not exists S(
F VARCHAR(255) not null,
C VARCHAR(255) not null,
D VARCHAR(255) not null, 
G VARCHAR(255) references E2(G),
primary key (C,D,G),
foreign key (C,D) references E1(C,D)
);",No output,Num. tables: 3; Num. not null: 9; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 is airplane, s is departure to, E2 is airport.
An airplane has its airline code(C), number(D), airplane production series number(A),
and producer(B). Each airplane has its unique production series number(just like production
series number on car), and by combining airline code and number (eg.UA886), the 
airplane is unique. Different airplanes may have the same producer like Boeing.
The relation is departure to (can be arrival as well). An airplane/flight can only
departure to one destination, but there can be multiple flights flying to the
same destination.
An airport has its unique code(eg.CGQ)(G), name(H), city (J), country(K). Different
airports may share the same name, same city or same country.",No output,,
A0231989M,"select distinct continent_name, continent_code
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select a.name as app, cou.name as country
from app a, available as ava, store as st, country as cou
where st.name = a.name and ava.name = a.name and ava.country = cou.code3
and cou.continent_name = 'Europe' and st.os = 'iOS'
intersect
select a.name as app, cou.name as country
from app a, available as ava, store as st, country as cou
where st.name = a.name and ava.name = a.name and ava.country = cou.code3
and cou.continent_name = 'Europe' and st.os = 'Android';","42, [('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('Korona ™nlem', 'Turkey, Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('Coronavirus Support App (UK)', 'United Kingdom of Great Britain & Northern Ireland')]",,,"select cou.name
from country as cou
group by cou.name
having count(cou.continent_name) > 1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select cou.name
from country as cou
where coun",No output,"Missing semicolon, CHECK CODE; ",,"select ava.name
from available as ava, country as coun, store as st, app as a
where ava.country = coun.code3 and st.name = a.name and ava.name = a.name and coun.continent_name = 'Oceania'
and st.name = ava.name and st.os = all(
select st.os
from store as st
group by st.os);","0, []","Aggregation is used, CHECK CODE; ",,"select coun.name, count(ava.name)
from available ava, country coun
where coun.code3 = ava.country
group by coun.name
order by count(ava.name) desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select coun.name, count(ava.name)
from available ava, country coun
where coun.code3 = ava.country
group by coun.name
order by count(ava.name) desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select coun.name, count(ava.name)
from available ava, country coun
where coun.code3 = ava.country
group by coun.name
order by count(ava.name) desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select coun.name, count(ava.name)
from available ava, country coun
where coun.code3 = ava.country
group by coun.name
order by count(ava.name) desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E1 (
A TEXT NOT NULL,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
F TEXT NOT NULL,
PRIMARY KEY (C,D),
FOREIGN KEY (A) REFERENCES E2(G));
CREATE TABLE E2(
J TEXT NOT NULL,
K TEXT NOT NULL,
H TEXT NOT NULL,
G TEXT PRIMARY KEY
);",No output,Num. tables: 2; Num. not null: 8; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"This entity-relationship diagram could correspond to E1 being a football player and E2 being a football club.
This database is strictly for players who are playing for clubs and represents the data of players who are currently playing.
S is the relationship that signifies ""plays for"". 
A, in this case, is the name of the football club – Arsenal FC,
FC Barcelona, Liverpool FC etc. 
B is an attribute, so we can let it be the skill of the player which could be from ""Mediocre"" to ""World-Class"".
C and D are the composite primary keys which uniquely identifies a football player.
This could be the full name of the player as C and the D as their birth place. Cristiano Ronaldo's full name
is Cristiano Ronaldo dos Santos Aveiro and his birth place is Funchal, Madeira, Portugal. Both this
information would uniquely identify a player.
F is the attribute in the relationship S, ""plays for"". This can be the contract information of the player and the football club.
G is the primary key of the football club or E2. This is the name of the football club as it generally uniquely identifies
a football team. For ex: Real Madrid has two teams Real Madrid CF, A team, and Real Madrid Castilla Club de Fútbol, B team.
H, J, K are attributes for the football club. So, H can be the football club stadium capacity, J could be the
number of years active, and K could be the fanbase of the football club.
To justify the participation contraints, in this database, a football player can only play for a minimum of one
team and a maximum of one team at one point in time. Note that this database is only for football players and clubs, no country football data.
Also, there is a 1-to-1 pairing of football player to club as this data is only concerned with the current situation.
For instance, Lionel Messi is only playing for PSG at this moment, so he has a 1-to-1 pairing with PSG.
Clubs has a 0 to many constraint as a club could be without any players (inactive) or a club would typically
have multiple players playing for the team. This is trivial as clubs contain numerous players from their first team to
youth squads.",No output,,
A0231990A,"SELECT DISTINCT continent_name, continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT
	av.name AS app, 
	c.name AS country
FROM available av, country c, store s
WHERE av.country = c.code3
AND av.name = s.name
AND continent_code = 'EU'
AND s.os = 'iOS'
INTERSECT
SELECT
	av.name AS app, 
	c.name AS country
FROM available av, country c, store s
WHERE av.country = c.code3
AND av.name = s.name
AND continent_code = 'EU'
AND s.os = 'Android';","42, [('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('Korona ™nlem', 'Turkey, Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('Coronavirus Support App (UK)', 'United Kingdom of Great Britain & Northern Ireland')]",,,"SELECT c.name
FROM country c
GROUP BY name
HAVING COUNT(c.name) >= 2;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c.name
FROM country c
WHERE c.name IN (
	SELECT c1.name
	FROM country c1
	WHERE c1.name = c.name
	AND c1.continent_code <> c.continent_code);","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT
	av.name
FROM available av, country c
WHERE av.country = c.code3
AND continent_code = 'OC';","12, [('COVID VS',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',), ('CovidCare - Symptom monitor',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('TCC COVID Monitor',)]",,,"SELECT 
	c.name,
	COUNT(*) as count
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT 
	c.name,
	COUNT(*) as count
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT 
	c.name,
	COUNT(*) as count
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT 
	c.name,
	COUNT(*) as count
FROM available av, country c
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY count DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE e2(
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL,
	J TEXT NOT NULL,
	K TEXT NOT NULL);
CREATE TABLE e1_s(
	F TEXT NOT NULL,
	A TEXT,
	B TEXT NOT NULL,
	C TEXT,
	D TEXT,
	G TEXT NOT NULL,
	PRIMARY KEY (A, C, D),
	FOREIGN KEY (G) REFERENCES e2(G));",No output,Num. tables: 2; Num. not null: 6; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"The real world example in this case could be a Yoga Studio.
The entity set E1 represents the information of the studio's customers. This entity set is comprised of:
A - Customer's Email
C - Customer's First Name
D - Customer's Last Name
B - Customer's Membership Type. Some examples could be 'Student', 'Senior', 'Monthly Adult', 'Pay As You Go Adult', etc.
The primary key in this entity set is a composite of the customer's email, first name and last name.
There could be customers with the same first and last names. There could also be a case where a couple decides to furnish only one email.
Hence a composite of these three fields would serve as the primary key.
The entity set E2 represents the information of the studio's yoga instructors. This entity set is comprised of:
G - Instructor's Employee ID
H - Instructor's First Name
J - Instructor's Last Name
K - Instructor's Full Time Status (i.e. Boolean where 1 = Full Time, 0 = Part Time)
In this case, the instructor's employee ID is sufficient to serve as the primary key since it is unique to each instructor.
The relationship set S represents the assignment of customers to an instructor. 
In this case, each customer is always assigned to one instructor.
Each instructor can be assigned to any number of customers. It is also possible that an instructor is not assigned any customers.
The relationship set S includes the attribute F, which records down the date on which the customer was assigned to his/her instructor.",No output,,
A0231993X,"select distinct c.continent_name, c.continent_code
from country as c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select a.name as app, c.name as country
from app as a, store as s, appfunctionality as af, available as av, country as c, store as s2
where a.name = s.name and s.name=af.name and af.name = av.name and av.country = c.code3
and c.continent_name = 'Europe'
and s.os = 'Android'
and a.name = s2.name and s2.name=af.name and af.name = av.name and av.country = c.code3
and c.continent_name = 'Europe'
and s2.os = 'iOS'
and s2.name = s.name
group by a.name, c.name, c.continent_name;","42, [('Corona-Datenspende', 'Germany, Federal Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('CONFINAPP', 'Spain, Kingdom of'), ('TreCovid19', 'Italy, Italian Republic'), ('ProteGO Safe', 'Poland, Republic of'), ('e-Covid SINFONIA', 'Italy, Italian Republic'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Covidom Patient', 'France, French Republic'), ('Terr-eSant‚ eCovid', 'France, French Republic')]",,,"select c1.name from country as c1
group by c1.name
having count(c1.continent_name)>=2
order by c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct c1.name 
from country as c1, country as c2
where c1.name = c2.name and c1.continent_name <> c2.continent_name
order by c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct a.name
from app as a, store as s, appfunctionality as af, available as av, country as c
where a.name = s.name and s.name=af.name and af.name = av.name and av.country = c.code3
and c.continent_name = 'Oceania'
and s.os in (select distinct s2.os from store as s2)
order by a.name;","12, [('#BeatCovid19Now',), ('Awhina - informing health workers',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('COVID VS',), ('CovidCare - Symptom monitor',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',)]",,,"select c.name, count(distinct a.name)
from app as a, store as s, appfunctionality as af, available as av, country as c
where a.name = s.name and s.name = af.name and af.name = av.name and av.country = c.code3
group by c.name
order by count(distinct a.name) desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Switzerland, Swiss Confederation', 7), ('Argentina, Argentine Republic', 7)]","select c.name, count(distinct a.name)
from app as a, store as s, appfunctionality as af, available as av, country as c
where a.name = s.name and s.name = af.name and af.name = av.name and av.country = c.code3
group by c.name
order by count(distinct a.name) desc
limit 17;","17, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7), ('Germany, Federal Republic of', 7)]","select c.name, count(distinct a.name)
from app as a, store as s, appfunctionality as af, available as av, country as c
where a.name = s.name and s.name = af.name and af.name = av.name and av.country = c.code3
group by c.name
order by count(distinct a.name) desc
limit 18;","18, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7), ('France, French Republic', 7)]","select c.name, count(distinct a.name)
from app as a, store as s, appfunctionality as af, available as av, country as c
where a.name = s.name and s.name = af.name and af.name = av.name and av.country = c.code3
group by c.name
order by count(distinct a.name) desc
limit 116;","87, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Germany, Federal Republic of', 7), ('Argentina, Argentine Republic', 7)]",,,,No output,Num. tables: 0; Num. not null: 0 (CHECK CODE) ; Num. foreign keys defined: 0; ,,"There is 1 to 1 relationship from E1 to S.
There is optional to many relationship from E2 to S.
E1 and E2 are linked by relationship S.
A real life example of a one to one and one to many relationship could be for example:
Entity E1 phd student can only have one supervisor, and minimum need one supervisor.
Entity E2 academic staff, some can supervisor many students. Some academic staff do not supervise
any students.
The relationship S is Supervise.",No output,,
A0231994W,"Select Distinct c.continent_name, c.continent_code
From country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"Select ap.name As app, c.name As country
From app ap, store s, available av, country c,
appfunctionality af, functionality f
Where ap.name = s.name
And ap.name = av.name
And av.country = c.code3
And ap.name = af.name
And af.functionality = f.type
And f.type = 'contact tracing'
And c.continent_name = 'Europe'
And s.os = 'iOS'
Group By ap.name,c.name
Intersect
Select ap.name As app, c.name As country
From app ap, store s, available av, country c,
appfunctionality af, functionality f
Where ap.name = s.name
And ap.name = av.name
And av.country = c.code3
And ap.name = af.name
And af.functionality = f.type
And f.type = 'contact tracing'
And c.continent_name = 'Europe'
And s.os = 'Android'
Group By ap.name,c.name;","10, [('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"Select c.name
From country c
Group By c.name
Having count(c.continent_name) >=2
Order By c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"Select c.name
From country c
Group By c.name
Having count(c.continent_name) >=2
Order By c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Aggregation is used, CHECK CODE; ",,"Select ap.name
From app ap Left Outer Join available av On ap.name = av.name
Left Outer Join country c On av.country = c.code3
Left Outer Join store s On s.name = ap.name
Where c.continent_name = 'Oceania'
Group By ap.name, s.os
Having s.os NOTNULL;","20, [('Coronavirus Australia',), ('NZ COVID Tracer',), ('healthdirect',), ('MyAus COVID-19',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('COVID VS',), ('Bupa Aged Care Connect',), ('NZ COVID Tracer',)]","Aggregation is used, CHECK CODE; ",,"Select count(distinct ap.name),c.name
From country c, available av, app ap
Where ap.name = av.name
And av.country = c.code3
Group By c.name
Order By count(*) Desc
Limit 6 Offset 0;","6, [(65, 'United States of America'), (52, 'India, Republic of'), (21, 'Mexico, United Mexican States'), (17, 'Brazil, Federative Republic of'), (16, 'Spain, Kingdom of'), (14, 'United Kingdom of Great Britain & Northern Ireland')]","Select count(distinct ap.name),c.name
From country c, available av, app ap
Where ap.name = av.name
And av.country = c.code3
Group By c.name
Order By count(*) Desc
Limit 7 Offset 0;","7, [(65, 'United States of America'), (52, 'India, Republic of'), (21, 'Mexico, United Mexican States'), (17, 'Brazil, Federative Republic of'), (16, 'Spain, Kingdom of'), (14, 'United Kingdom of Great Britain & Northern Ireland'), (5, 'Russian Federation')]","Select count(distinct ap.name),c.name
From country c, available av, app ap
Where ap.name = av.name
And av.country = c.code3
Group By c.name
Order By count(*) Desc
Limit 8 Offset 0;","8, [(65, 'United States of America'), (52, 'India, Republic of'), (21, 'Mexico, United Mexican States'), (17, 'Brazil, Federative Republic of'), (16, 'Spain, Kingdom of'), (14, 'United Kingdom of Great Britain & Northern Ireland'), (5, 'Russian Federation'), (8, 'Australia, Commonwealth of')]","Select count(distinct ap.name),c.name
From country c, available av, app ap
Where ap.name = av.name
And av.country = c.code3
Group By c.name
Order By count(*) Desc
Limit 16 Offset 0;","16, [(65, 'United States of America'), (52, 'India, Republic of'), (21, 'Mexico, United Mexican States'), (17, 'Brazil, Federative Republic of'), (16, 'Spain, Kingdom of'), (14, 'United Kingdom of Great Britain & Northern Ireland'), (5, 'Russian Federation'), (8, 'Indonesia, Republic of'), (8, 'Australia, Commonwealth of'), (7, 'Italy, Italian Republic')]",,,"Create Table if Not Exists E1(
A Text Not Null
B Text Not Null
C Text Not Null
D Text Not Null
Primary Key (A,C,D));
Create Table if Not Exists E2(
J Text Not Null
K Text Not Null
G Text Primary Key
H Text Not Null
);
Create Table if Not Exists S(
F Text Not Null);",No output,Num. tables: 3; Num. not null: 8; Num. foreign keys defined: 0; ,,"Let E1 be 'university dorm student' and E2 be 'university dorm'. Then S becomes 
'live in'. A student living in a dorm can only be assigned and live in one dorm
per semester
while one dorm can contain many students (or no student), 
satisfying the (1,1) and (0,n) requirements.
For E2, the primary key G should be the 'dormID', and J, K, H should be
'building_name', 'dorm_house_number' and 'aircon'.
For E1, A, C, D, B should be 'studentID', 'Gender', 'Year' and 'health_status'.
A, C and D should together be the primary key.",No output,,
A0231996R,"select distinct continent_name, continent_code
 from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select (af.name) as app , (c.name) as country
from appfunctionality af cross join store s1 cross join store s2 cross join available av 
left outer join country c on av.country = c.code3
where av.name=af.name
and af.name = s1.name
and af.name = s2.name
and av.name = s1.name
and av.name = s2.name
and af.functionality = 'contact tracing'
and s1.os = 'iOS'
and s2.os = 'Android'
and av.country in
(select code3 from country c
where c.continent_name = 'Europe');","10, [('Stopp Corona', 'Austria, Republic of'), ('StopCovid France', 'France, French Republic'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of')]",,,"select c.name
from country c
group by c.name
having count(c.continent_name) <>1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select distinct c1.name
from country c1, country c2
where c1.name = c2.name
and c1.continent_name <>c2.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select s1.name
from store s1 cross join store s2 cross join available av left outer join country c
on av.country = c.name
where s1.name = av.name
and s2.name = av.name
and av.country in (
select code3 from country c
where c.continent_name = 'Oceania')
and s1.os = 'iOS'
and s2.os = 'Android';","8, [('NZ COVID Tracer',), ('TCC COVID Monitor',), ('COVIDSafe',), ('#BeatCovid19Now',), ('MyAus COVID-19',), ('Coronavirus Australia',), ('healthdirect',), ('Bupa Aged Care Connect',)]",,,"select c.name, count(av.name)
from country c, available av
where av.country = c.code3
group by c.name
order by count(av.name) desc
limit (6);","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count(av.name)
from country c, available av
where av.country = c.code3
group by c.name
order by count(av.name) desc
limit (7);","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name, count(av.name)
from country c, available av
where av.country = c.code3
group by c.name
order by count(av.name) desc
limit (8);","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name, count(av.name)
from country c, available av
where av.country = c.code3
group by c.name
order by count(av.name) desc
limit (16);","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2 (
J TEXT not null,
H TEXT not null,
K TEXT not null,
G TEXT primary key
 );
CREATE TABLE IF NOT EXISTS E1 (
A TEXT unique not null,
B TEXT not null,
C TEXT not null,
D TEXT not null,
F TEXT not null,
G Text not null,
primary key (C,D),
foreign key (G) references E2(G));",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"E1 = Employee
A = Emloyee ID
B = Join date
C = Address
D = Full name
S = Directly Managed by
F = Department
E2 = Manager
G = Manager ID
H = Age
J = Gender
K = Skillsets
In this scenario, each employee must be and must only be managed by one manager in the comapny.
Can identify the employee by a combanation of traits of Address and Full name.
Each employee's Employee ID should be unique within the company.
Entity 2 is the infomation regarding the managers.
Each manager can directly manage 0 or n numbers of employees.
Some attributes of managers are Manager ID, Age, Gender and Skillsets. 
Here, Manager ID should be used as the identifier for each manager wthin the company.
The relationship set S is directly managed by.
The attribute can be department.
However, since E1(Employee) has 1-to-1 relationship, the number of rows of S and E1 should be the same.
Hence, can merge the S and E1 into one table.",No output,,
A0231999L,"SELECT DISTINCT(continent_name), continent_code
FROM country","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]","Missing semicolon, CHECK CODE; ",,"SELECT a.name as app, c.name as country
FROM available a, store s, country c
WHERE a.name=s.name AND c.code3=a.country AND c.continent_name='Europe' AND s.os='Android'
INTERSECT
SELECT a.name as app, c.name as country
FROM available a, store s, country c
WHERE a.name=s.name AND c.code3=a.country AND c.continent_name='Europe' AND s.os='iOS'","42, [('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('Korona ™nlem', 'Turkey, Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('Coronavirus Support App (UK)', 'United Kingdom of Great Britain & Northern Ireland')]","Missing semicolon, CHECK CODE; ",,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(*)>1","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]","Missing semicolon, CHECK CODE; ",,,No output,,,"SELECT a.name
FROM available a
WHERE NOT EXISTS( 
SELECT *   
FROM country c  
WHERE c.continent_name ='Oceania'
AND NOT EXISTS (      
SELECT *      
FROM store s 
WHERE a.name=s.name));","390, [('COVID-19 CDMX',), ('CovTracer',), ('????????????????',), ('Relief Central | COVID-19',), ('Stop COVID-19 KG',), ('Lynx-Virtual',), ('Canada COVID-19',), ('NMC COVID-19',), ('StopCOVID NI',), ('Koronavirus MK',)]",,,"SELECT c.name, COUNT(*)
FROM available a, country c
WHERE a.country=c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 6","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(*)
FROM available a, country c
WHERE a.country=c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 7","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(*)
FROM available a, country c
WHERE a.country=c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 8","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(*)
FROM available a, country c
WHERE a.country=c.code3
GROUP BY c.name
ORDER BY COUNT(*) DESC
LIMIT 16","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]","Missing semicolon, CHECK CODE; ",,"CREATE TABLE IF NOT EXISTS E1 (a VARCHAR(64) NOT NULL,
b VARCHAR(64) NOT NULL, c VARCHAR(64) NOT NULL, d VARCHAR (64) NOT NULL, PRIMARY KEY (a,c,d));
CREATE TABLE IF NOT EXISTS E2 (j VARCHAR(64) NOT NULL,
g VARCHAR(64) NOT NULL, k VARCHAR(64) NOT NULL, h VARCHAR (64) NOT NULL, PRIMARY KEY (g));
CREATE TABLE IF NOT EXISTS s (f VARCHAR(64) NOT NULL,
FOREIGN KEY (c,d) REFERENCES E1(c,d),FOREIGN KEY (g) REFERENCES E2(g));",No output,Num. tables: 3; Num. not null: 9; Num. foreign keys defined: 2 (CHECK CODE) ; ,,,No output,,
A0232000L,"SELECT DISTINCT continent_name,continent_code
FROM country
ORDER BY continent_name;","7, [('Africa', 'AF'), ('Antarctica', 'AN'), ('Asia', 'AS'), ('Europe', 'EU'), ('North America', 'NA'), ('Oceania', 'OC'), ('South America', 'SA')]",,,"SELECT app.name AS app, c.name as country
FROM app, country c, available ava, store s1, store s2
WHERE app.name = ava.name
AND c.code3=ava.country
AND c.continent_name = 'Europe'
AND app.name = s1.name
AND s1.os = 'iOS' 
AND app.name = s2.name
AND s2.os = 'Android'
ORDER BY app.name, c.name;","42, [('???', 'Ukraine'), ('????????? ???? ???????????', 'Russian Federation'), ('?????????? ??????????', 'Russian Federation'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Asistencia COVID-19', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('CONFINAPP', 'Spain, Kingdom of'), ('Corona-Datenspende', 'Germany, Federal Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Corona Check Screening', 'Germany, Federal Republic of')]",,,"SELECT name
FROM country 
GROUP BY name
HAVING count(*)>1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c.name
FROM country c, country c1 
WHERE c.name = c1.name
AND c.continent_name <> c1.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT s.name
FROM store s, available ava, country c
WHERE s.name = ava.name
AND c.code3 = ava.country
AND c.continent_name = 'Oceania'
AND s.os = ANY(
	SELECT DISTINCT os
	FROM store);","20, [('Bupa Aged Care Connect',), ('healthdirect',), ('Awhina - informing health workers',), ('NZ COVID Tracer',), ('healthdirect',), ('COVIDSafe',), ('Coronavirus Australia',), ('COVID VS',), ('MyAus COVID-19',), ('Covid-19  Armenia',)]",,,"SELECT c.name, count(*)
FROM country c, available ava
WHERE c.code3 = ava.country
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, count(*)
FROM country c, available ava
WHERE c.code3 = ava.country
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, count(*)
FROM country c, available ava
WHERE c.code3 = ava.country
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, count(*)
FROM country c, available ava
WHERE c.code3 = ava.country
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E2(
	J TEXT NOT NULL,
	K TEXT NOT NULL,
	H TEXT NOT NULL,
	G TEXT PRIMARY KEY
);
CREATE TABLE IF NOT EXISTS E1(
	B TEXT NOT NULL,
	A TEXT NOT NULL,
	C TEXT,
	D TEXT,
	F TEXT NOT NULL,
	G TEXT REFERENCES E2(G),
	PRIMARY KEY (C, D)
	);",No output,Num. tables: 2; Num. not null: 6; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"This could represent an employment relationship for employed univerisity graduates. E2 is the company, G would be the registered brand name,
which is the candidate key as it is uniquely identified. H,K,J could be address, industry and revenue respectively. E1 is the worker, A could 
be national ID, which can be used as a candidate key. C and D could be university and university id, which together can serve as candidate key. 
B would beother information, such as salary.
Participation constraint for E1 is (1,1) as each worker needs need to be employed by a company and cannot be employed by more than 1 company,
for E2 is (0,n) as each company can hire 0 to as many they want the number of recent graduates.",No output,,
A0232004A,"select continent_name, continent_code from country","262, [('Asia', 'AS'), ('Europe', 'EU'), ('Antarctica', 'AN'), ('Africa', 'AF'), ('Oceania', 'OC'), ('Europe', 'EU'), ('Africa', 'AF'), ('North America', 'NA'), ('Europe', 'EU'), ('Asia', 'AS')]","Missing semicolon, CHECK CODE; ",,"select av.name as app, co.name as country
from available av, country co, store st
where av.country = co.code3
and co.continent_name = 'Europe'
and av.name = st.name
and os = 'iOS'
intersect
select av.name as app, co.name as country
from available av, country co, store st
where av.country = co.code3
and co.continent_name = 'Europe'
and av.name = st.name
and os = 'Android'","42, [('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('Korona ™nlem', 'Turkey, Republic of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('CoronaMadrid', 'Spain, Kingdom of'), ('COVID Radar', 'Netherlands, Kingdom of the'), ('Coronavirus Support App (UK)', 'United Kingdom of Great Britain & Northern Ireland')]","Missing semicolon, CHECK CODE; ",,"select c.name
from country c
group by c.name
having count(*) >= 2","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]","Missing semicolon, CHECK CODE; ",,"select distinct c1.name
from country c1
where c1.continent_name <> ANY	(select c2.continent_name
								from country c2
								where c2.name = c1.name)","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Missing semicolon, CHECK CODE; ",,"select avf.name
from country co, 	(select av.name, av.country
					from available av
					where not exists 	(select *
				 						from store st1
				 						where av.name = st1.name
				 						and not exists	(select *
							   							from store st2
							   							where st1.os = st2.os))) as avf
where co.code3 = avf.country
and co.continent_name = 'Oceania'","12, [('COVID VS',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',), ('CovidCare - Symptom monitor',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('TCC COVID Monitor',)]","Missing semicolon, CHECK CODE; ",,"select co.name, count(*)
from app ap, available av, country co
where av.country = co.code3
and ap.name = av.name
group by co.continent_name, co.name
order by count desc
limit 6","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select co.name, count(*)
from app ap, available av, country co
where av.country = co.code3
and ap.name = av.name
group by co.continent_name, co.name
order by count desc
limit 7","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8)]","select co.name, count(*)
from app ap, available av, country co
where av.country = co.code3
and ap.name = av.name
group by co.continent_name, co.name
order by count desc
limit 8","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8)]","select co.name, count(*)
from app ap, available av, country co
where av.country = co.code3
and ap.name = av.name
group by co.continent_name, co.name
order by count desc
limit 16","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('France, French Republic', 7), ('Switzerland, Swiss Confederation', 7)]","Missing semicolon, CHECK CODE; ",,"CREATE TABLE E1(
A VARCHAR(64),
B VARCHAR(64),
C VARCHAR(64),
D VARCHAR(64),
F VARCHAR(64) REFERENCES E2(G)
PRIMARY KEY (C, D));
CREATE TABLE E2(
G VARCHAR(64) PRIMARY KEY,
H VARCHAR(64),
J VARCHAR(64),
K VARCHAR(64))",No output,Num. tables: 2; Num. not null: 0 (CHECK CODE) ; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"E1 could be identified by its feature C and D together or by feature A. It also have some other features such as B. It is and could only be connected to the relation with E2 by feature F. E2 could be connected to multiple E1 or not connected to any of them.
Candidate key for E1 is A or (C + D); Candidate key for E2 is G.",No output,,
A0232007X,"select distinct continent_name,continent_code
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select distinct ap1.name as app,c1.name as country
from app ap1
inner join available av1
on ap1.name=av1.name
inner join country c1
on av1.country=c1.code3
inner join store s1
on ap1.name=s1.name
inner join store s2
on ap1.name=s2.name
inner join appfunctionality appf
on ap1.name=appf.name
where c1.continent_name='Europe'
and s1.os='iOS'
and s2.os='Android'
and appf.functionality='contact tracing';","10, [('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('Immuni', 'Italy, Italian Republic'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopCovid France', 'France, French Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"select c.name
from country c
group by c.name
having count(c.continent_name)>1
order by c.name asc;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select t.name
from (select *,
	 rank() over(partition by c.name
				order by c.continent_name desc) as ranking
	 from country c) t
where t.ranking=2;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select distinct ap.name as name
from app ap
inner join available av
on ap.name=av.name
inner join store s
on s.name=av.name
inner join country c
on c.code3=av.country
where c.continent_name='Oceania'
and ap.name in (select s1.name
			   from store s1
			   group by s1.name
			   having count(s1.os)=(select count(distinct s2.os)
							   from store s2));","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',), ('NZ COVID Tracer',), ('TCC COVID Monitor',)]","Aggregation is used, CHECK CODE; ",,"select c.name,count(av.name)
from available av
inner join country c
on av.country=c.code3
group by c.name
order by count(av.name) desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name,count(av.name)
from available av
inner join country c
on av.country=c.code3
group by c.name
order by count(av.name) desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name,count(av.name)
from available av
inner join country c
on av.country=c.code3
group by c.name
order by count(av.name) desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name,count(av.name)
from available av
inner join country c
on av.country=c.code3
group by c.name
order by count(av.name) desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"create table E1(
A TEXT NOT NULL,
B TEXT NOT NULL,
C TEXT,
D TEXT,
PRIMARY KEY(C,D));
create table E2(
J TEXT NOT NULL,
K TEXT NOT NULL,
H TEXT NOT NULL,
G TEXT PRIMARY KEY);
create table S(
F TEXT NOT NULL，
S_A TEXT NOT NULL,
s_B TEXT NOT NULL,
S_C TEXT,
S_D TEXT,
S_G TEXT,
PRIMARY KEY (S_C,S_D,S_G),
FOREIGN KEY (S_C,S_D)
REFERENCES E1(C,D),
FOREIGN KEY (S_G)
REFERENCES E2(G));",No output,"Illegal fullwidth character detected ['ff0c', 'ff0c']; 
Num. tables: 3; Num. not null: 8; Num. foreign keys defined: 2 (CHECK CODE) ; ",,"E1 is table of students; S is table of their studentID; E2 is table of names of clubs on campus.
Each student has only one studentId, and they can join several clubs.
For E1, A is their email, as primary key; C is first name, D is last name; B is country they come from.
For S, F is students' studentID.
For E2, G is the code(unique) for the club, as primary key; J is the location of club; K is the max number of members
in this club; H is the leader of this club.",No output,,
A0232009U,"select distinct continent_name, continent_code
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select ap.name as app, c.name as country
from app ap, available a, country c, store s1, store s2
where ap.name = s1.name and ap.name = s2.name and ap.name = a.name and a.country = c.code3 
and c.continent_name = 'Europe'
and s1.os = 'iOS' and s2.os = 'Android';","42, [('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('????????? ???? ???????????', 'Russian Federation'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('CORONAVIRUS - ???????????', 'Ukraine'), ('Luscii', 'Netherlands, Kingdom of the'), ('COVID Radar', 'Netherlands, Kingdom of the')]",,,"select c.name
from country c
group by c.name
having count(*) > 1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select distinct c.name
from country c
where c.name = ANY(
select c1.name
from country c1
where c.continent_name <> c1.continent_name);","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select ap.name
from app ap, available a, country c, store s
where ap.name = a.name and a.country = c.code3 and ap.name = s.name
and c.continent_name = 'Oceania' 
and s.os >= ALL(select s1.os from store s1);","11, [('COVID VS',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',), ('CovidCare - Symptom monitor',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('TCC COVID Monitor',)]",,,"select c.name, count(*)
from country c inner join available a on c.code3 = a.country
group by c.name
order by count(*) desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count(*)
from country c inner join available a on c.code3 = a.country
group by c.name
order by count(*) desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name, count(*)
from country c inner join available a on c.code3 = a.country
group by c.name
order by count(*) desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name, count(*)
from country c inner join available a on c.code3 = a.country
group by c.name
order by count(*) desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1(
	A TEXT UNIQUE NOT NULL,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	PRIMARY KEY(C, D)
);
CREATE TABLE IF NOT EXISTS E2(
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL,
	J TEXT NOT NULL,
	K TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS S(
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	G TEXT NOT NULL,
	PRIMARY KEY(C, D, G),
	FOREIGN KEY(C, D) REFERENCES E1(C, D),
	FOREIGN KEY(G) REFERENCES E2(G)
);",No output,Num. tables: 3; Num. not null: 10; Num. foreign keys defined: 2 (CHECK CODE) ; ,,,No output,,
A0232012E,"SELECT DISTINCT continent_name, continent_code 
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT af.name AS app, c.name AS country 
FROM appfunctionality af, country c, store s, available a 
WHERE af.name = a.name 
AND a.country = c.code3 
AND s.name = af.name 
AND s.os = 'Android' 
AND c.continent_name = 'Europe' 
AND af.functionality = 'contact tracing' 
INTERSECT 
SELECT af.name AS app, c.name AS country 
FROM appfunctionality af, country c, store s, available a 
WHERE af.name = a.name 
AND a.country = c.code3 
AND s.name = af.name 
AND s.os = 'iOS' 
AND c.continent_name = 'Europe' 
AND af.functionality = 'contact tracing';","10, [('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"SELECT c.name 
FROM country c 
GROUP BY c.name 
HAVING COUNT(*) >1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c.name
FROM country c
EXCEPT 
SELECT c.name 
FROM country c 
GROUP BY c.name;","0, []","Aggregation is used, CHECK CODE; ",,"SELECT a.name 
FROM available a, country c 
WHERE a.country = c.code3 
AND c.continent_name = 'Oceania' 
AND a.name IN( 
SELECT tmp.name 
FROM (SELECT DISTINCT s.name, s.os FROM store s) tmp 
GROUP BY tmp.name 
HAVING COUNT(*) >= ALL( 
SELECT count(DISTINCT s2.os) 
FROM store s2));","8, [('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('COVIDSafe',), ('Bupa Aged Care Connect',), ('#BeatCovid19Now',), ('TCC COVID Monitor',), ('MyAus COVID-19',)]","Aggregation is used, CHECK CODE; ",,"SELECT c.name, COUNT(*) AS count 
FROM country c, available a 
WHERE c.code3 = a.country 
GROUP BY c.name 
ORDER BY count DESC 
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, COUNT(*) AS count 
FROM country c, available a 
WHERE c.code3 = a.country 
GROUP BY c.name 
ORDER BY count DESC 
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, COUNT(*) AS count 
FROM country c, available a 
WHERE c.code3 = a.country 
GROUP BY c.name 
ORDER BY count DESC 
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, COUNT(*) AS count 
FROM country c, available a 
WHERE c.code3 = a.country 
GROUP BY c.name 
ORDER BY count DESC 
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E2 (
J TEXT NOT NULL,
K TEXT NOT NULL,
G TEXT PRIMARY KEY,
H TEXT NOT NULL);
CREATE TABLE E1_S(
F TEXT NOT NULL,
A TEXT NOT NULL,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
G TEXT NOT NULL REFERENCES E2(G),
PRIMARY KEY(A, C, D));",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"As we know, each computer has one and only one kind of operation system, however a kind of operation system can be installed in different kinds of computers. Using the symbols in the figure, that's to say, E1 represents computers, and E2 represents the operation systems. To decide which kind the computer is, use its brand, its type_code and its production batch as identifiers. To identify what the os is, use its name as the identifier.
E1: computers
E2: operation systems
S: the operation system used in the computer
A: brand (the brand of this computer) - one of the primary keys
B: color (the color of this computer)
C: type (the type code of this computer) - one of the primary keys
D: production_batch (production batch of this computer) - one of the primary keys
F: person (the person who install the os in the computer)
G: name (the name of the os) - one of the primary keys
H: designer (the designer of the os)
J: price (the price of the os)
K: date (the date that the os first published)",No output,,
A0232013A,"SELECT DISTINCT c.continent_name, c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT app.name AS app, c.name AS country
FROM app app, available av, store s, country c, appfunctionality af
WHERE app.name=s.name AND app.name=av.name AND av.country=c.code3 AND app.name=af.name
AND s.os='iOS' AND c.continent_name='Europe' AND af.functionality='contact tracing'
INTERSECT
SELECT app.name AS app, c.name AS country
FROM app app, available av, store s, country c, appfunctionality af
WHERE app.name=s.name AND app.name=av.name AND av.country=c.code3 AND app.name=af.name
AND s.os='Android' AND c.continent_name='Europe' AND af.functionality='contact tracing';","10, [('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(c.name) >1
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c.name
FROM country c, country c1
WHERE c.name=c1.name AND c.continent_code <> c1.continent_code
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT app.name
FROM country c, available av, (app app LEFT OUTER JOIN store s ON app.name=s.name)
WHERE app.name=av.name AND av.country=c.code3
AND continent_name='Oceania'
AND s.os IS NOT NULL
ORDER BY app.name;","12, [('#BeatCovid19Now',), ('Awhina - informing health workers',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('Covid-19  Armenia',), ('COVID VS',), ('CovidCare - Symptom monitor',), ('COVIDSafe',), ('healthdirect',), ('MyAus COVID-19',)]",,,"SELECT c.name, count(av.name) AS ct
FROM country c, available av
WHERE av.country=c.code3
GROUP BY c.name
ORDER BY ct DESC
LIMIT (6);","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, count(av.name) AS ct
FROM country c, available av
WHERE av.country=c.code3
GROUP BY c.name
ORDER BY ct DESC
LIMIT (7);","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, count(av.name) AS ct
FROM country c, available av
WHERE av.country=c.code3
GROUP BY c.name
ORDER BY ct DESC
LIMIT (8);","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, count(av.name) AS ct
FROM country c, available av
WHERE av.country=c.code3
GROUP BY c.name
ORDER BY ct DESC
LIMIT (16);","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1 (
	A VARCHAR(50) PRIMARY KEY NOT NULL,
	B VARCHAR(50) NOT NULL,
	C VARCHAR(50) NOT NULL,
	D VARCHAR(50) NOT NULL
);
CREATE TABLE IF NOT EXISTS E2 (
	G VARCHAR(50) PRIMARY KEY NOT NULL,
	H VARCHAR(50) NOT NULL,
	J VARCHAR(50) NOT NULL,
	K VARCHAR(50) NOT NULL
);
CREATE TABLE IF NOT EXISTS S (
	A VARCHAR(50) NOT NULL REFERENCES E1 (A) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
	G VARCHAR(50) NOT NULL REFERENCES E2 (G) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
	F VARCHAR(50) NOT NULL,
	PRIMARY KEY (A, G)
);",No output,Num. tables: 3; Num. not null: 11; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"E1 could be schools, S could be head of departments and E2 could be teachers. 
In this scenario, the columns could be:
A = School ID
B = Type of School (Private or Public)
C = Latitude of School
D = Longitude of School
F = Date which the teacher took up office
G = IC number of teacher
H = Date joined
J = Salary drawn
K = Sex (Male/Female)",No output,,
A0232015Y,"select distinct(continent_name),continent_code
from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select app.name app ,c.name
from app, available av,country c,appfunctionality af, store s1,store s2
where app.name=af.name
and app.name=av.name
and app.name=s1.name
and app.name=s2.name
and s1.os='iOS'
and s2.os='Android'
and af.functionality='contact tracing'
and av.country=c.code3
and c.continent_code='EU';","10, [('COVID-19.eus', 'Spain, Kingdom of'), ('Rakning C-19', 'Iceland, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Immuni', 'Italy, Italian Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('ProteGO Safe', 'Poland, Republic of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopCovid France', 'France, French Republic')]",,,"select name
from country
group by name
having count(*) >=2;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select distinct(c1.name)
from country c1, country c2
where c1.name=c2.name
and c1.continent_code<>c2.continent_code;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select app.name
from app
where not exists (
	select *
	from country c, available av
	where c.continent_name='Oceania'
	and av.country=c.code3
	and not exists (
	select *
	from store s
	where s.name=av.name
	and	s.name=app.name));","0, []",,,"select c.name as name, count(*) as count
from country c,available av,app
where c.code3=av.country
and app.name=av.name
group by c.name
order by count desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name as name, count(*) as count
from country c,available av,app
where c.code3=av.country
and app.name=av.name
group by c.name
order by count desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name as name, count(*) as count
from country c,available av,app
where c.code3=av.country
and app.name=av.name
group by c.name
order by count desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name as name, count(*) as count
from country c,available av,app
where c.code3=av.country
and app.name=av.name
group by c.name
order by count desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E1 (
A VARCHAR(16) NOT NULL unique,
B VARCHAR(64) NOT NULL,
C VARCHAR(64) NOT NULL unique,
D VARCHAR(64) NOT NULL unique,
primary key(A,C,D)
);    
CREATE TABLE E2 (
G VARCHAR(16) NOT NULL primary key,
H VARCHAR(64) NOT NULL,
J VARCHAR(64) NOT NULL,
K VARCHAR(64) NOT NULL
);   
CREATE TABLE S (
F VARCHAR(16) NOT NULL,	
A VARCHAR(16) NOT NULL REFERENCES E1(A),
C VARCHAR(64) NOT NULL REFERENCES E1(C),
D VARCHAR(64) NOT NULL REFERENCES E1(D),
G VARCHAR(16) NOT NULL,
primary key(A,C,D,G),
foreign key (G) REFERENCES E2(G)
	);",No output,Num. tables: 3; Num. not null: 13; Num. foreign keys defined: 4 (CHECK CODE) ; ,,"Table E1 can be interpreted as information of a house. Table E2 can be information of a person.
The relationship S is a buying contract between a person and a house.
One can buy (0,n) houses but a house can only have one buyer.
Attribute G can indentify an entity(ID number for a person in this example)
Attributes A and the combination of C and D identify entity E1.",No output,,
A0232016X,"SELECT continent_name, continent_code
FROM country","262, [('Asia', 'AS'), ('Europe', 'EU'), ('Antarctica', 'AN'), ('Africa', 'AF'), ('Oceania', 'OC'), ('Europe', 'EU'), ('Africa', 'AF'), ('North America', 'NA'), ('Europe', 'EU'), ('Asia', 'AS')]","Missing semicolon, CHECK CODE; ",,"ALTER TABLE available 
RENAME COLUMN name to app;
ALTER TABLE country
RENAME COLUMN name to country;
SELECT av.app, c.country
FROM available av, store s1, store s2, country c
WHERE av.app = s1.name
AND av.app = s2.name
AND s1.os = 'iOS'
AND s2.os = 'Android'
AND av.country = c.code3
AND av.country IN (
	SELECT code3
	FROM country
	WHERE continent_code = 'EU')
GROUP BY av.app, c.country","42, [('Korona ™nlem', 'Turkey, Republic of'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('Karantinas', 'Lithuania, Republic of'), ('Covidom Patient', 'France, French Republic'), ('GVA Responde', 'Spain, Kingdom of'), ('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('ProteGO Safe', 'Poland, Republic of'), ('?????????? ??????????', 'Russian Federation')]","Multiple semicolons detected, CHECK CODE; ",,"ALTER TABLE available 
RENAME COLUMN app to name;
ALTER TABLE country
RENAME COLUMN country to name;
SELECT name
FROM country
GROUP BY name
HAVING count(DISTINCT continent_name)>1","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Multiple semicolons detected, CHECK CODE; ",,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_code <> c2.continent_code","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]","Missing semicolon, CHECK CODE; ",,"SELECT DISTINCT av.name
FROM available av, country c, store s
WHERE av.country = c.code3
AND s.name = av.name
AND c.continent_name = 'Oceania'
AND NOT EXISTS (
	SELECT os
	FROM store
	WHERE os NOT in (
	SELECT DISTINCT os
	FROM store))","12, [('Bupa Aged Care Connect',), ('Covid-19  Armenia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',)]","Missing semicolon, CHECK CODE; ",,"SELECT c.name, count(av.name) 
FROM country c LEFT OUTER JOIN available av ON c.code3 = av.country
GROUP BY c.name
ORDER BY count(av.name) DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name, count(av.name) 
FROM country c LEFT OUTER JOIN available av ON c.code3 = av.country
GROUP BY c.name
ORDER BY count(av.name) DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name, count(av.name) 
FROM country c LEFT OUTER JOIN available av ON c.code3 = av.country
GROUP BY c.name
ORDER BY count(av.name) DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name, count(av.name) 
FROM country c LEFT OUTER JOIN available av ON c.code3 = av.country
GROUP BY c.name
ORDER BY count(av.name) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E1 (
A VARCHAR(32) NOT NULL,
B VARCHAR(32) NOT NULL,
C VARCHAR(32) NOT NULL,
D VARCHAR(32) NOT NULL,
PRIMARY KEY (A));
CREATE TABLE E2 (
G VARCHAR(32) NOT NULL,
H VARCHAR(32) NOT NULL,
J VARCHAR(32) NOT NULL,
K VARCHAR(32) NOT NULL,
PRIMARY KEY (G) );
CREATE TABLE S (
F VARCHAR(32) NOT NULL,
E1 VARCHAR(32) REFERENCES E1(A),
E2 VARCHAR(32) REFERENCES E2(G));",No output,Num. tables: 3; Num. not null: 9; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"One example in the real world is the emplyment physical examination records
E1 is the list of employees and E2 is the list of all addtional examinations other than basic ones. 
S is the costumers' service purchasing record.
In E1, A is the ID which can alone distinguish every employee.
B is employee's department.
C and D are employee's real name and cell phone number, which 
can only distinguish every employee together because there can be
peopele with same name and different people in history using the same number.
In E2, G is the name of all addtional examinations.
H is the category of each examination.
J is the name of clinics where the examination is conducted.
K is the date when this service is added to the list.
As for S, because every new employee is required to hand in a physical examination
report, the relationship between E1 and S is 1 to 1. And people can choose whether or not to take 
addtional examinations and which ones to take. The relationship between E2 and S is 0 to n.",No output,,
A0232022A,"select  distinct continent_name,continent_code from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select t1.name, t2.name from available as t1
left join country as t2
on t1.country = t2.code3
where t2.continent_name = 'Europe';","102, [('CovTracer', 'Cyprus, Republic of'), ('StopCOVID NI', 'United Kingdom of Great Britain & Northern Ireland'), ('Koronavirus MK', 'Macedonia, The Former Yugoslav Republic of'), ('GVA Coronavirus', 'Spain, Kingdom of'), ('COVID19 Sounds', 'United Kingdom of Great Britain & Northern Ireland'), ('geoHealthApp Covid19 Tracker', 'Switzerland, Swiss Confederation'), ('Covid Care Basel-Stadt', 'Switzerland, Swiss Confederation'), ('VoxCOVID', 'France, French Republic'), ('Home Quarantine (Kwarantanna domowa)', 'Poland, Republic of'), ('NHSGGC COVID-19', 'United Kingdom of Great Britain & Northern Ireland')]",,,"select name  from country 
group by name
having count(continent_name) > 1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select name from (
select  name, row_number() over (partition by name order by continent_name) as index
from country)t1
where t1.index >='2';","9, [('Armenia, Republic of',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select t1.name from available as t1
left join country as t2
on t1.country = t2.code3
left join store t3
on t1.name = t3.name
where t2.continent_name = 'Oceania';","20, [('Bupa Aged Care Connect',), ('healthdirect',), ('Awhina - informing health workers',), ('NZ COVID Tracer',), ('healthdirect',), ('COVIDSafe',), ('Coronavirus Australia',), ('COVID VS',), ('MyAus COVID-19',), ('Covid-19  Armenia',)]",,,"select t2.name as country, count(t1.name) as num from available as t1
left join country as t2
on t1.country = t2.code3
group by t2.name
order by num desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select t2.name as country, count(t1.name) as num from available as t1
left join country as t2
on t1.country = t2.code3
group by t2.name
order by num desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select t2.name as country, count(t1.name) as num from available as t1
left join country as t2
on t1.country = t2.code3
group by t2.name
order by num desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select t2.name as country, count(t1.name) as num from available as t1
left join country as t2
on t1.country = t2.code3
group by t2.name
order by num desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1 (
A VARCHAR(20) not null ,
B VARCHAR(20) not null ,
C VARCHAR(20) not null,
D VARCHAR(20) not null,
PRIMARY KEY (C,D));
create table IF NOT EXISTS E2 (
J VARCHAR(20) not null ,
K VARCHAR(20) not null ,
G VARCHAR(20) not null ,
F VARCHAR(20) not null ,
H VARCHAR(20) not null ,
FOREIGN KEY (F) REFERENCES s(F);
create table",No output,Num. tables: 3; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,,No output,,
A0232060Y,"SELECT distinct co.continent_name,co.continent_code FROM 
country co
order by co.continent_name desc;","7, [('South America', 'SA'), ('Oceania', 'OC'), ('North America', 'NA'), ('Europe', 'EU'), ('Asia', 'AS'), ('Antarctica', 'AN'), ('Africa', 'AF')]",,,"SELECT distinct st.name, c.name FROM 
country c,store st 
where c.continent_name= 'Europe'
and st.os = 'iOS'
or st.os = 'Android'","68809, [('COVID-19 West Bengal Government', 'Somalia, Somali Republic'), ('Medicine: diagnosis, clinical cases, TNM, ICD', 'Palau, Republic of'), ('COVID-19 Odisha', 'Chile, Republic of'), ('Test Yourself Goa', 'Solomon Islands'), ('JamCOVID19', 'Slovakia (Slovak Republic)'), ('Osler ePortfolio', 'Djibouti, Republic of'), ('CovidRadar.mx', 'Serbia, Republic of'), ('Smittestopp', 'Israel, State of'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Mediktor', 'Malaysia')]","Missing semicolon, CHECK CODE; ",,"SELECT distinct c.name FROM 
country c
where c.continent_code = 
group by c.name",No output,"Missing semicolon, CHECK CODE; ",,"SELECT distinct c.name FROM 
country c
where count(continent_code)=!count(c.name)
group by c.name",No output,"Aggregation is used, CHECK CODE; ",,"SELECT distinct av.name FROM 
available av
inner join country co on av.country = co.code3
where continent_code = 'OC'
and continent_name = 'Oceania'
intersect 
select distinct av.name FROM 
available av, store st
where st.os = 'iOS'
or st.os = 'Android'","12, [('CovidCare - Symptom monitor',), ('#BeatCovid19Now',), ('NZ COVID Tracer',), ('MyAus COVID-19',), ('Bupa Aged Care Connect',), ('Awhina - informing health workers',), ('Covid-19  Armenia',), ('COVIDSafe',), ('COVID VS',), ('TCC COVID Monitor',)]","Missing semicolon, CHECK CODE; ",,"Select co.name, count(av.name)
from country co
inner join available av on av.country = co.code3
group by co.name
order by count(av.name) desc limit 6","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","Select co.name, count(av.name)
from country co
inner join available av on av.country = co.code3
group by co.name
order by count(av.name) desc limit 7","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","Select co.name, count(av.name)
from country co
inner join available av on av.country = co.code3
group by co.name
order by count(av.name) desc limit 8","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","Select co.name, count(av.name)
from country co
inner join available av on av.country = co.code3
group by co.name
order by count(av.name) desc limit 16","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]","Missing semicolon, CHECK CODE; ",,"CREATE TABLE e1 (
A VARCHAR(64) PRIMARY KEY,
B VARCHAR(64) not null,
D VARCHAR(64) not null,
D VARCHAR(64) not null;
CREATE TABLE e2 (
J VARCHAR(64) not null,
K VARCHAR(64) not null,
G VARCHAR(64) PRIMARY KEY,
H VARCHAR(64) not null;
create table S (
F CHAR(8) NOT NULL,
e1C VARCHAR(32) not null,
e1D VARCHAR (32) not null,
e2G CHAR(8) NOT NULL,
e1A CHAR(8) NOT NULL,
Primary key(e1C,e1D,e2G,e1A),
FOREIGN KEY (e1C,e1D ) REFERENCES E1(C,D),
FOREIGN KEY (e1A) REFERENCES E1(A),
FOREIGN KEY (e2G) REFERENCES E2(G));",No output,Num. tables: 3; Num. not null: 11; Num. foreign keys defined: 3 (CHECK CODE) ; ,,,No output,,
A0232064R,"select distinct continent_name, continent_code from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select distinct available.name as app,country.name as cuontry
from public.available, public.store,public.country
where available.name=store.name
and available.country=country.code3
and country.name in
(select country.name from public.country
where country.continent_name='Europe'
)
and store.name in(
select store.name from public.store
group by store.name
having count(*)>1)
)",No output,"Missing semicolon, CHECK CODE; ",,"select name from country
group by name
having count(*)>1
order by name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"select name from country
group by name
having count(*)>1
order by name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]","Aggregation is used, CHECK CODE; ",,"select distinct available.name from available,country
where available.country=country.code3
and country.continent_name= 'Oceania'
and available.name in (
select store.name from store);","12, [('Bupa Aged Care Connect',), ('Covid-19  Armenia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',)]",,,"select c.name, count(available.name) as count 
from country c,available
where available.country=c.code3
group by c.name
order by count desc
limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count(available.name) as count 
from country c,available
where available.country=c.code3
group by c.name
order by count desc
limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name, count(available.name) as count 
from country c,available
where available.country=c.code3
group by c.name
order by count desc
limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name, count(available.name) as count 
from country c,available
where available.country=c.code3
group by c.name
order by count desc
limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1
(
	A  varchar(62)not null
	B  varchar(62)not null
    C  varchar(62)not null
    D varchar(62)not null
    primary key(C,D)
)
CREATE TABLE IF NOT EXISTS E2
(
	F varchar(62)not null
	G  varchar(62)not null primary key
	H  varchar(62)not null
    J  varchar(62)not null
    K varchar(62)not null
)",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 0; ,,"we can suppose the E1 is main party in one country, for example, People's Action in Singapore and Reform in USA.
Then the E2 is the country. Obviously, E1 is the weak entity and R can be described to 'belongs to'.
E1 has four attributes: A is the country name (E2.name) and B is the scale of the party, for example it owns 500 people who belong to the party.
At the same time , C and D are the party's name and its learder's name which can positioned the specific party using the two attributes.
E2 depicts the country: G is the country's name(in the world, country's name is unique) and works as the primary key.
H,J,K are the contient, climate and language the country use, all of which cannot be used to represant the country.
Additionally, F can be derived.",No output,,
A0232193L,"SELECT DISTINCT continent_name, continent_code
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name AS app, c.name AS country
FROM appfunctionality a, available b, country c, store d
WHERE a.name = b.name
AND b.country = c.code3
AND a.name = d.name
AND c.continent_name = 'Europe'
AND a.functionality = 'contact tracing'
AND d.os = 'iOS'
INTERSECT
SELECT a.name AS app, c.name AS country
FROM appfunctionality a, available b, country c, store d
WHERE a.name = b.name
AND b.country = c.code3
AND a.name = d.name
AND c.continent_name = 'Europe'
AND a.functionality = 'contact tracing'
AND d.os = 'Android';","10, [('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]",,,"SELECT B.name
FROM
(SELECT a.name as name, count(*) as num
FROM country a
GROUP BY a.name) b
WHERE num > 1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT a.name 
FROM country a, country b
WHERE a.name = b.name
AND a.continent_name <> b.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT a.name
FROM available a, country b, store c
WHERE a.country = b.code3
AND a.name = c.name
AND b.continent_name = 'Oceania'
AND c.os = 'Android' 
INTERSECT
SELECT a.name
FROM available a, country b, store c
WHERE a.country = b.code3
AND a.name = c.name
AND b.continent_name = 'Oceania'
AND c.os = 'iOS' ;","8, [('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',), ('MyAus COVID-19',), ('COVIDSafe',), ('TCC COVID Monitor',)]",,,"SELECT b.name AS name, count(*) AS num
FROM available a, country b
WHERE a.country = b.code3
GROUP BY b.name
ORDER BY num DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT b.name AS name, count(*) AS num
FROM available a, country b
WHERE a.country = b.code3
GROUP BY b.name
ORDER BY num DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT b.name AS name, count(*) AS num
FROM available a, country b
WHERE a.country = b.code3
GROUP BY b.name
ORDER BY num DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT b.name AS name, count(*) AS num
FROM available a, country b
WHERE a.country = b.code3
GROUP BY b.name
ORDER BY num DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E2(
    J TEXT NOT NULL,
    K TEXT NOT NULL,
    H TEXT NOT NULL,
    G TEXT PRIMARY KEY
);
CREATE TABLE E1(
    A TEXT,
    B TEXT NOT NULL,
    C TEXT,
    D TEXT,
    F TEXT NOT NULL,
    G TEXT NOT NULL,
    PRIMARY KEY(A, C, D),
    FOREIGN KEY (G) REFERENCES E2(G)
);",No output,Num. tables: 2; Num. not null: 6; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"Entity set E1 includes the information of stores in one city. 
Entity set E2 includes the information of owners who own at least one store in any cities.
To be specific, the candidate key of E2 is owners' names(G). E2(owners) has three attributes, 'age'(J), 'gender'(K), 'education'(H).
The candidate key of E1 is each store' 'name'(A), 'district'(C) and 'street_name'(D). A city has many districts, and each district has many streets. Different districts may have streets with the same
name. Thus, stores' names. districts and street names jointly identify a specific store. Moreover, each store also has one more attribute, type(B), which shows the type of things it sells.
As for the relationship set S, it means the owners in E2 may own all kinds of number of stores in E1, from 0 to a large number of stores(participation constraints(0,n)). Moreover, each store must have only one owner(participation constraints(1,1)).
Relationship set S also has one attribute F, which is length_of_ownership. It indicates how much owners have owned the corresponding stores.",No output,,
A0232194J,"SELECT DISTINCT continent_name, continent_code FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT a.name, c.name
FROM app a, available av, country c, store s1, store s2, appfunctionality af
WHERE a.name=av.name
AND av.country=c.code3
AND c.continent_code='EU'
AND a.name=af.name
AND a.name=s1.name
AND a.name=s2.name
AND s1.os='Android'
AND s2.os='iOS'
AND af.functionality='contact tracing';","10, [('COVID-19.eus', 'Spain, Kingdom of'), ('Rakning C-19', 'Iceland, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Immuni', 'Italy, Italian Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('ProteGO Safe', 'Poland, Republic of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopCovid France', 'France, French Republic')]",,,"SELECT name FROM country
GROUP BY name
HAVING count(*)>1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.continent_name<>c2.continent_name
AND c1.name=c2.name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"SELECT a.name FROM
app a, available av, store s1, store s2, country c
WHERE a.name=av.name
AND a.name=s1.name
AND a.name=s2.name
AND s1.os='Android'
AND s2.os='iOS'
AND av.country=c.code3
AND c.continent_code='OC';","8, [('Bupa Aged Care Connect',), ('NZ COVID Tracer',), ('healthdirect',), ('Coronavirus Australia',), ('MyAus COVID-19',), ('#BeatCovid19Now',), ('COVIDSafe',), ('TCC COVID Monitor',)]",,,"SELECT c.name, count(*)
FROM app a, available av, country c
WHERE a.name=av.name AND av.country=c.code3
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]","SELECT c.name, count(*)
FROM app a, available av, country c
WHERE a.name=av.name AND av.country=c.code3
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 17;","17, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Germany, Federal Republic of', 7)]","SELECT c.name, count(*)
FROM app a, available av, country c
WHERE a.name=av.name AND av.country=c.code3
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 18;","18, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8), ('Indonesia, Republic of', 8), ('Germany, Federal Republic of', 7)]","SELECT c.name, count(*)
FROM app a, available av, country c
WHERE a.name=av.name AND av.country=c.code3
GROUP BY c.name
ORDER BY count(*) DESC
LIMIT 116;","87, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Argentina, Argentine Republic', 7)]",,,"CREATE TABLE IF NOT EXISTS E1 (
	A TEXT NOT NULL ,
	B TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL,
	PRIMARY KEY (A,C,D));
CREATE TABLE IF NOT EXISTS E2 (
	J TEXT NOT NULL,
	K TEXT NOT NULL,
	G TEXT PRIMARY KEY,
	H TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS S(
	F TEXT NOT NULL);",No output,Num. tables: 3; Num. not null: 8; Num. foreign keys defined: 0; ,,"For instance, the entity E1 could be applicants of a job. A is the name of applicants, B is age, C is email address,
and D is phone number. Name, email address, and phone number together is the primary key.
The entity E2 is the company, J is type of company, K is formed year of the company, H is the existing department of 
the company, and G is the registration number, which is a primary key to determine the company.
The relation is offer. Applicants can only accept one offer from a company, and company could decide to give zero or many 
offers to applicants.",No output,,
A0232195H,"Select continent_name, continent_code
From country;","262, [('Asia', 'AS'), ('Europe', 'EU'), ('Antarctica', 'AN'), ('Africa', 'AF'), ('Oceania', 'OC'), ('Europe', 'EU'), ('Africa', 'AF'), ('North America', 'NA'), ('Europe', 'EU'), ('Asia', 'AS')]",,,"Select v.name as app, c.name as country
From available v , country c, store s1, store s2
Where c.code3=v.country AND s1.name=v.name AND s2.name=v.name
AND c.continent_code='EU'
AND s1.os='iOS'
AND s2.os='Android';","42, [('Care Workforce', 'United Kingdom of Great Britain & Northern Ireland'), ('Moje ezdravie', 'Slovakia (Slovak Republic)'), ('COVID Symptom Study', 'United Kingdom of Great Britain & Northern Ireland'), ('????????? ???? ???????????', 'Russian Federation'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('CoronaTest Navarra', 'Spain, Kingdom of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('CORONAVIRUS - ???????????', 'Ukraine'), ('Luscii', 'Netherlands, Kingdom of the'), ('COVID Radar', 'Netherlands, Kingdom of the')]",,,"Select c.name as name
From country c
Group by c.name
Having count(Distinct c.continent_name)>1;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"Select DISTINCT c1.name as name
From country c1, country c2
Where c1.continent_code<>c2.continent_code
AND c1.name=c2.name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"Select DISTINCT v.name as name
From available v, country c
Where v.country=c.code3
AND c.continent_name='Oceania';","12, [('Bupa Aged Care Connect',), ('Covid-19  Armenia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('TCC COVID Monitor',), ('#BeatCovid19Now',), ('COVID VS',), ('Coronavirus Australia',), ('healthdirect',), ('NZ COVID Tracer',)]",,,"Select c.name as name, count (v.name)
From country c, available v
Where v.country=c.code3
Group by c.name
ORDER BY count (v.name) Desc
Limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","Select c.name as name, count (v.name)
From country c, available v
Where v.country=c.code3
Group by c.name
ORDER BY count (v.name) Desc
Limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","Select c.name as name, count (v.name)
From country c, available v
Where v.country=c.code3
Group by c.name
ORDER BY count (v.name) Desc
Limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","Select c.name as name, count (v.name)
From country c, available v
Where v.country=c.code3
Group by c.name
ORDER BY count (v.name) Desc
Limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"create table E2(
J TEXT not null,
K TEXT not null,
H TEXT not null,
G TEXT PRIMARY KEY);
create table E1S(
F TEXT not null,
A TEXT not null,
B TEXT not null,
C TEXT not null,
D TEXT not null,
G TEXT not null,
Primary key (A,C,D),
Foreign key (G) references E2(G));",No output,Num. tables: 2; Num. not null: 9; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"E1: Laptops S: is bought by E2: students
Attrubute:
A: laptop brand; B: color; C: Date of buying; D: Laptop model
F: Shops that the students bought the laptop
G: student's identification number
J: student's gender
K: Student's name
H: Student's address
Participant constraint explained: usually one laptop can only be bought by one student;
But student can buy from 0 to n laptops based on their willingness;
Candidate keys explained: laptops are similar so one attibute alone can't identify the exact laptop;
usually laptop's brand, model and the date of buying can be used to identify the laptop;
For students, the idenfitication number issued by government can idenfify the students,
other attributes like gender, names and addresses are too vague to be candidat keys.",No output,,
A0232196E,"select distinct continent_name, continent_code from country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"select distinct av.name as app, c.name as country
from available av join country c on av.country = c.code3
where (av.name, c.name) in (select av.name, c.name
from store s join available av on s.name = av.name 
join country c on c.code3 = av.country where s.os='iOS')
and (av.name, c.name) in (select av.name, c.name
from store s join available av on s.name = av.name 
join country c on c.code3 = av.country where s.os='Android')
;","136, [('#BeatCovid19Now', 'Australia, Commonwealth of'), ('( Tetamman ) ????', 'Saudi Arabia, Kingdom of'), ('???', 'Ukraine'), ('??? ???', 'Egypt, Arab Republic of'), ('????? ????', 'Korea, Republic of'), ('????? ?????', 'Korea, Republic of'), ('????????? ???? ???????????', 'Russian Federation'), ('?????????? ??????????', 'Russian Federation'), ('????????????????', 'Thailand, Kingdom of'), ('???19 ?? ??', 'Korea, Republic of')]",,,"select c.name from country c group by c.name 
having count(c.continent_name) > 1;","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select distinct c.name from country c, country cc
where c.name = cc.name and c.continent_name <> cc.continent_name;","8, [('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Russian Federation',), ('Cyprus, Republic of',)]",,,"select distinct s.name, s.os from store s natural join available av 
join country c on av.country = c.code3 
where c.continent_name = 'Oceania' order by s.name;","20, [('#BeatCovid19Now', 'Android'), ('#BeatCovid19Now', 'iOS'), ('Awhina - informing health workers', 'Android'), ('Bupa Aged Care Connect', 'Android'), ('Bupa Aged Care Connect', 'iOS'), ('Coronavirus Australia', 'Android'), ('Coronavirus Australia', 'iOS'), ('Covid-19  Armenia', 'iOS'), ('COVID VS', 'iOS'), ('CovidCare - Symptom monitor', 'iOS')]",,,"select c.name, count(*) from available av 
join country c on c.code3 = av.country
group by c.name
order by count desc limit 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","select c.name, count(*) from available av 
join country c on c.code3 = av.country
group by c.name
order by count desc limit 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","select c.name, count(*) from available av 
join country c on c.code3 = av.country
group by c.name
order by count desc limit 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","select c.name, count(*) from available av 
join country c on c.code3 = av.country
group by c.name
order by count desc limit 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E1 (
C VARCHAR(10) NOT NULL unique,
D VARCHAR(10) NOT NULL unique,
A VARCHAR(10) NOT NULL unique,
B VARCHAR(10) NOT NULL, 
PRIMARY KEY (C, D));
CREATE TABLE E2 (
J VARCHAR(10) NOT NULL,
K VARCHAR(10) NOT NULL,
G VARCHAR(10) PRIMARY KEY,
H VARCHAR(10) NOT NULL
);
CREATE TABLE S (
F VARCHAR(10) NOT NULL PRIMARY KEY unique,
C VARCHAR(10) NOT NULL REFERENCES E1 (C),
D VARCHAR(10) NOT NULL REFERENCES E1 (D),
G VARCHAR(10) NOT NULL REFERENCES E2 (G));",No output,Num. tables: 3; Num. not null: 11; Num. foreign keys defined: 3 (CHECK CODE) ; ,,"E1 could be book, C D are the book's name and its author name, as 
they can be combined to identify the book (assume the name and author name
are unique in this case). A could be a unique numeric identifier of the book
and B could be its genre or book type. 
E2 could be students or people who
borrow books. G could be their identification number, J, K, H could be their
attributes like age, gender and nationality.
S is the relationship of borrowing book. A book can only be borrowed by one 
at a time, so its a 1-to-1 relationship, whereas a student can borrow several
books or no books, so it's a (0, n) relationship.
C, D column in S table can be used to identify the book, and G can be used to 
identify the borrower. F its a unique number that stands for this borrow action.",No output,,
A0232321Y,"SELECT DISTINCT c.continent_name,c.continent_code
FROM country c;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT  av.name AS APP, c.name AS country
FROM store s1, country c, available av, store s2, appfunctionality af
WHERE s1.name = av.name
AND s2.name = av.name
AND s1.name = s2.name
AND av.name = af.name
AND af.functionality = 'contact tracing'
AND av.country = c.code3
AND c.continent_name = 'Europe'
AND s1.os = 'iOS'
AND s2.os = 'Android';","10, [('COVID-19.eus', 'Spain, Kingdom of'), ('Rakning C-19', 'Iceland, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Immuni', 'Italy, Italian Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('ProteGO Safe', 'Poland, Republic of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopCovid France', 'France, French Republic')]",,,"SELECT c.name
FROM country c
GROUP BY c.name
HAVING COUNT(*)>1
ORDER BY c.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name
AND c1.continent_code <> c2.continent_code
ORDER BY c1.name;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT app.name
FROM app, available av, country c
WHERE app.name = av.name
AND av.country = c.code3
AND c.continent_name = 'Oceania'
AND NOT EXISTS(
	SELECT *
	FROM available av1
	WHERE av1.name = app.name
	AND NOT EXISTS(
		SELECT DISTINCT s.os
		FROM store s
		WHERE s.name = av.name
		));","12, [('TCC COVID Monitor',), ('healthdirect',), ('CovidCare - Symptom monitor',), ('Coronavirus Australia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('NZ COVID Tracer',), ('Covid-19  Armenia',)]",,,"SELECT c.name AS country, COUNT(av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(av.name) DESC LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c.name AS country, COUNT(av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(av.name) DESC LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT c.name AS country, COUNT(av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(av.name) DESC LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT c.name AS country, COUNT(av.name)
FROM country c, available av
WHERE av.country = c.code3
GROUP BY c.name
ORDER BY COUNT(av.name) DESC LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E1 (
A TEXT PRIMARY KEY,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
UNIQUE (C,D)
);
CREATE TABLE E2 (
J TEXT NOT NULL,
K TEXT NOT NULL,
H TEXT NOT NULL,
G TEXT PRIMARY KEY
);
CREATE TABLE S(
A TEXT PRIMARY KEY REFERENCES E1(A),
F TEXT NOT NULL,
G TEXT NOT NULL REFERENCES E2(G)
);",No output,Num. tables: 3; Num. not null: 8; Num. foreign keys defined: 2 (CHECK CODE) ; ,,"We can assume that E1 is fresh students of a university and E2 is high schools.
Graduation is the S.Every student have a graduated high school, 
and a high school can have many graduates. So it is a one to many relationship, 
so its primary key is students'IDs.
Graduation can also has attribute year(F).
Students can be identified by their National IDs (A), and can also be indentified by 
their first name and last name as C and D. It can also has attribute such as age, B.
High schools can be identified by school names(G), and they has address, number of students,
starting year as J K H.",No output,,
A0232322X,"SELECT DISTINCT c.continent_name,  c.continent_code
FROM country c","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]","Missing semicolon, CHECK CODE; ",,"SELECT s.name as app, c.name as country
FROM store s, country c, appfunctionality af, app a, available av
WHERE s.os = 'iOS' 
AND c.continent_name = 'Europe'
AND af.functionality = 'contact tracing'
AND s.name = a.name
AND af.name = a.name
AND av.name = a.name
AND c.code3 = av.country
GROUP BY s.name,c.name
INTERSECT
SELECT s.name, c.name
FROM store s, country c, appfunctionality af, app a,available av
WHERE s.os = 'Android' 
AND c.continent_name = 'Europe'
AND af.functionality = 'contact tracing'
AND s.name = a.name
AND af.name = a.name
AND av.name = a.name
AND c.code3 = av.country
GROUP BY s.name,c.name","10, [('StopCovid France', 'France, French Republic'), ('Immuni', 'Italy, Italian Republic'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('ProteGO Safe', 'Poland, Republic of'), ('Rakning C-19', 'Iceland, Republic of'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('COVID-19.eus', 'Spain, Kingdom of'), ('SwissCovid', 'Switzerland, Swiss Confederation')]","Missing semicolon, CHECK CODE; ",,"SELECT c.name
FROM country c, country c1
WHERE c.name = c1.name
GROUP BY c.name
HAVING COUNT(c.name) >1","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]","Missing semicolon, CHECK CODE; ",,"SELECT c.name
FROM country c
WHERE c.name = c.name
GROUP BY c.name
HAVING count(c.name) >1","8, [('Georgia',), ('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Turkey, Republic of',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Cyprus, Republic of',)]","Aggregation is used, CHECK CODE; ",,"SELECT  a.name
FROM country c, app a, available av
WHERE c.continent_name = 'Oceania'
AND av.name = a.name
AND av.country = c.code3","12, [('TCC COVID Monitor',), ('healthdirect',), ('CovidCare - Symptom monitor',), ('Coronavirus Australia',), ('MyAus COVID-19',), ('Awhina - informing health workers',), ('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('NZ COVID Tracer',), ('Covid-19  Armenia',)]","Missing semicolon, CHECK CODE; ",,"SELECT  c.name, COUNT(a.name)
FROM country c,  available av,  app a 
WHERE c.code3 = av.country
AND av.name = a.name
GROUP BY c.name
ORDER BY COUNT(a.name)DESC
LIMIT 6;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT  c.name, COUNT(a.name)
FROM country c,  available av,  app a 
WHERE c.code3 = av.country
AND av.name = a.name
GROUP BY c.name
ORDER BY COUNT(a.name)DESC
LIMIT 7;","7, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10)]","SELECT  c.name, COUNT(a.name)
FROM country c,  available av,  app a 
WHERE c.code3 = av.country
AND av.name = a.name
GROUP BY c.name
ORDER BY COUNT(a.name)DESC
LIMIT 8;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Australia, Commonwealth of', 8)]","SELECT  c.name, COUNT(a.name)
FROM country c,  available av,  app a 
WHERE c.code3 = av.country
AND av.name = a.name
GROUP BY c.name
ORDER BY COUNT(a.name)DESC
LIMIT 16;","16, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Russian Federation', 10), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7)]",,,"CREATE TABLE E2(
	G TEXT PRIMARY KEY,
	F TEXT NOT NULL);
CREATE TABLE E1_S(
	A TEXT NOT NULL,
	C TEXT NOT NULL,
	D TEXT NOT NULL, 
	FOREIGN KEY (A) REFERENCES E2(G)
	PRIMARY KEY(A,C));",No output,Num. tables: 2; Num. not null: 4; Num. foreign keys defined: 1 (CHECK CODE) ; ,,"Real world example as follows:
E2 - Parliament member
E1 - Government Ministries
S - Heads
A - Ministry ID
B - Ministry Office
C - Ministry State
D - Ministry Country
F - start date
J- member name
K- member state
G - member ID
H - member party
Candidate Keys - 
For E1 - (A,C,D) 
For E2 - G 
Participation constraints  as follows:
Relationship Set S: one to many relationship from E2 to E1
Entity Set E1: (1,1)
Entity Set E2: (0,n)",No output,,
sample,"SELECT DISTINCT continent_name, continent_code 
FROM country;","7, [('Africa', 'AF'), ('Europe', 'EU'), ('South America', 'SA'), ('Asia', 'AS'), ('North America', 'NA'), ('Oceania', 'OC'), ('Antarctica', 'AN')]",,,"SELECT  a.name as app, c.name as country
FROM appfunctionality a, available av, country c, store s1, store s2
WHERE a.name=av.name
AND av.country=c.code3
AND c.continent_name='Europe'
AND a.functionality = 'contact tracing'
AND a.name=s1.name
AND s1.os='iOS'
AND a.name=s2.name
AND s2.os='Android';","10, [('COVID-19.eus', 'Spain, Kingdom of'), ('Rakning C-19', 'Iceland, Republic of'), ('Stopp Corona', 'Austria, Republic of'), ('Corona-Warn-App', 'Germany, Federal Republic of'), ('Immuni', 'Italy, Italian Republic'), ('StopKorona!', 'Macedonia, The Former Yugoslav Republic of'), ('SwissCovid', 'Switzerland, Swiss Confederation'), ('ProteGO Safe', 'Poland, Republic of'), ('Apturi Covid Latvia - SPKC', 'Latvia, Republic of'), ('StopCovid France', 'France, French Republic')]",,,"SELECT c1.name
FROM country c1
GROUP BY c1.name
HAVING count(DISTINCT c1.continent_name) >1;","8, [('Armenia, Republic of',), ('Azerbaijan, Republic of',), ('Cyprus, Republic of',), ('Georgia',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Turkey, Republic of',), ('United States Minor Outlying Islands',)]",,,"SELECT DISTINCT c1.name
FROM country c1, country c2
WHERE c1.name = c2.name 
AND c1.continent_name < c2.continent_name;","8, [('Turkey, Republic of',), ('Azerbaijan, Republic of',), ('United States Minor Outlying Islands',), ('Kazakhstan, Republic of',), ('Russian Federation',), ('Georgia',), ('Cyprus, Republic of',), ('Armenia, Republic of',)]",,,"SELECT a.name
FROM app a, available av, country c
WHERE a.name = av.name 
AND av.country = c.code3
AND c.continent_name='Oceania'
AND NOT EXISTS (SELECT *
 FROM store s1
 WHERE 
 NOT EXISTS (SELECT * 
  FROM store s2
  WHERE s2.name = a.name
  AND s1.os = s2.os));","8, [('TCC COVID Monitor',), ('healthdirect',), ('Coronavirus Australia',), ('MyAus COVID-19',), ('#BeatCovid19Now',), ('Bupa Aged Care Connect',), ('NZ COVID Tracer',), ('COVIDSafe',)]",,,"SELECT c1.name, count(a1.name) as count
 FROM (SELECT DISTINCT c3.name, c3.code3 FROM country c3) AS c1 
    LEFT OUTER JOIN available a1 
    ON c1.code3 = a1.country
 GROUP BY c1.name
 	HAVING COUNT(a1.name) IN
( SELECT DISTINCT COUNT(a2.name) 
 FROM (SELECT DISTINCT c4.name, c4.code3 FROM country c4) AS c2 
    LEFT OUTER JOIN available a2 
    ON c2.code3 = a2.country
 GROUP BY c2.name
 ORDER BY count DESC
 LIMIT 6)
 ORDER BY count DESC;","6, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14)]","SELECT c1.name, count(a1.name) as count
 FROM (SELECT DISTINCT c3.name, c3.code3 FROM country c3) AS c1 
    LEFT OUTER JOIN available a1 
    ON c1.code3 = a1.country
 GROUP BY c1.name
 	HAVING COUNT(a1.name) IN
( SELECT DISTINCT COUNT(a2.name) 
 FROM (SELECT DISTINCT c4.name, c4.code3 FROM country c4) AS c2 
    LEFT OUTER JOIN available a2 
    ON c2.code3 = a2.country
 GROUP BY c2.name
 ORDER BY count DESC
 LIMIT 7)
 ORDER BY count DESC;","8, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8)]","SELECT c1.name, count(a1.name) as count
 FROM (SELECT DISTINCT c3.name, c3.code3 FROM country c3) AS c1 
    LEFT OUTER JOIN available a1 
    ON c1.code3 = a1.country
 GROUP BY c1.name
 	HAVING COUNT(a1.name) IN
( SELECT DISTINCT COUNT(a2.name) 
 FROM (SELECT DISTINCT c4.name, c4.code3 FROM country c4) AS c2 
    LEFT OUTER JOIN available a2 
    ON c2.code3 = a2.country
 GROUP BY c2.name
 ORDER BY count DESC
 LIMIT 8)
 ORDER BY count DESC;","13, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Italy, Italian Republic', 7), ('Argentina, Argentine Republic', 7)]","SELECT c1.name, count(a1.name) as count
 FROM (SELECT DISTINCT c3.name, c3.code3 FROM country c3) AS c1 
    LEFT OUTER JOIN available a1 
    ON c1.code3 = a1.country
 GROUP BY c1.name
 	HAVING COUNT(a1.name) IN
( SELECT DISTINCT COUNT(a2.name) 
 FROM (SELECT DISTINCT c4.name, c4.code3 FROM country c4) AS c2 
    LEFT OUTER JOIN available a2 
    ON c2.code3 = a2.country
 GROUP BY c2.name
 ORDER BY count DESC
 LIMIT 16)
 ORDER BY count DESC;","253, [('United States of America', 65), ('India, Republic of', 52), ('Mexico, United Mexican States', 21), ('Brazil, Federative Republic of', 17), ('Spain, Kingdom of', 16), ('United Kingdom of Great Britain & Northern Ireland', 14), ('Indonesia, Republic of', 8), ('Australia, Commonwealth of', 8), ('Germany, Federal Republic of', 7), ('Switzerland, Swiss Confederation', 7)]",,,"CREATE TABLE E1S (
A TEXT PRIMARY KEY,
B TEXT NOT NULL,
C TEXT NOT UNIQUE NOT NULL,
D TEXT NOT UNIQUE NOT NULL,
F TEXT NOT NULL,
G TEXT REFERENCES E2(G));
CREATE TABLE E2 (
J TEXT,
K TEXT NOT NULL,
G TEXT PRIMARY KEY,
H TEXT NOT NULL);",No output,Num. tables: 2; Num. not null: 6; Num. foreign keys defined: 1 (CHECK CODE) ; ,,Omitted.,No output,,
